<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_BR3kkLFzEeeCH50Lr9AhYw" name="HW06_controller">
    <eAnnotations xmi:id="_BU9U0LFzEeeCH50Lr9AhYw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_BU9U0bFzEeeCH50Lr9AhYw" source="codegen">
        <details xmi:id="_BU9U0rFzEeeCH50Lr9AhYw" key="codegenDirectory" value="/HW06/src"/>
        <details xmi:id="_BzoN0LFzEeeCH50Lr9AhYw" key="AssociatedSourceCode" value="/HW06/src/controller/MusicPlayerController.java;2967067196/1;/HW06/src/model/IModel2ViewAdapter.java;4041129402/1;/HW06/src/model/MusicPlayerModel.java;1669259375/1;/HW06/src/provided/abcParser/ABCParser.java;3897219377/1;/HW06/src/provided/music/APhraseVisitor.java;2456285939/1;/HW06/src/provided/music/Chord.java;35896074/1;/HW06/src/provided/music/DecoratorSeqList.java;227833273/1;/HW06/src/provided/music/FineToggleDecoratorSeqList.java;3225370767/1;/HW06/src/provided/music/Header.java;2532731710/1;/HW06/src/provided/music/INote.java;3583161323/1;/HW06/src/provided/music/IPhrase.java;366605851/1;/HW06/src/provided/music/IPhraseVisitor.java;3703781995/1;/HW06/src/provided/music/IPhraseVisitorCmd.java;2574507730/1;/HW06/src/provided/music/ISeqList.java;2168510769/1;/HW06/src/provided/music/MTSeqList.java;2810010473/1;/HW06/src/provided/music/NESeqList.java;243105234/1;/HW06/src/provided/music/Note.java;3187409944/1;/HW06/src/provided/music/NoteCollection.java;1016744665/1;/HW06/src/provided/music/ToggleDecoratorSeqList.java;2539597070/1;/HW06/src/provided/music/Triplet.java;1836535983/1;/HW06/src/provided/music/Tuplet.java;2612016310/1;/HW06/src/provided/music/visitor/playerAlgo.java;3128335926/1;/HW06/src/provided/music/visitor/toStringAlgo.java;901782575/1;/HW06/src/provided/player/ISequencePlayerStatus.java;669092276/1;/HW06/src/provided/player/SequencePlayer.java;3356128105/1;/HW06/src/provided/player/SequencePlayer2.java;3992436622/1;/HW06/src/provided/token/ATokVisitor.java;76293018/1;/HW06/src/provided/token/ITokVisitor.java;152834022/1;/HW06/src/provided/token/ITokVisitorCmd.java;1454883899/1;/HW06/src/provided/token/ITokenFactory.java;3990063285/1;/HW06/src/provided/token/Token.java;2142793123/1;/HW06/src/provided/token/TokenFactory.java;4005879304/1;/HW06/src/provided/token/tokenizer/ABCTokenizer.java;4148226813/1;/HW06/src/provided/token/tokenizer/IStringTokenizer.java;2393201612/1;/HW06/src/provided/token/tokenizer/ITokenizer.java;2123229769/1;/HW06/src/provided/token/tokenizer/StringTokenizer.java;1601263969/1;/HW06/src/provided/util/ABCInstrument.java;2809014576/1;/HW06/src/provided/util/ABCUtil.java;4259683412/1;/HW06/src/provided/util/KeySignature.java;1152315575/1;/HW06/src/view/IView2ModelControlAdapter.java;1470504104/1;/HW06/src/view/MusicPlayerView.java;1174184379/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_Bkb7QLFzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_Bkb7QbFzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_Bkb7QrFzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_BkciULFzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_BkciUbFzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_BkciUrFzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_BkciU7FzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_BkciVLFzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_BkciVbFzEeeCH50Lr9AhYw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_BkdJYLFzEeeCH50Lr9AhYw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_BkdJYbFzEeeCH50Lr9AhYw" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_Bk-GwLFzEeeCH50Lr9AhYw" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_BoAMorFzEeeCH50Lr9AhYw" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_BoAzsbFzEeeCH50Lr9AhYw" name="ActionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BnjgsLFzEeeCH50Lr9AhYw" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoAMoLFzEeeCH50Lr9AhYw" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoDP87FzEeeCH50Lr9AhYw" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoD3BbFzEeeCH50Lr9AhYw" name="Color"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Bkha0LFzEeeCH50Lr9AhYw" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_BnnyILFzEeeCH50Lr9AhYw" name="Hashtable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_BnoZMbFzEeeCH50Lr9AhYw" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoAzs7FzEeeCH50Lr9AhYw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoJ9oLFzEeeCH50Lr9AhYw" name="Stack"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BobDYLFzEeeCH50Lr9AhYw" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Bk2yALFzEeeCH50Lr9AhYw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_Bn7UJLFzEeeCH50Lr9AhYw" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bn77MbFzEeeCH50Lr9AhYw" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bn77M7FzEeeCH50Lr9AhYw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bn8iQbFzEeeCH50Lr9AhYw" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bn8iQ7FzEeeCH50Lr9AhYw" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bn8iRbFzEeeCH50Lr9AhYw" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bn9JUbFzEeeCH50Lr9AhYw" name="StreamTokenizer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BoLLwLFzEeeCH50Lr9AhYw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_BoLLwbFzEeeCH50Lr9AhYw" name="Object"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_BocRgLFzEeeCH50Lr9AhYw" name="Character"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BkdJYrFzEeeCH50Lr9AhYw" name="model">
      <packagedElement xmi:type="uml:Interface" xmi:id="_BlaysLFzEeeCH50Lr9AhYw" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_BpD8krFzEeeCH50Lr9AhYw">
          <body>@author Alexander Hansen
@author Yiqing Lu
the IModel2ViewAdapter interface.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_BlaysbFzEeeCH50Lr9AhYw" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_BlaysLFzEeeCH50Lr9AhYw" isReadOnly="true" association="_BpOUoLFzEeeCH50Lr9AhYw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BlaysrFzEeeCH50Lr9AhYw" value="new IModel2ViewAdapter() {&#xA;&#x9;&#x9;public SequencePlayer2 getPlayer() {&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Blays7FzEeeCH50Lr9AhYw" name="player" type="_Bl5T0LFzEeeCH50Lr9AhYw" isReadOnly="true" association="_BpO7sbFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_BlbZwLFzEeeCH50Lr9AhYw" name="MusicPlayerModel">
        <ownedComment xmi:id="_BpD8k7FzEeeCH50Lr9AhYw">
          <body>@author Alexander Hansen
@author Yiqing Lu
the ball world model class</body>
        </ownedComment>
        <ownedAttribute xmi:id="_BohKALFzEeeCH50Lr9AhYw" name="player" type="_Bl5T0LFzEeeCH50Lr9AhYw" isReadOnly="true" association="_BpQJ07FzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_BohKAbFzEeeCH50Lr9AhYw" name="_iModel2View" visibility="private" type="_BlaysLFzEeeCH50Lr9AhYw" association="_BpQw4bFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_BohKA7FzEeeCH50Lr9AhYw" name="fileName" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BohKBbFzEeeCH50Lr9AhYw" name="phrase" visibility="private" type="_Blm_8bFzEeeCH50Lr9AhYw" association="_BpQw5LFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_BohKB7FzEeeCH50Lr9AhYw" name="make_playable" visibility="private" type="_Bnku0LFzEeeCH50Lr9AhYw" association="_BpRX8LFzEeeCH50Lr9AhYw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo4WZrFzEeeCH50Lr9AhYw" name="MusicPlayerModel" specification="_BnlV4LFzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_Bo4WZ7FzEeeCH50Lr9AhYw" name="iModel2View" type="_BlaysLFzEeeCH50Lr9AhYw"/>
          <ownedParameter xmi:id="_Bo4WaLFzEeeCH50Lr9AhYw" type="_BlbZwLFzEeeCH50Lr9AhYw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>_iModel2View = iModel2View;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo4WabFzEeeCH50Lr9AhYw" name="loadFile" specification="_BlcA0LFzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_Bo4WarFzEeeCH50Lr9AhYw" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Bo4Wa7FzEeeCH50Lr9AhYw" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.fileName = &quot;/songs/&quot; + filename + &quot;.abc&quot;;
		return ABCUtil.Singleton.getFileContents(this.fileName);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo49cLFzEeeCH50Lr9AhYw" name="parseFile" specification="_BlcA07FzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_Bo49cbFzEeeCH50Lr9AhYw" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>NESeqList.setToStringAlgo(new toStringAlgo());
		phrase = new ABCParser(this.fileName).parse();
		return phrase.toString();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo49crFzEeeCH50Lr9AhYw" name="playFile" specification="_BlcA1bFzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_Bo49c7FzEeeCH50Lr9AhYw" name="instrument">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>player = new SequencePlayer2(16, instrument);
		//		phrase = new Chord(new Note('G', 0, 0, 1.0, false), new Note('A', 0, 0, 1.0, false));
		//		phrase = new Triplet(new Note('G', 0, 0, 1.0, true), new Note('A', 0, 0, 1.0, false), new Note('C', 0, 0, 1.0, false));
		//		phrase = new Note('G', 0, 0, 1.0, false);

		player.setTicksPerDefaultNote(16);
		player.setTempo(120);

		phrase.execute(new playerAlgo(), player, 1);
		if (make_playable != null) {
			make_playable.stop();
		}
		make_playable = player.makePlayable(ISequencePlayerStatus.NULL);

		make_playable.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo49dLFzEeeCH50Lr9AhYw" name="stopFile" specification="_Blcn4LFzEeeCH50Lr9AhYw">
          <language>java</language>
          <body>make_playable.stop();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_BlbZwbFzEeeCH50Lr9AhYw" name="start"/>
        <ownedOperation xmi:id="_BlcA0LFzEeeCH50Lr9AhYw" name="loadFile" method="_Bo4WabFzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpD8lbFzEeeCH50Lr9AhYw">
            <body>loads the given file.
	 * @param filename the given file to load
	 * @return the content of the file</body>
          </ownedComment>
          <ownedParameter xmi:id="_BlcA0bFzEeeCH50Lr9AhYw" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_BlcA0rFzEeeCH50Lr9AhYw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BlcA07FzEeeCH50Lr9AhYw" name="parseFile" method="_Bo49cLFzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpD8lrFzEeeCH50Lr9AhYw">
            <body>parses the given file.
	 * @return the parse content of the file</body>
          </ownedComment>
          <ownedParameter xmi:id="_BlcA1LFzEeeCH50Lr9AhYw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BlcA1bFzEeeCH50Lr9AhYw" name="playFile" method="_Bo49crFzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpD8l7FzEeeCH50Lr9AhYw">
            <body>plays the given file.
	 * @param instrument the given instrument to play</body>
          </ownedComment>
          <ownedParameter xmi:id="_BlcA1rFzEeeCH50Lr9AhYw" name="instrument">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Blcn4LFzEeeCH50Lr9AhYw" name="stopFile" method="_Bo49dLFzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpD8mLFzEeeCH50Lr9AhYw">
            <body>stops the given file.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_BnlV4LFzEeeCH50Lr9AhYw" name="MusicPlayerModel" method="_Bo4WZrFzEeeCH50Lr9AhYw">
          <eAnnotations xmi:id="_BnlV4rFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_BnlV47FzEeeCH50Lr9AhYw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_BpD8lLFzEeeCH50Lr9AhYw">
            <body>initiates the frame.
	 * @param iModel2View the IModel2ViewAdapter that will be used throughout the instance</body>
          </ownedComment>
          <ownedParameter xmi:id="_BnlV4bFzEeeCH50Lr9AhYw" name="iModel2View" type="_BlaysLFzEeeCH50Lr9AhYw"/>
          <ownedParameter xmi:id="_BnlV5LFzEeeCH50Lr9AhYw" type="_BlbZwLFzEeeCH50Lr9AhYw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpOUoLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpOUobFzEeeCH50Lr9AhYw _BlaysbFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpOUobFzEeeCH50Lr9AhYw" name="" type="_BlaysLFzEeeCH50Lr9AhYw" association="_BpOUoLFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpO7sbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpO7srFzEeeCH50Lr9AhYw _Blays7FzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpO7srFzEeeCH50Lr9AhYw" name="" type="_BlaysLFzEeeCH50Lr9AhYw" association="_BpO7sbFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpQJ07FzEeeCH50Lr9AhYw" name="" memberEnd="_BpQJ1LFzEeeCH50Lr9AhYw _BohKALFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpQJ1LFzEeeCH50Lr9AhYw" name="" type="_BlbZwLFzEeeCH50Lr9AhYw" association="_BpQJ07FzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpQw4bFzEeeCH50Lr9AhYw" name="" memberEnd="_BpQw4rFzEeeCH50Lr9AhYw _BohKAbFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpQw4rFzEeeCH50Lr9AhYw" name="" type="_BlbZwLFzEeeCH50Lr9AhYw" association="_BpQw4bFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpQw5LFzEeeCH50Lr9AhYw" name="" memberEnd="_BpQw5bFzEeeCH50Lr9AhYw _BohKBbFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpQw5bFzEeeCH50Lr9AhYw" name="" type="_BlbZwLFzEeeCH50Lr9AhYw" association="_BpQw5LFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpRX8LFzEeeCH50Lr9AhYw" name="" memberEnd="_BpRX8bFzEeeCH50Lr9AhYw _BohKB7FzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpRX8bFzEeeCH50Lr9AhYw" name="" type="_BlbZwLFzEeeCH50Lr9AhYw" association="_BpRX8LFzEeeCH50Lr9AhYw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BkdwcLFzEeeCH50Lr9AhYw" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_BkdwcbFzEeeCH50Lr9AhYw" name="player">
        <packagedElement xmi:type="uml:Package" xmi:id="_BkgMsLFzEeeCH50Lr9AhYw" name="SequencePlayer2">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Bnku0LFzEeeCH50Lr9AhYw" name="IPlayable"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Bl1pc7FzEeeCH50Lr9AhYw" name="ISequencePlayerStatus">
          <ownedComment xmi:id="_BpFxzbFzEeeCH50Lr9AhYw">
            <body>Command that is used to notify a user that a track has stopped playing.
@author swong
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Bl1pdbFzEeeCH50Lr9AhYw" name="NULL" isLeaf="true" isStatic="true" type="_Bl1pc7FzEeeCH50Lr9AhYw" isReadOnly="true" association="_BpO7tLFzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bl1pdrFzEeeCH50Lr9AhYw" value="new ISequencePlayerStatus() {&#xA;&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Prints &quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot; to console.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public void finished() {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot;);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_Bl1pdLFzEeeCH50Lr9AhYw" name="finished">
            <ownedComment xmi:id="_BpFxzrFzEeeCH50Lr9AhYw">
              <body>Called when a track stops playing.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bl2QgLFzEeeCH50Lr9AhYw" name="SequencePlayer">
          <ownedComment xmi:id="_BpFxz7FzEeeCH50Lr9AhYw">
            <body>Sequence Player to create and play MIDI music sequences.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BoqT8bFzEeeCH50Lr9AhYw" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BoqT8rFzEeeCH50Lr9AhYw" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoqT87FzEeeCH50Lr9AhYw" name="_sequence" visibility="private" type="_BoWK4rFzEeeCH50Lr9AhYw" association="_BpVpYbFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BoqT9bFzEeeCH50Lr9AhYw" name="_track" visibility="private" type="_BoWx8LFzEeeCH50Lr9AhYw" association="_BpVpZLFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BoqT97FzEeeCH50Lr9AhYw" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Boq7AbFzEeeCH50Lr9AhYw" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Boq7A7FzEeeCH50Lr9AhYw" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Boq7BbFzEeeCH50Lr9AhYw" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Boq7B7FzEeeCH50Lr9AhYw" name="_sequencer" visibility="private" type="_BoWx8rFzEeeCH50Lr9AhYw" association="_BpWQcLFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BoriEbFzEeeCH50Lr9AhYw" name="_synthesizer" visibility="private" type="_Bn--gbFzEeeCH50Lr9AhYw" association="_BpWQc7FzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BoriE7FzEeeCH50Lr9AhYw" name="_offsets" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoriFLFzEeeCH50Lr9AhYw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BoriFrFzEeeCH50Lr9AhYw" value="{ // add these amounts to the base value&#xA;&#x9;&#x9;&#x9;// A   B  C  D  E  F  G&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo92AbFzEeeCH50Lr9AhYw" name="SequencePlayer" specification="_Bl23kLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo92ArFzEeeCH50Lr9AhYw" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo92A7FzEeeCH50Lr9AhYw" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo92BLFzEeeCH50Lr9AhYw" type="_Bl2QgLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dALFzEeeCH50Lr9AhYw" name="init" specification="_Bl23lrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo-dAbFzEeeCH50Lr9AhYw" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo-dArFzEeeCH50Lr9AhYw" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo-dA7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;
		_instrument = instrument;
		_bpm = 0;
		_ticksPerDefaultNote = _ticksPerQuarterNote;

		_sequencer = null;
		_synthesizer = null;
		_track = null;

		try {
			_sequencer = MidiSystem.getSequencer();
			_synthesizer = MidiSystem.getSynthesizer();

			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);
			_track = _sequence.createTrack();

			ShortMessage sm = new ShortMessage();
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);
			_track.add(new MidiEvent(sm, 0));
		} catch (MidiUnavailableException e) {
			System.out.println(&quot;MIDI Unavailable, SequencePlayer not initialized.&quot;);
			return false;
		} catch (InvalidMidiDataException e) {
			System.out.println(&quot;Invalid MIDI data.&quot;);
			e.printStackTrace();
			return false;
		}

		return true;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dBLFzEeeCH50Lr9AhYw" name="addNote" specification="_Bn1NgLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo-dBbFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo-dBrFzEeeCH50Lr9AhYw" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo-dB7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dCLFzEeeCH50Lr9AhYw" name="addNote" specification="_Bn1NhLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo-dCbFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo-dCrFzEeeCH50Lr9AhYw" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo-dC7FzEeeCH50Lr9AhYw" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo-dDLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {
			return -1;
		}

		int duration = (int) Math.round(note.getDuration() * _ticksPerDefaultNote);
		if ('Z' == note.getName()) {
			// Rest - just return end tick count
			return start + duration;
		}

		int key = 60; // start at middle C
		key += note.getOctave() * 12;
		key += _offsets[note.getName() - 'A'];
		key += note.getAccidental();

		ShortMessage on;
		ShortMessage off;
		try {
			on = new ShortMessage();
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);
			off = new ShortMessage();
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);
		} catch (InvalidMidiDataException e) {
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note + &quot;, &quot; + start + &quot;).&quot;);
			// e.printStackTrace();
			return start;
		}

		_track.add(new MidiEvent(on, start));
		_track.add(new MidiEvent(off, start + duration));
		return start + duration;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dDbFzEeeCH50Lr9AhYw" name="play" specification="_Bn10kLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo-dDrFzEeeCH50Lr9AhYw" name="statusCmd" type="_Bl1pc7FzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_Bo-dD7FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Bo-dELFzEeeCH50Lr9AhYw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <language>java</language>
            <body>try {
			_sequencer.open();
			_synthesizer.open();

			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());

			// Specify the sequence to play, and the tempo to play it at
			_sequencer.setSequence(_sequence);
			_sequencer.setTempoInBPM(_bpm);

			// Let us know when it is done playing
			_sequencer.addMetaEventListener(new MetaEventListener() {
				public void meta(MetaMessage m) {
					// A message of this type is automatically sent
					// when we reach the end of the track
					if (m.getType() == END_OF_TRACK) {
						System.out.println(&quot;Finished Playing&quot;);
						stop();
						statusCmd.finished();
					}
				}
			});

			// And start playing now.
			_sequencer.start();
		} catch (MidiUnavailableException e) {
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);
			// e.printStackTrace();
		} catch (InvalidMidiDataException e) {
			System.out.println(&quot;Unable to play sequence.&quot;);
			// e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dEbFzEeeCH50Lr9AhYw" name="stop" specification="_Bl3eoLFzEeeCH50Lr9AhYw">
            <language>java</language>
            <body>_sequencer.close();
		_synthesizer.close();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dErFzEeeCH50Lr9AhYw" name="getTicksPerDefaultNote" specification="_Bl3eobFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo-dE7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dFLFzEeeCH50Lr9AhYw" name="setTicksPerDefaultNote" specification="_Bl3eo7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo-dFbFzEeeCH50Lr9AhYw" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dFrFzEeeCH50Lr9AhYw" name="getTempo" specification="_Bl3epbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo-dF7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo-dGLFzEeeCH50Lr9AhYw" name="setTempo" specification="_Bl4FsbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo-dGbFzEeeCH50Lr9AhYw" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_EELFzEeeCH50Lr9AhYw" name="getTicksPerQuarterNote" specification="_Bl4Fs7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_EEbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Bl23kLFzEeeCH50Lr9AhYw" name="SequencePlayer" method="_Bo92AbFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Bl23k7FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bl23lLFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpFx0LFzEeeCH50Lr9AhYw">
              <body>Create a new SequencePlayer to create and play music.
	 * 
	 * @param  ticksPerQuarterNote      - tick definition
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl23kbFzEeeCH50Lr9AhYw" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bl23krFzEeeCH50Lr9AhYw" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bl23lbFzEeeCH50Lr9AhYw" type="_Bl2QgLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl23lrFzEeeCH50Lr9AhYw" name="init" method="_Bo-dALFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx0bFzEeeCH50Lr9AhYw">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to 
	 * initialize the player upon instantiation and can be called again to reinitialize the 
	 * SequencePlayer.
	 * 
	 * @param  ticksPerQuarterNote      - tick definition
	 * @param  instrument               - MIDI instrument
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl23l7FzEeeCH50Lr9AhYw" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bl23mLFzEeeCH50Lr9AhYw" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bl23mbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl3eoLFzEeeCH50Lr9AhYw" name="stop" method="_Bo-dEbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx1bFzEeeCH50Lr9AhYw">
              <body>Stop playing music and close resources.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl3eobFzEeeCH50Lr9AhYw" name="getTicksPerDefaultNote" method="_Bo-dErFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx1rFzEeeCH50Lr9AhYw">
              <body>Accessor to get the current ticks per default note
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl3eorFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl3eo7FzEeeCH50Lr9AhYw" name="setTicksPerDefaultNote" method="_Bo-dFLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx17FzEeeCH50Lr9AhYw">
              <body>Accessor to set the current ticks per default note
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl3epLFzEeeCH50Lr9AhYw" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl3epbFzEeeCH50Lr9AhYw" name="getTempo" method="_Bo-dFrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx2LFzEeeCH50Lr9AhYw">
              <body>Accessor for the current tempo
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl4FsLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl4FsbFzEeeCH50Lr9AhYw" name="setTempo" method="_Bo-dGLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx2bFzEeeCH50Lr9AhYw">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,
	 * the last tempo set will be used for the whole sequence.
	 * 
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl4FsrFzEeeCH50Lr9AhYw" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl4Fs7FzEeeCH50Lr9AhYw" name="getTicksPerQuarterNote" method="_Bo_EELFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx2rFzEeeCH50Lr9AhYw">
              <body>Accessor for the current number of ticks per quarter note.
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl4FtLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn1NgLFzEeeCH50Lr9AhYw" name="addNote" method="_Bo-dBLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx0rFzEeeCH50Lr9AhYw">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume
	 * 
	 * @param note     - the note to schedule in the sequence
	 * @param start    - the tick at which this note should start playing
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn1NgbFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bn1NgrFzEeeCH50Lr9AhYw" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn1Ng7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn1NhLFzEeeCH50Lr9AhYw" name="addNote" method="_Bo-dCLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx07FzEeeCH50Lr9AhYw">
              <body>Add a note to the MIDI sequence.
	 * 
	 * @param note     - the note to schedule in the sequence
	 * @param start    - the tick at which this note should start playing
	 * @param velocity - the volume (0-127)
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn1NhbFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bn1NhrFzEeeCH50Lr9AhYw" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn1Nh7FzEeeCH50Lr9AhYw" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn1NiLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn10kLFzEeeCH50Lr9AhYw" name="play" method="_Bo-dDbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFx1LFzEeeCH50Lr9AhYw">
              <body>Play the created Sequence.
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn10kbFzEeeCH50Lr9AhYw" name="statusCmd" type="_Bl1pc7FzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_Bn10krFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Bn10k7FzEeeCH50Lr9AhYw" key="final"/>
              </eAnnotations>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bl5T0LFzEeeCH50Lr9AhYw" name="SequencePlayer2">
          <ownedComment xmi:id="_BpFx27FzEeeCH50Lr9AhYw">
            <body>Sequence Player to create and play MIDI music sequences.
Differs from SequencePlayer because it has no play() method.   Instead, this class has 
a factory method that creates an SequencePlayer2.IPlayable object that can be individually 
and asynchronously started and stopped.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BosJILFzEeeCH50Lr9AhYw" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BosJIbFzEeeCH50Lr9AhYw" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BosJIrFzEeeCH50Lr9AhYw" name="_sequence" visibility="private" type="_BoWK4rFzEeeCH50Lr9AhYw" association="_BpWQdrFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BosJJLFzEeeCH50Lr9AhYw" name="_track" visibility="private" type="_BoWx8LFzEeeCH50Lr9AhYw" association="_BpW3gbFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BoswMbFzEeeCH50Lr9AhYw" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoswM7FzEeeCH50Lr9AhYw" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoswNbFzEeeCH50Lr9AhYw" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoswN7FzEeeCH50Lr9AhYw" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BotXQLFzEeeCH50Lr9AhYw" name="_offsets" isLeaf="true" isStatic="true" isReadOnly="true">
            <eAnnotations xmi:id="_BotXQbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BotXQrFzEeeCH50Lr9AhYw" key="ConstantWithGetter"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BotXQ7FzEeeCH50Lr9AhYw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BotXRbFzEeeCH50Lr9AhYw" value="{ // add these amounts to the base value&#xA;&#x9;&#x9;&#x9;// A   B  C  D  E  F  G&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_EErFzEeeCH50Lr9AhYw" name="SequencePlayer2" specification="_Bl6h8LFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_EE7FzEeeCH50Lr9AhYw" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_EFLFzEeeCH50Lr9AhYw" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_EFbFzEeeCH50Lr9AhYw" type="_Bl5T0LFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_EFrFzEeeCH50Lr9AhYw" name="init" specification="_Bl6h9rFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_EF7FzEeeCH50Lr9AhYw" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_EGLFzEeeCH50Lr9AhYw" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_EGbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;
		_instrument = instrument;
		_bpm = 0;
		_ticksPerDefaultNote = _ticksPerQuarterNote;

		_track = null;

		try {

			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);
			_track = _sequence.createTrack();

			ShortMessage sm = new ShortMessage();
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);
			_track.add(new MidiEvent(sm, 0));
		} catch (InvalidMidiDataException e) {
			System.out.println(&quot;Invalid MIDI data.&quot;);
			e.printStackTrace();
			return false;
		}

		return true;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_EGrFzEeeCH50Lr9AhYw" name="addNote" specification="_Bn2boLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_EG7FzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo_EHLFzEeeCH50Lr9AhYw" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_EHbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_EHrFzEeeCH50Lr9AhYw" name="addNote" specification="_Bn3CsLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_EH7FzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo_EILFzEeeCH50Lr9AhYw" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_EIbFzEeeCH50Lr9AhYw" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_EIrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {
			return -1;
		}

		int duration = (int) Math.round(note.getDuration() * _ticksPerDefaultNote);
		if ('Z' == note.getName()) {
			// Rest - just return end tick count
			return start + duration;
		}

		int key = 60; // start at middle C
		key += note.getOctave() * 12;
		key += _offsets[note.getName() - 'A'];
		key += note.getAccidental();

		ShortMessage on;
		ShortMessage off;
		try {
			on = new ShortMessage();
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);
			off = new ShortMessage();
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);
		} catch (InvalidMidiDataException e) {
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note + &quot;, &quot; + start + &quot;).&quot;);
			// e.printStackTrace();
			return start;
		}

		_track.add(new MidiEvent(on, start));
		_track.add(new MidiEvent(off, start + duration));
		return start + duration;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_EI7FzEeeCH50Lr9AhYw" name="makePlayable" specification="_Bn3CtbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_EJLFzEeeCH50Lr9AhYw" name="statusCmd" type="_Bl1pc7FzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_Bo_EJbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Bo_EJrFzEeeCH50Lr9AhYw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_EJ7FzEeeCH50Lr9AhYw" type="_Bl5T0bFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>try {
			final Sequencer _sequencer = MidiSystem.getSequencer(); // MIDI Sequencer object
			final Synthesizer _synthesizer = MidiSystem.getSynthesizer(); // MIDI synthesizer object

			final IPlayable playable = new IPlayable() {

				@Override
				public void start() {
					_sequencer.start();
				}

				@Override
				public void stop() {
					_sequencer.close();
					_synthesizer.close();
				}
			};

			_sequencer.open();
			_synthesizer.open();

			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());

			// Specify the sequence to play, and the tempo to play it at
			_sequencer.setSequence(_sequence);
			_sequencer.setTempoInBPM(_bpm);

			// Let us know when it is done playing
			_sequencer.addMetaEventListener(new MetaEventListener() {
				public void meta(MetaMessage m) {
					// A message of this type is automatically sent
					// when we reach the end of the track
					if (m.getType() == END_OF_TRACK) {
						System.out.println(&quot;SequencePlayer2.play(): End of Track&quot;);
						playable.stop();
						statusCmd.finished();
					} else
						System.out.println(&quot;Message type received: &quot; + m.getType());
				}
			});

			return playable;
		} catch (MidiUnavailableException e) {
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);
			// e.printStackTrace();
		} catch (InvalidMidiDataException e) {
			System.out.println(&quot;Unable to play sequence.&quot;);
			// e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

		return IPlayable.NULL;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rILFzEeeCH50Lr9AhYw" name="getTicksPerDefaultNote" specification="_Bl7JAbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rIbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rIrFzEeeCH50Lr9AhYw" name="setTicksPerDefaultNote" specification="_Bl7wELFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rI7FzEeeCH50Lr9AhYw" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rJLFzEeeCH50Lr9AhYw" name="getTempo" specification="_Bl7wErFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rJbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rJrFzEeeCH50Lr9AhYw" name="setTempo" specification="_Bl7wFLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rJ7FzEeeCH50Lr9AhYw" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rKLFzEeeCH50Lr9AhYw" name="getTicksPerQuarterNote" specification="_Bl7wFrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rKbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Bl6h8LFzEeeCH50Lr9AhYw" name="SequencePlayer2" method="_Bo_EErFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Bl6h87FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bl6h9LFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpGY07FzEeeCH50Lr9AhYw">
              <body>Create a new SequencePlayer to create and play music.
	 * 
	 * @param  ticksPerQuarterNote      - tick definition
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl6h8bFzEeeCH50Lr9AhYw" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bl6h8rFzEeeCH50Lr9AhYw" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bl6h9bFzEeeCH50Lr9AhYw" type="_Bl5T0LFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl6h9rFzEeeCH50Lr9AhYw" name="init" method="_Bo_EFrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY1LFzEeeCH50Lr9AhYw">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to 
	 * initialize the player upon instantiation and can be called again to reinitialize the 
	 * SequencePlayer.
	 * 
	 * @param  ticksPerQuarterNote      - tick definition
	 * @param  instrument               - MIDI instrument
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl6h97FzEeeCH50Lr9AhYw" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bl6h-LFzEeeCH50Lr9AhYw" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bl7JALFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl7JAbFzEeeCH50Lr9AhYw" name="getTicksPerDefaultNote" method="_Bo_rILFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY2LFzEeeCH50Lr9AhYw">
              <body>Accessor to get the current ticks per default note
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl7JArFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl7wELFzEeeCH50Lr9AhYw" name="setTicksPerDefaultNote" method="_Bo_rIrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY2bFzEeeCH50Lr9AhYw">
              <body>Accessor to set the current ticks per default note
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl7wEbFzEeeCH50Lr9AhYw" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl7wErFzEeeCH50Lr9AhYw" name="getTempo" method="_Bo_rJLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY2rFzEeeCH50Lr9AhYw">
              <body>Accessor for the current tempo
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl7wE7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl7wFLFzEeeCH50Lr9AhYw" name="setTempo" method="_Bo_rJrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY27FzEeeCH50Lr9AhYw">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,
	 * the last tempo set will be used for the whole sequence.
	 * 
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl7wFbFzEeeCH50Lr9AhYw" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bl7wFrFzEeeCH50Lr9AhYw" name="getTicksPerQuarterNote" method="_Bo_rKLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY3LFzEeeCH50Lr9AhYw">
              <body>Accessor for the current number of ticks per quarter note.
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl7wF7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn2boLFzEeeCH50Lr9AhYw" name="addNote" method="_Bo_EGrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY1bFzEeeCH50Lr9AhYw">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume
	 * 
	 * @param note     - the note to schedule in the sequence
	 * @param start    - the tick at which this note should start playing
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn2bobFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bn2borFzEeeCH50Lr9AhYw" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn2bo7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn3CsLFzEeeCH50Lr9AhYw" name="addNote" method="_Bo_EHrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY1rFzEeeCH50Lr9AhYw">
              <body>Add a note to the MIDI sequence.
	 * 
	 * @param note     - the note to schedule in the sequence
	 * @param start    - the tick at which this note should start playing
	 * @param velocity - the volume (0-127)
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn3CsbFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bn3CsrFzEeeCH50Lr9AhYw" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn3Cs7FzEeeCH50Lr9AhYw" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn3CtLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn3CtbFzEeeCH50Lr9AhYw" name="makePlayable" method="_Bo_EI7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY17FzEeeCH50Lr9AhYw">
              <body>Factory method for an IPlayable object that can play the currently programmed music sequence.
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.
	 * @return An IPlayable object associated with the currently programmed music sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn3CtrFzEeeCH50Lr9AhYw" name="statusCmd" type="_Bl1pc7FzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_Bn3CuLFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Bn3CubFzEeeCH50Lr9AhYw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn3Ct7FzEeeCH50Lr9AhYw" type="_Bl5T0bFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Interface" xmi:id="_Bl5T0bFzEeeCH50Lr9AhYw" name="IPlayable">
            <eAnnotations xmi:id="_Bl5T0rFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bl5T07FzEeeCH50Lr9AhYw" key="static"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpGY0LFzEeeCH50Lr9AhYw">
              <body>Interface  that represents a playable entity.
	 * @author swong
	 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_Bl564bFzEeeCH50Lr9AhYw" name="NULL" isLeaf="true" isStatic="true" type="_Bl5T0bFzEeeCH50Lr9AhYw" isReadOnly="true" association="_BpO7t7FzEeeCH50Lr9AhYw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bl564rFzEeeCH50Lr9AhYw" value="new IPlayable() {&#xA;&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void start() {&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;public void stop() {&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_Bl5T1LFzEeeCH50Lr9AhYw" name="start">
              <ownedComment xmi:id="_BpGY0bFzEeeCH50Lr9AhYw">
                <body>Starts the sequencer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_Bl564LFzEeeCH50Lr9AhYw" name="stop">
              <ownedComment xmi:id="_BpGY0rFzEeeCH50Lr9AhYw">
                <body>Stops the sequencer and synthesizer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpO7tLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpO7tbFzEeeCH50Lr9AhYw _Bl1pdbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpO7tbFzEeeCH50Lr9AhYw" name="" type="_Bl1pc7FzEeeCH50Lr9AhYw" association="_BpO7tLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpO7t7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpO7uLFzEeeCH50Lr9AhYw _Bl564bFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpO7uLFzEeeCH50Lr9AhYw" name="" type="_Bl5T0bFzEeeCH50Lr9AhYw" association="_BpO7t7FzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpVpYbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpVpYrFzEeeCH50Lr9AhYw _BoqT87FzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpVpYrFzEeeCH50Lr9AhYw" name="" type="_Bl2QgLFzEeeCH50Lr9AhYw" association="_BpVpYbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpVpZLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpVpZbFzEeeCH50Lr9AhYw _BoqT9bFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpVpZbFzEeeCH50Lr9AhYw" name="" type="_Bl2QgLFzEeeCH50Lr9AhYw" association="_BpVpZLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpWQcLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpWQcbFzEeeCH50Lr9AhYw _Boq7B7FzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpWQcbFzEeeCH50Lr9AhYw" name="" type="_Bl2QgLFzEeeCH50Lr9AhYw" association="_BpWQcLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpWQc7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpWQdLFzEeeCH50Lr9AhYw _BoriEbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpWQdLFzEeeCH50Lr9AhYw" name="" type="_Bl2QgLFzEeeCH50Lr9AhYw" association="_BpWQc7FzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpWQdrFzEeeCH50Lr9AhYw" name="" memberEnd="_BpWQd7FzEeeCH50Lr9AhYw _BosJIrFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpWQd7FzEeeCH50Lr9AhYw" name="" type="_Bl5T0LFzEeeCH50Lr9AhYw" association="_BpWQdrFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpW3gbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpW3grFzEeeCH50Lr9AhYw _BosJJLFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpW3grFzEeeCH50Lr9AhYw" name="" type="_Bl5T0LFzEeeCH50Lr9AhYw" association="_BpW3gbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Bkdwc7FzEeeCH50Lr9AhYw" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_BmH9ULFzEeeCH50Lr9AhYw" name="ABCInstrument">
          <ownedComment xmi:id="_BpG_9LFzEeeCH50Lr9AhYw">
            <body>Represents an instrument as a name and an integer value
@author swong
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BoxotbFzEeeCH50Lr9AhYw" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoyPwLFzEeeCH50Lr9AhYw" name="value" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpBgULFzEeeCH50Lr9AhYw" name="ABCInstrument" specification="_BmIkYLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpBgUbFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpBgUrFzEeeCH50Lr9AhYw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpBgU7FzEeeCH50Lr9AhYw" type="_BmH9ULFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>this.name = name;
		this.value = value;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpBgVLFzEeeCH50Lr9AhYw" name="toString" specification="_BmIkZrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpBgVbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return name + &quot;: &quot; + value;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BmIkYLFzEeeCH50Lr9AhYw" name="ABCInstrument" method="_BpBgULFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BmIkY7FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BmIkZLFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BmIkYbFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmIkYrFzEeeCH50Lr9AhYw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmIkZbFzEeeCH50Lr9AhYw" type="_BmH9ULFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BmIkZrFzEeeCH50Lr9AhYw" name="toString" method="_BpBgVLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BmIkZ7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BmJLcLFzEeeCH50Lr9AhYw" name="ABCUtil">
          <ownedComment xmi:id="_BpG_9bFzEeeCH50Lr9AhYw">
            <body>Singleton utility class that has methods for parsing,
reading file content and getting the list of instruments.
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BoyPwbFzEeeCH50Lr9AhYw" name="Singleton" isLeaf="true" isStatic="true" type="_BmJLcLFzEeeCH50Lr9AhYw" isReadOnly="true" association="_BpYstrFzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BoyPwrFzEeeCH50Lr9AhYw" value="new ABCUtil()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpBgVrFzEeeCH50Lr9AhYw" name="parseFraction" specification="_BmJygLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpBgV7FzEeeCH50Lr9AhYw" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpBgWLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] vals = frac.split(&quot;/&quot;);
		if (vals.length != 2) {
			throw new NumberFormatException(frac + &quot; is not a fraction.&quot;);
		}
		double num = Double.parseDouble(vals[0]);
		double denom = Double.parseDouble(vals[1]);
		return num / denom;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpBgWbFzEeeCH50Lr9AhYw" name="parseTempo" specification="_BmJyg7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpBgWrFzEeeCH50Lr9AhYw" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpBgW7FzEeeCH50Lr9AhYw" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpBgXLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String els[] = tempo.split(&quot;=&quot;);
		double bpm = 0;
		if (1 == els.length) {
			bpm = Double.parseDouble(els[0]) / defaultNotesPerQuarterNote;
		} else {
			double note = parseFraction(els[0]);
			bpm = Double.parseDouble(els[1]) / (0.25 / note);
		}
		return bpm;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpBgXbFzEeeCH50Lr9AhYw" name="getFileContents" specification="_BmJyh7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpBgXrFzEeeCH50Lr9AhYw" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpBgX7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String fileContents = &quot;&quot;;

		try {
			InputStream is = this.getClass().getResource(filename).openStream();

			BufferedReader input = new BufferedReader(new InputStreamReader(is));

			try {
				// use buffering, reading one line at a time
				// FileReader always assumes default
				// encoding is OK!

				String line = null; // not declared within while loop

				/*
				 * readLine is a bit quirky : it returns the
				 * content of a line MINUS the newline. it
				 * returns null only for the END of the
				 * stream. it returns an empty String if two
				 * newlines appear in a row.
				 */
				while ((line = input.readLine()) != null) {
					fileContents += line + &quot;\n&quot;;
				}
			} finally {
				input.close();
			}
		} catch (Exception e) {
			return &quot;Error loading file: &quot; + filename + &quot;\n&quot; + e + &quot;\n&quot;;
		}

		return fileContents;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpBgYLFzEeeCH50Lr9AhYw" name="getInstruments" specification="_BmJyirFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpBgYbFzEeeCH50Lr9AhYw" type="_BmH9ULFzEeeCH50Lr9AhYw" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BpBgYrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
			Synthesizer synth = MidiSystem.getSynthesizer();
			synth.open();
			Instrument[] instruments = synth.getAvailableInstruments();
			ABCInstrument[] result = new ABCInstrument[instruments.length];
			for (int i = 0; i &lt; instruments.length; i++) {
				result[i] = new ABCInstrument(instruments[i].getName(), instruments[i].getPatch().getProgram());
			}

			synth.close();
			return result;
		} catch (MidiUnavailableException e) {
			System.err.println(&quot;ABCUtil.getInstruments: &quot; + e);
			return null;
		}
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BmJLcbFzEeeCH50Lr9AhYw" name="ABCUtil" visibility="private">
            <eAnnotations xmi:id="_BmJLcrFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BmJLc7FzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BmJLdbFzEeeCH50Lr9AhYw" type="_BmJLcLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BmJygLFzEeeCH50Lr9AhYw" name="parseFraction" method="_BpBgVrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm8LFzEeeCH50Lr9AhYw">
              <body>Return the evaluation of a string &quot;a/b&quot;.
	 * 
	 * @param frac - a string containing a fraction
	 * @return     - the result of evaluating the fraction</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmJygbFzEeeCH50Lr9AhYw" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmJygrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BmJyg7FzEeeCH50Lr9AhYw" name="parseTempo" method="_BpBgWbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm8bFzEeeCH50Lr9AhYw">
              <body>Return the tempo given by the input string.  The returned value is in the 
	 * units of quarter notes per minute.
	 * 
	 * Accepts &quot;bpm&quot; (beats per default note) or &quot;a/b=bpm&quot; (beats per a/b note).
	 * 
	 * @param tempo                      - tempo represented as a string
	 * @param defaultNotesPerQuarterNote - default notes per quarter note 
	 * @return                           - the tempo indicated by the string</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmJyhLFzEeeCH50Lr9AhYw" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmJyhbFzEeeCH50Lr9AhYw" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmJyhrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BmJyh7FzEeeCH50Lr9AhYw" name="getFileContents" method="_BpBgXbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm8rFzEeeCH50Lr9AhYw">
              <body>Returns the contents of a text file, e.g. an abc file, as a single string.
	 * @param filename the name of the file with respect to the default package, where &quot;/&quot; refers to the default package, e.g. a file in the &quot;data&quot; package would &quot;/data/myfile.abc&quot;
	 * @return the contents of the file</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmJyiLFzEeeCH50Lr9AhYw" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmJyibFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BmJyirFzEeeCH50Lr9AhYw" name="getInstruments" method="_BpBgYLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm87FzEeeCH50Lr9AhYw">
              <body>Get an array of all the available instruments as ABCInstruments 
	 * where the instrument's value is the MIDI instrument number
	 * 
	 * @return an array of ABCInstruments</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmKZkLFzEeeCH50Lr9AhYw" type="_BmH9ULFzEeeCH50Lr9AhYw" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BmKZkbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BmKZk7FzEeeCH50Lr9AhYw" name="KeySignature">
          <ownedComment xmi:id="_BpHm9LFzEeeCH50Lr9AhYw">
            <body>Utility class to simplify dealing with key signatures 
Usage:
KeySignature keySig = new KeySignature(aKey); // aKey is a string representing a key, e.g. &quot;C&quot;, &quot;Bb&quot;, &quot;Am&quot;
Note adjustedNote = keySig.adjust(originalNote); // returns the Note object, adjusted so that it matches the key,
e.g for key of &quot;D&quot;, an &quot;F&quot; --&amp;gt; &quot;F#&quot;.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BoyPw7FzEeeCH50Lr9AhYw" name="_major" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoyPxLFzEeeCH50Lr9AhYw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BoyPxrFzEeeCH50Lr9AhYw" value="{ 0, 2, 2, 1, 2, 2, 2 //, 1&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoyPx7FzEeeCH50Lr9AhYw" name="_minor" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoyPyLFzEeeCH50Lr9AhYw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Boy20bFzEeeCH50Lr9AhYw" value="{ // Half steps in a Minor key&#xA;&#x9;&#x9;&#x9;0, 2, 1, 2, 2, 1, 2 //, 2&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Boy21rFzEeeCH50Lr9AhYw" name="keymap" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <qualifier xmi:id="_Bozd4bFzEeeCH50Lr9AhYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Boy217FzEeeCH50Lr9AhYw" value="new Hashtable&lt;Character, Integer>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Bozd4rFzEeeCH50Lr9AhYw" name="notes" visibility="private" type="_BmLAoLFzEeeCH50Lr9AhYw" association="_BpZTwbFzEeeCH50Lr9AhYw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bozd47FzEeeCH50Lr9AhYw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bozd5bFzEeeCH50Lr9AhYw" value="{ new KeyNote('A', 0), new KeyNote('A', 1), new KeyNote('B', 0), new KeyNote('C', 0),&#xA;&#x9;&#x9;&#x9;new KeyNote('C', 1), new KeyNote('D', 0), new KeyNote('D', 1), new KeyNote('E', 0), new KeyNote('F', 0),&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 1), new KeyNote('G', 0), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Bozd57FzEeeCH50Lr9AhYw" name="fs_dsm" visibility="private" type="_BmLAoLFzEeeCH50Lr9AhYw" association="_BpZTxLFzEeeCH50Lr9AhYw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bozd6LFzEeeCH50Lr9AhYw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bozd6rFzEeeCH50Lr9AhYw" value="{ new KeyNote('A', 1), new KeyNote('B', 0), new KeyNote('C', 1), new KeyNote('D', 1),&#xA;&#x9;&#x9;&#x9;new KeyNote('E', 1), new KeyNote('F', 1), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCHYLFzEeeCH50Lr9AhYw" name="KeySignature" specification="_BmLnsrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpCHYbFzEeeCH50Lr9AhYw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpCHYrFzEeeCH50Lr9AhYw" type="_BmKZk7FzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Get rid of spurious &quot;maj&quot; at the end, if it's there
		if (key.endsWith(&quot;maj&quot;)) {
			key = key.replace(&quot;maj&quot;, &quot;&quot;);
		}

		// Special case keys with 6 sharps
		if ((key == &quot;F#&quot;) || (key == &quot;D#m&quot;)) {
			for (KeyNote n : fs_dsm) {
				keymap.put(n.letter, n.accidental);
			}
			return;
		}

		char keynote = key.charAt(0);
		int cur = -1;

		for (int i = 0; i &lt; notes.length; i++) {
			if (notes[i].letter == keynote) {
				cur = i;
				break;
			}
		}

		if (cur == -1) {
			System.out.println(&quot;Invalid key: &quot; + key);
			return;
		}

		int[] steps = _major;

		int idx = 1;
		while (idx &lt; key.length()) {
			switch (key.charAt(idx)) {
			case '#':
				cur += 1;
				break;

			case 'b':
				cur -= 1;
				break;

			case 'm':
				steps = _minor;
				break;

			default:
				System.out.println(&quot;Invalid key: &quot; + key);
				return;
			}
			idx++;
		}

		if (cur == -1) {
			cur = notes.length - 1;
		}

		for (int i : steps) {
			cur += i;
			if (cur >= notes.length) {
				cur -= notes.length;
			}
			KeyNote n = notes[cur];
			insert(n);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCHY7FzEeeCH50Lr9AhYw" name="convertflat" specification="_BmLnt7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpCHZLFzEeeCH50Lr9AhYw" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpCHZbFzEeeCH50Lr9AhYw" type="_BmLAoLFzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>char next = (char) (n + 1);
		if (next == 'H') {
			next = 'A';
		}
		return new KeyNote(next, -1);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCHZrFzEeeCH50Lr9AhYw" name="insert" specification="_Bn_lkbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpCHZ7FzEeeCH50Lr9AhYw" name="n" type="_BmLAoLFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>if (!keymap.containsKey(n.letter)) {
			keymap.put(n.letter, n.accidental);
			return;
		}

		if (n.accidental == 1) {
			// Move sharp up to next flat
			insert(convertflat(n.letter));
			return;
		}

		if ((n.accidental == 0) || (n.accidental == -1)) {
			// Conflict, move higher note up to next flat
			int a = keymap.get(n.letter);
			a = Math.min(a, n.accidental);
			insert(convertflat(n.letter));
			keymap.put(n.letter, a);
			return;
		}

		// Shouldn't get here
		System.out.println(&quot;Should not reach here.&quot;);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCHaLFzEeeCH50Lr9AhYw" name="map" specification="_BocRgrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpCHabFzEeeCH50Lr9AhYw" name="note" type="_BocRgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BpCHarFzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (keymap.containsKey(note)) {
			return (int) keymap.get(note);
		} else {
			return 0;
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCHa7FzEeeCH50Lr9AhYw" name="adjust" specification="_Bn_lk7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpCHbLFzEeeCH50Lr9AhYw" name="n" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BpCHbbFzEeeCH50Lr9AhYw" type="_BlsfgLFzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>if (n.getAccidental() != 0 &amp;&amp; !n.getIsNatural()) {
			return n; // Accidentals set and is not natural
		} else if (n.getIsNatural()) {
			return n; // override key signature
		} else {
			// normal key signature mapping applies
			int accidental = map(n.getName());
			if (accidental == 0) {
				return n; // nothing to change
			}
			return new Note(n.getName(), n.getOctave(), accidental, n.getDuration(), false); // must be false isNatural
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCHbrFzEeeCH50Lr9AhYw" name="printmap" specification="_BmMOwbFzEeeCH50Lr9AhYw">
            <language>java</language>
            <body>System.out.println(keymap);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BmLnsrFzEeeCH50Lr9AhYw" name="KeySignature" method="_BpCHYLFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BmLntLFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BmLntbFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpHm97FzEeeCH50Lr9AhYw">
              <body>Generate a &quot;Key&quot; object that enables easy access to the key signature.
	 * 
	 * @param key        - String indicating key (i.e., &quot;C&quot; or &quot;D#m&quot;)</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmLns7FzEeeCH50Lr9AhYw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmLntrFzEeeCH50Lr9AhYw" type="_BmKZk7FzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BmLnt7FzEeeCH50Lr9AhYw" name="convertflat" visibility="private" method="_BpCHY7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm-LFzEeeCH50Lr9AhYw">
              <body>Helper method to convert a note to its equivalent flat version.
	 * 
	 * @param n  - note letter
	 * @return   - equivalent flat version of note n</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmMOwLFzEeeCH50Lr9AhYw" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn_lkLFzEeeCH50Lr9AhYw" type="_BmLAoLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BmMOwbFzEeeCH50Lr9AhYw" name="printmap" method="_BpCHbrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm_LFzEeeCH50Lr9AhYw">
              <body>Print the mapping for this key signature</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn_lkbFzEeeCH50Lr9AhYw" name="insert" visibility="private" method="_BpCHZrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm-bFzEeeCH50Lr9AhYw">
              <body>Helper method to insert the given note into the keymap.
	 * 
	 * @param n  - note to add to the map</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn_lkrFzEeeCH50Lr9AhYw" name="n" type="_BmLAoLFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn_lk7FzEeeCH50Lr9AhYw" name="adjust" method="_BpCHa7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm-7FzEeeCH50Lr9AhYw">
              <body>Takes a note and returns the properly transposed note in this key signature
	 *
	 * @param n - note to be adjusted
	 * @return A new, adjusted Note</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn_llLFzEeeCH50Lr9AhYw" name="n" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bn_llbFzEeeCH50Lr9AhYw" type="_BlsfgLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BocRgrFzEeeCH50Lr9AhYw" name="map" visibility="private" method="_BpCHaLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpHm-rFzEeeCH50Lr9AhYw">
              <body>Takes a note (with no accidentals) and returns the accidental for this
	 * key signature.
	 * 
	 * @param  note - in [A, B, C, D, E, F, G]
	 * @return accidental for the note in this key signature [-1, 0, 1]</body>
            </ownedComment>
            <ownedParameter xmi:id="_BocRg7FzEeeCH50Lr9AhYw" name="note" type="_BocRgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BocRhLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_BmLAoLFzEeeCH50Lr9AhYw" name="KeyNote" visibility="private">
            <ownedComment xmi:id="_BpHm9bFzEeeCH50Lr9AhYw">
              <body>Utility class to keep track of the position of notes</body>
            </ownedComment>
            <ownedAttribute xmi:id="_Boy20rFzEeeCH50Lr9AhYw" name="letter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Boy21LFzEeeCH50Lr9AhYw" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpBgY7FzEeeCH50Lr9AhYw" name="KeyNote" specification="_BmLAobFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpBgZLFzEeeCH50Lr9AhYw" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BpBgZbFzEeeCH50Lr9AhYw" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BpBgZrFzEeeCH50Lr9AhYw" type="_BmLAoLFzEeeCH50Lr9AhYw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>this.letter = letter;
			this.accidental = accidental;
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpBgZ7FzEeeCH50Lr9AhYw" name="toString" specification="_BmLnsLFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpBgaLFzEeeCH50Lr9AhYw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;&quot; + letter + accidental;
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_BmLAobFzEeeCH50Lr9AhYw" name="KeyNote" visibility="package" method="_BpBgY7FzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_BmLApLFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BmLApbFzEeeCH50Lr9AhYw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_BpHm9rFzEeeCH50Lr9AhYw">
                <body>Constructor for the class
		 * @param letter  The letter of the note
		 * @param accidental  Whether or not the note is accidental:  -1 = flat, 0 = natural, +1 = sharp</body>
              </ownedComment>
              <ownedParameter xmi:id="_BmLAorFzEeeCH50Lr9AhYw" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BmLAo7FzEeeCH50Lr9AhYw" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BmLAprFzEeeCH50Lr9AhYw" type="_BmLAoLFzEeeCH50Lr9AhYw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BmLnsLFzEeeCH50Lr9AhYw" name="toString" method="_BpBgZ7FzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BmLnsbFzEeeCH50Lr9AhYw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpYstrFzEeeCH50Lr9AhYw" name="" memberEnd="_BpYst7FzEeeCH50Lr9AhYw _BoyPwbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpYst7FzEeeCH50Lr9AhYw" name="" type="_BmJLcLFzEeeCH50Lr9AhYw" association="_BpYstrFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpZTwbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpZTwrFzEeeCH50Lr9AhYw _Bozd4rFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpZTwrFzEeeCH50Lr9AhYw" name="" type="_BmKZk7FzEeeCH50Lr9AhYw" association="_BpZTwbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpZTxLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpZTxbFzEeeCH50Lr9AhYw _Bozd57FzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpZTxbFzEeeCH50Lr9AhYw" name="" type="_BmKZk7FzEeeCH50Lr9AhYw" association="_BpZTxLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BkfloLFzEeeCH50Lr9AhYw" name="abcParser">
        <packagedElement xmi:type="uml:Class" xmi:id="_Bld2ALFzEeeCH50Lr9AhYw" name="ABCParser">
          <ownedComment xmi:id="_BpD8mbFzEeeCH50Lr9AhYw">
            <body>Parses an abc file into IPhrase music structures&lt;br/>

Usage: &lt;br/>
ABCParser parser = new ABCParser(&quot;/data/aMusicFile.abc&quot;); &lt;br/>
IPhrase phrase = parser.parse(); &lt;br/>

Cases handled:&lt;br/>
- single notes with and without accidentals and naturals with regards to measures&lt;br/>
- chords&lt;br/>
- dotted notes&lt;br/>
- grace notes&lt;br/>
- repeats, including first and second repeats.&lt;br/>
- triplets &lt;br/>
- tuplets&lt;br/>
- all headers&lt;br/>
- quoted text&lt;br/>
- D.C. al fine&lt;br/>
- EOF (End Of File)&lt;br/>
&lt;br/>
All other cases ignored.

@author swong
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BohxEbFzEeeCH50Lr9AhYw" name="abcT" visibility="private" type="_BmCdw7FzEeeCH50Lr9AhYw" association="_BpRX87FzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BohxE7FzEeeCH50Lr9AhYw" name="beginningTarget" visibility="private" type="_BliugLFzEeeCH50Lr9AhYw" association="_BpRX9rFzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BohxFLFzEeeCH50Lr9AhYw" value="new DecoratorSeqList()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoiYIbFzEeeCH50Lr9AhYw" name="jumpTargetStack" visibility="private" type="_BoJ9oLFzEeeCH50Lr9AhYw" association="_BpR_AbFzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BoiYI7FzEeeCH50Lr9AhYw" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoiYJbFzEeeCH50Lr9AhYw" name="jumpSecondRepeatStack" visibility="private" type="_BoJ9oLFzEeeCH50Lr9AhYw" association="_BpR_BLFzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Boi_MbFzEeeCH50Lr9AhYw" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Boi_M7FzEeeCH50Lr9AhYw" name="makeSeqListAlgo" visibility="private" type="_Bl8-MLFzEeeCH50Lr9AhYw" association="_BpR_B7FzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Boi_NLFzEeeCH50Lr9AhYw" value="new ATokVisitor(new ITokVisitorCmd() {&#xA;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Default behavior is to ignore any unrecognized tokens by merely proceeding to the next one.&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unhandled Token: &quot; + host);&#xA;&#x9;&#x9;&#x9;return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}) {&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Boi_NrFzEeeCH50Lr9AhYw" name="isGrace" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Boi_N7FzEeeCH50Lr9AhYw" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BojmQbFzEeeCH50Lr9AhYw" name="grace_multiplier" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BojmQrFzEeeCH50Lr9AhYw" value="0.2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BojmRLFzEeeCH50Lr9AhYw" name="graceDuration" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BojmRbFzEeeCH50Lr9AhYw" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BojmR7FzEeeCH50Lr9AhYw" name="dottedCorrection" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BojmSLFzEeeCH50Lr9AhYw" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BokNUbFzEeeCH50Lr9AhYw" name="checkNextNoteAlgo" visibility="private" type="_Bl8-MLFzEeeCH50Lr9AhYw" association="_BpSmEbFzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BokNUrFzEeeCH50Lr9AhYw" value="new ATokVisitor(new ITokVisitorCmd() {&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xA;&#x9;&#x9;&#x9;// No dotted modification detected.&#xA;&#x9;&#x9;&#x9;abcT.putBack(host); // put token back to be reprocessed&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// later&#xA;&#x9;&#x9;&#x9;dottedCorrection = 0.0;&#xA;&#x9;&#x9;&#x9;return params[0]; // return duration unchanged.&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}) {&#xA;&#x9;&#x9;// Initializer block for internal visitor&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;&lt;&quot;, new ITokVisitorCmd() {&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is halved, the next dotted&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0] / 2.0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = duration;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Notes parsed \&quot;&quot; + id + &quot;\&quot; dotting.  durationCorrection = &quot; + dottedCorrection);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;>&quot;, new ITokVisitorCmd() {&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is dotted, the next note halved&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = -duration / 2.0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;duration -= dottedCorrection;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Notes parsed \&quot;&quot; + id + &quot;\&quot; dotting.  durationCorrection = &quot; + dottedCorrection);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BokNVLFzEeeCH50Lr9AhYw" name="accidentalNotes" visibility="private" type="_BlsfgLFzEeeCH50Lr9AhYw" association="_BpSmFLFzEeeCH50Lr9AhYw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BokNVbFzEeeCH50Lr9AhYw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BokNVrFzEeeCH50Lr9AhYw" value="new HashSet&lt;Note>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo49dbFzEeeCH50Lr9AhYw" name="popJumpTarget" specification="_BledELFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo49drFzEeeCH50Lr9AhYw" type="_BliugLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>if (jumpTargetStack.isEmpty())
			return beginningTarget;
		else
			return jumpTargetStack.pop();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo49d7FzEeeCH50Lr9AhYw" name="pushJumpTarget" specification="_Bnl88bFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo49eLFzEeeCH50Lr9AhYw" name="target" type="_BliugLFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>jumpTargetStack.push(target);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo49ebFzEeeCH50Lr9AhYw" name="ABCParser" specification="_BledEbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo49erFzEeeCH50Lr9AhYw" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo49e7FzEeeCH50Lr9AhYw" type="_Bld2ALFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>try {
			abcT = new ABCTokenizer(inputFileName);

			// ------ EOF -----------------------------------------------------
			ITokVisitorCmd eofCmd = new ITokVisitorCmd() {

				@Override
				public Object apply(String id, Token host, Object... params) {
					return MTSeqList.Singleton;
				}
			};

			// ------ Note -----------------------------------------------------
			ITokVisitorCmd noteCmd = new ITokVisitorCmd() {

				@Override
				public Object apply(String id, Token host, Object... params) {
					Note note = makeNote(host);
					System.out.println(&quot;Note parsed: &quot; + note);

					return new NESeqList(note, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));
				}
			};

			// ------ Header-------------------------------------------
			// Same command for all headers
			ITokVisitorCmd headerCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					Header header = new Header(id, host.getLexeme());
					System.out.println(&quot;Header parsed: &quot; + header);
					return new NESeqList(header, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));
				}
			};

			// ------ Chord----------------------------------------------
			ITokVisitorCmd chordStartCmd = new ITokVisitorCmd() {

				// Internal visitor to get rest of chord
				ATokVisitor makeChordAlgo = new ATokVisitor(new ITokVisitorCmd() {
					@Override
					public Object apply(String id, Token host, Object... params) {
						throw new IllegalArgumentException(&quot;ABCParser.chordCmd: Non-Note token encountered:&quot; + host);
					}

				}) {
					// Initializer block for internal visitor
					{
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {
							@SuppressWarnings(&quot;unchecked&quot;)
							@Override
							public Object apply(String id, Token host, Object... params) {
								Note note = makeNote(host);
								System.out.println(&quot;Chord parsed Note: &quot; + note);
								((Vector&lt;Note>) params[0]).add(note);
								return abcT.getNextToken().execute(makeChordAlgo, params);
							}
						});

						this.addCmd(&quot;]&quot;, new ITokVisitorCmd() {
							@SuppressWarnings(&quot;unchecked&quot;)
							@Override
							public Object apply(String id, Token host, Object... params) {
								Vector&lt;Note> vNotes = (Vector&lt;Note>) params[0];
								Note[] result = new Note[vNotes.size()];
								for (int i = 0; i &lt; vNotes.size(); i++)
									result[i] = vNotes.get(i);
								return result;
							}
						});

					}
				};

				@Override
				public Object apply(String id, Token host, Object... params) {
					Note[] notes = (Note[]) abcT.getNextToken().execute(makeChordAlgo, new Vector&lt;Note>());
					Chord chord = new Chord(notes);
					System.out.println(&quot;Chord parsed: &quot; + chord);
					return new NESeqList(chord, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));
				}
			};

			// ------ Grace Note Start---------------------------------------
			ITokVisitorCmd graceStartCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					System.out.println(&quot;Grace Start parsed.&quot;);
					isGrace = true; // Set grace flag on
					// Continue on to next token.
					return abcT.getNextToken().execute(makeSeqListAlgo, params);
				}
			};

			// ------ Grace Note End--------------------------------------------
			ITokVisitorCmd graceEndCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					System.out.println(&quot;Grace End parsed.&quot;);
					isGrace = false; // Set grace flag on
					// Continue on to next token.
					return abcT.getNextToken().execute(makeSeqListAlgo, params);
				}
			};

			// ------ Tuplet----------------------------------------------
			ITokVisitorCmd tupletCmd = new ITokVisitorCmd() {

				// Internal visitor to get rest of chord
				ATokVisitor makeTupletAlgo = new ATokVisitor(new ITokVisitorCmd() {
					@Override
					public Object apply(String id, Token host, Object... params) {
						throw new IllegalArgumentException(&quot;ABCParser.tupletCmd: Non-Note token encountered: &quot; + host);
					}

				}) {
					// Initializer block for internal visitor
					{
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {
							@SuppressWarnings(&quot;unchecked&quot;)
							@Override
							public Object apply(String id, Token host, Object... params) {
								int count = (Integer) params[0];
								Vector&lt;Note> vNotes = ((Vector&lt;Note>) params[1]);

								Note note = makeNote(host);
								System.out.println(&quot;Tuplet parsed Note: &quot; + note + &quot; count = &quot; + count);
								vNotes.add(note);

								if (1 == count) {
									Note[] result = new Note[vNotes.size()];
									for (int i = 0; i &lt; vNotes.size(); i++)
										result[i] = vNotes.get(i);
									return result;
								} else {
									return abcT.getNextToken().execute(makeTupletAlgo, --count, vNotes);
								}
							}
						});

					}
				};

				@Override
				public Object apply(String id, Token host, Object... params) {
					int nNotes = Integer.parseInt(host.getLexeme());

					Note[] notes = (Note[]) abcT.getNextToken().execute(makeTupletAlgo, nNotes, new Vector&lt;Note>());

					NoteCollection result;

					if (3 == nNotes) {
						result = new Triplet(notes[0], notes[1], notes[2]);
					} else {
						result = new Tuplet(notes);
					}
					System.out.println(&quot;Tuplet parsed: &quot; + result);
					return new NESeqList(result, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));
				}
			};

			// ------ Measure bar --------------------------------------------
			ITokVisitorCmd measureBarCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					accidentalNotes.clear(); // clear any accidentals
					System.out.println(&quot;Measure bar parsed.  Accidental Notes cleared.&quot;);
					// Continue on to next token.
					return abcT.getNextToken().execute(makeSeqListAlgo, params);
				}
			};

			// ------ Repeat Start -----------------------------------------
			ITokVisitorCmd repeatStartCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					DecoratorSeqList repeatStart = new DecoratorSeqList();
					pushJumpTarget(repeatStart);
					System.out.println(&quot;Repeat Start parsed&quot;);
					ISeqList result = (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params);
					repeatStart.setDecoree(result);
					return result;
				}
			};

			// ------ Repeat End -----------------------------------------
			ITokVisitorCmd repeatEndCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					ISeqList jumpTarget = popJumpTarget();
					System.out.println(&quot;Repeat End parsed&quot;);
					if (jumpSecondRepeatStack.isEmpty()) {
						return new ToggleDecoratorSeqList(jumpTarget,
								(ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));
					} else {
						abcT.getNextToken().execute(makeSeqListAlgo, params);
						return jumpTarget;
					}
				}
			};

			// ------ First Repeat Start Repeat --------------------------
			ITokVisitorCmd firstRepeatStartCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					DecoratorSeqList secondRepeatStart = new DecoratorSeqList();
					jumpSecondRepeatStack.push(secondRepeatStart);
					System.out.println(&quot;First Repeat Start parsed.  ID = &quot; + id);
					return new ToggleDecoratorSeqList((ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params),
							secondRepeatStart);
				}
			};

			// ------ Second Repeat Start Repeat --------------------------
			ITokVisitorCmd secondRepeatStartCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack.pop();
					System.out.println(&quot;Second Repeat Start parsed.  ID = &quot; + id);
					ISeqList result = (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params);
					secondRepeatStart.setDecoree(result);
					return result;
				}
			};

			// ------ Alt. Second Repeat Start Repeat --------------------------
			/**
			 * This covers the &quot;:|2&quot; token which includes the repeat.
			 */
			ITokVisitorCmd secondRepeatStartAltCmd = new ITokVisitorCmd() {
				@Override
				public Object apply(String id, Token host, Object... params) {
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack.pop();
					System.out.println(&quot;Second Repeat Start Alt. parsed.  ID = &quot; + id);
					ISeqList result = (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params);
					secondRepeatStart.setDecoree(result);
					return popJumpTarget();
				}
			};

			// ------ Quote processing --------------------------
			ITokVisitorCmd quoteCmd = new ITokVisitorCmd() {

				FineToggleDecoratorSeqList fineToggle = new FineToggleDecoratorSeqList();

				boolean isSwapped = false;

				@Override
				public Object apply(String id, Token host, Object... params) {
					if (host.getLexeme().equals(&quot;_fine&quot;)) {

						System.out.println(&quot;\&quot;_fine\&quot; parsed&quot;);
						fineToggle.setDecoree(0, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));
						return fineToggle;
					} else if (host.getLexeme().equals(&quot;_D.C al Fine&quot;)) {
						if (isSwapped) {
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed&quot;);
							return new ISeqList() {

								@Override
								public Object execute(IPhraseVisitor algo, Object... params) {
									fineToggle.setFine();
									return beginningTarget.execute(algo, params);
								}
							};
						} else {
							isSwapped = true;
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed, but swapped for next token.&quot;);
							return swapToken(host).execute(makeSeqListAlgo, params);
						}
					} else {
						System.out.println(&quot;Quote parsed - ignored&quot;);
						return abcT.getNextToken().execute(makeSeqListAlgo, params);
					}
				}
			};

			// ---- Add Commands to Visitor------------------------------

			makeSeqListAlgo.addCmd(&quot;EOF&quot;, eofCmd);
			makeSeqListAlgo.addCmd(&quot;Note&quot;, noteCmd);

			String headers = &quot;ABCDEFGHIKLMNOPQRSTWXZ&quot;;
			for (int i = 0; i &lt; headers.length(); i++) {
				makeSeqListAlgo.addCmd(&quot;&quot; + headers.charAt(i), headerCmd);
			}

			makeSeqListAlgo.addCmd(&quot;[&quot;, chordStartCmd);
			makeSeqListAlgo.addCmd(&quot;{&quot;, graceStartCmd);
			makeSeqListAlgo.addCmd(&quot;}&quot;, graceEndCmd);
			makeSeqListAlgo.addCmd(&quot;Tuplet&quot;, tupletCmd);
			makeSeqListAlgo.addCmd(&quot;|&quot;, measureBarCmd);
			makeSeqListAlgo.addCmd(&quot;|:&quot;, repeatStartCmd);
			makeSeqListAlgo.addCmd(&quot;:|&quot;, repeatEndCmd);
			makeSeqListAlgo.addCmd(&quot;|1&quot;, firstRepeatStartCmd);
			makeSeqListAlgo.addCmd(&quot;[1&quot;, firstRepeatStartCmd);
			makeSeqListAlgo.addCmd(&quot;[2&quot;, secondRepeatStartCmd);
			makeSeqListAlgo.addCmd(&quot;|2&quot;, secondRepeatStartCmd);
			makeSeqListAlgo.addCmd(&quot;:|2&quot;, secondRepeatStartAltCmd);
			makeSeqListAlgo.addCmd(&quot;Quote&quot;, quoteCmd);
		} catch (Exception e) {
			System.err.println(&quot;ABCParser constructor exception: &quot; + e);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo5kgLFzEeeCH50Lr9AhYw" name="parse" specification="_BledFrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo5kgbFzEeeCH50Lr9AhYw" type="_Blm_8bFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>ISeqList beginning = (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, MTSeqList.Singleton);
		beginningTarget.setDecoree(beginning);
		return beginning;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo5kgrFzEeeCH50Lr9AhYw" name="makeNote" specification="_BnmkAbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo5kg7FzEeeCH50Lr9AhYw" name="host" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo5khLFzEeeCH50Lr9AhYw" type="_BlsfgLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>char name = 'C';
		int octave = 0;
		int accidental = 0;
		double duration = 1.0;
		boolean isNatural = false;

		String lex = host.getLexeme();

		// get accidental value
		int i = 0;
		for (; i &lt; lex.length(); i++) {
			if (Character.isLetter(lex.charAt(i))) {
				break;
			}
			if (lex.charAt(i) == '^') {
				accidental += +1;
			} else if (lex.charAt(i) == '_') {
				accidental += -1;
			} else if (lex.charAt(i) == '=') {
				isNatural = true;
			}
		}

		if (Character.isLowerCase(lex.charAt(i))) {
			octave++;
		}
		name = Character.toUpperCase(lex.charAt(i));
		i++;

		// get octave value

		for (; i &lt; lex.length(); i++) {
			if (Character.isDigit(lex.charAt(i)) || '/' == lex.charAt(i)) {
				break;
			}
			if ('\'' == lex.charAt(i))
				octave += +1;
			else if (',' == lex.charAt(i))
				octave += -1;
		}

		if (i &lt; lex.length()) {
			if (Character.isDigit(lex.charAt(i))) {
				int idx = lex.substring(i).indexOf('/');
				if (-1 == idx) {
					duration = Double.parseDouble(lex.substring(i));
				} else if (lex.length() > i + idx + 1) {
					duration = Double.parseDouble(lex.substring(i, i + idx))
							/ Double.parseDouble(lex.substring(i + idx + 1));
				} else {
					duration = Double.parseDouble(lex.substring(i, i + idx)) / 2.0;
				}
			} else {
				i++;
				if (i &lt; lex.length()) {
					duration /= Double.parseDouble(lex.substring(i));
				} else {
					duration /= 2.0; // Slash w/o number is divide by two.
				}
			}
		}

		if (isGrace) {
			duration *= grace_multiplier;
			graceDuration += duration; // sum the duration of the grace notes
		} else if (graceDuration > 0.0) {
			// Correct the length of the current note to get it back on beat.
			duration -= graceDuration;
			graceDuration = 0.0;
		}

		if (dottedCorrection != 0.0) {
			duration += dottedCorrection;
			dottedCorrection = 0.0;
		}

		duration = (Double) abcT.getNextToken().execute(checkNextNoteAlgo, duration);

		Note note = new Note(name, octave, accidental, duration, isNatural);

		if (!isNatural) // naturals always override prior accidentals in measure
			checkAccidentals(note);
		return note;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo5khbFzEeeCH50Lr9AhYw" name="checkAccidentals" specification="_BnmkBLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo5khrFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {
			if (n.getName() == note.getName() &amp;&amp; n.getOctave() == note.getOctave()) {
				System.out.println(note + &quot; found in accidentals.  Overriding accidentals and isNatural to &quot; + n);
				note.setAccidental(n.getAccidental());
				note.setIsNatural(n.getIsNatural()); // this will override
														// accidentals if true
				return;
			}
		}
		if (note.getAccidental() != 0 || note.getIsNatural()) {
			addAccidental(note);
		}
		return;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo5kh7FzEeeCH50Lr9AhYw" name="addAccidental" specification="_BnnLELFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo5kiLFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>removeAccidental(note); // remove anything like this note
		accidentalNotes.add(note); // put this specific note in
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo5kibFzEeeCH50Lr9AhYw" name="removeAccidental" specification="_BnnLErFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo5kirFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {
			if (n.getName() == note.getName() &amp;&amp; n.getOctave() == note.getOctave()) {
				accidentalNotes.remove(n);
				// Check all notes, just to be safe
			}
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo5ki7FzEeeCH50Lr9AhYw" name="swapToken" specification="_BnnLFLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo5kjLFzEeeCH50Lr9AhYw" name="t" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo5kjbFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>Token next = abcT.getNextToken();
		abcT.putBack(t);
		return next;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BledELFzEeeCH50Lr9AhYw" name="popJumpTarget" visibility="private" method="_Bo49dbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpD8mrFzEeeCH50Lr9AhYw">
              <body>Pull off the current jump target from the jump target stack. If the stack
	 * is empty, return the proxy for the beginning of the phrase, as this is
	 * the default jump target.
	 * 
	 * @return The current jump target or the beginning of the phrase.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bnl88LFzEeeCH50Lr9AhYw" type="_BliugLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BledEbFzEeeCH50Lr9AhYw" name="ABCParser" method="_Bo49ebFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BledE7FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BledFLFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpD8nLFzEeeCH50Lr9AhYw">
              <body>Constructs a parser for the given ABC input file.   Does not actually run that parser yet.
	 * Prints error message to System.err if there is a problem opening the given file.   The returned 
	 * parser will be null in the event of an error.
	 * @param inputFileName
	 *            the name of the input text file</body>
            </ownedComment>
            <ownedParameter xmi:id="_BledErFzEeeCH50Lr9AhYw" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BledFbFzEeeCH50Lr9AhYw" type="_Bld2ALFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BledFrFzEeeCH50Lr9AhYw" name="parse" method="_Bo5kgLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpD8nbFzEeeCH50Lr9AhYw">
              <body>
	 * Run the parser and parse the entire file, returning an IPhrase object that represents the entire piece of music.
	 * 
	 * @return An IPhrase object</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnmkALFzEeeCH50Lr9AhYw" type="_Blm_8bFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bnl88bFzEeeCH50Lr9AhYw" name="pushJumpTarget" visibility="private" method="_Bo49d7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpD8m7FzEeeCH50Lr9AhYw">
              <body>Push the given jump target onto the stack so that it is now the current
	 * jump target. This corresponds to the innermost nested repeat.
	 * 
	 * @param target
	 *            The new current jump target.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bnl88rFzEeeCH50Lr9AhYw" name="target" type="_BliugLFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BnmkAbFzEeeCH50Lr9AhYw" name="makeNote" visibility="private" method="_Bo5kgrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpD8nrFzEeeCH50Lr9AhYw">
              <body>Parse a Note from the given Token
	 * 
	 * @param host
	 *            The Note token
	 * @return A Note object</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnmkArFzEeeCH50Lr9AhYw" name="host" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BnmkA7FzEeeCH50Lr9AhYw" type="_BlsfgLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BnmkBLFzEeeCH50Lr9AhYw" name="checkAccidentals" visibility="private" method="_Bo5khbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpD8n7FzEeeCH50Lr9AhYw">
              <body>Checks to see if the given Note is in the set of accidentals Checks name
	 * and octave but not duration or accidental
	 * 
	 * @param note
	 *            The note to check</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnmkBbFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BnnLELFzEeeCH50Lr9AhYw" name="addAccidental" visibility="private" method="_Bo5kh7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpD8oLFzEeeCH50Lr9AhYw">
              <body>Adds a note to the set of accidentals replaces any note with the same
	 * name and octave. duration and accidental are ignored.
	 * 
	 * @param note
	 *            the Note to add.</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnnLEbFzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BnnLErFzEeeCH50Lr9AhYw" name="removeAccidental" visibility="private" method="_Bo5kibFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpD8obFzEeeCH50Lr9AhYw">
              <body>Removes a note from the set of accidentals Removes any note with the same
	 * name and octave. duration and accidental are ignored.
	 * 
	 * @param note
	 *            the note to remove</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnnLE7FzEeeCH50Lr9AhYw" name="note" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BnnLFLFzEeeCH50Lr9AhYw" name="swapToken" visibility="private" method="_Bo5ki7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpD8orFzEeeCH50Lr9AhYw">
              <body>Swap the given token for the next token in the tokenizer, returning the
	 * next token. The given token will be the next token out of the tokenizer.
	 * 
	 * @param t The token to be swapped into the tokenizer
	 * @return the token that previously was next in the tokenizer.</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnnLFbFzEeeCH50Lr9AhYw" name="t" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BnnLFrFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpRX87FzEeeCH50Lr9AhYw" name="" memberEnd="_BpRX9LFzEeeCH50Lr9AhYw _BohxEbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpRX9LFzEeeCH50Lr9AhYw" name="" type="_Bld2ALFzEeeCH50Lr9AhYw" association="_BpRX87FzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpRX9rFzEeeCH50Lr9AhYw" name="" memberEnd="_BpRX97FzEeeCH50Lr9AhYw _BohxE7FzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpRX97FzEeeCH50Lr9AhYw" name="" type="_Bld2ALFzEeeCH50Lr9AhYw" association="_BpRX9rFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpR_AbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpR_ArFzEeeCH50Lr9AhYw _BoiYIbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpR_ArFzEeeCH50Lr9AhYw" name="" type="_Bld2ALFzEeeCH50Lr9AhYw" association="_BpR_AbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpR_BLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpR_BbFzEeeCH50Lr9AhYw _BoiYJbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpR_BbFzEeeCH50Lr9AhYw" name="" type="_Bld2ALFzEeeCH50Lr9AhYw" association="_BpR_BLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpR_B7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpR_CLFzEeeCH50Lr9AhYw _Boi_M7FzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpR_CLFzEeeCH50Lr9AhYw" name="" type="_Bld2ALFzEeeCH50Lr9AhYw" association="_BpR_B7FzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpSmEbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpSmErFzEeeCH50Lr9AhYw _BokNUbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpSmErFzEeeCH50Lr9AhYw" name="" type="_Bld2ALFzEeeCH50Lr9AhYw" association="_BpSmEbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpSmFLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpSmFbFzEeeCH50Lr9AhYw _BokNVLFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpSmFbFzEeeCH50Lr9AhYw" name="" type="_Bld2ALFzEeeCH50Lr9AhYw" association="_BpSmFLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BkflobFzEeeCH50Lr9AhYw" name="music">
        <packagedElement xmi:type="uml:Package" xmi:id="_BkflorFzEeeCH50Lr9AhYw" name="visitor">
          <packagedElement xmi:type="uml:Class" xmi:id="_Bl0bULFzEeeCH50Lr9AhYw" name="playerAlgo">
            <ownedComment xmi:id="_BpFxyrFzEeeCH50Lr9AhYw">
              <body>@author Yiqing Lu
@author Alexander Hansen
Create the playerAlgo class extend APhraseVisitor
The playerAlgo installs commands to handle all of those hosts.</body>
            </ownedComment>
            <generalization xmi:id="_Bn0mcLFzEeeCH50Lr9AhYw" general="_BlgSQLFzEeeCH50Lr9AhYw"/>
            <ownedAttribute xmi:id="_Bops4rFzEeeCH50Lr9AhYw" name="key_signature" visibility="private" type="_BmKZk7FzEeeCH50Lr9AhYw" association="_BpVCVLFzEeeCH50Lr9AhYw"/>
            <ownedAttribute xmi:id="_Bops5LFzEeeCH50Lr9AhYw" name="sp" visibility="private" type="_Bl5T0LFzEeeCH50Lr9AhYw" association="_BpVCV7FzEeeCH50Lr9AhYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo91_bFzEeeCH50Lr9AhYw" name="playerAlgo" specification="_Bl0bUbFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_Bo91_rFzEeeCH50Lr9AhYw" type="_Bl0bULFzEeeCH50Lr9AhYw" direction="return"/>
              <language>java</language>
              <body>/*
		 * install commands to deal with headers you do not care about
		 */
		String headerString = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
		for (int i = 0; i &lt; headerString.length(); i++) {
			this.addCmd(&quot;&quot; + headerString.charAt(i), new IPhraseVisitorCmd() {
				public Object apply(String id, IPhrase host, Object... params) {
					return params[1];
				}
			});
		}

		/*
		 * install commands to deal with &quot;L&quot; header
		 */
		this.addCmd(&quot;L&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				Header head = (Header) host;
				sp = (SequencePlayer2) params[0];
				double defaultLengthPerNote = ABCUtil.Singleton.parseFraction(head.getValue());
				double ticks = 64 * defaultLengthPerNote;
				sp.setTicksPerDefaultNote((int) ticks);
				return params[1];
			}
		});

		/*
		 * install commands to deal with &quot;K&quot; header
		 */
		this.addCmd(&quot;K&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				Header head = (Header) host;
				key_signature = new KeySignature(head.getValue());
				return params[1];
			}
		});

		/*
		 * install commands to deal with &quot;Q&quot; header
		 */
		this.addCmd(&quot;Q&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				Header head = (Header) host;
				sp = (SequencePlayer2) params[0];
				double tempo = ABCUtil.Singleton.parseTempo(head.getValue(),
						1.0 * sp.getTicksPerQuarterNote() / sp.getTicksPerDefaultNote());
				sp.setTempo((int) tempo);
				return params[1];
			}
		});

		/*
		 * install commands to deal with Chord
		 */
		this.addCmd(Chord.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				Chord chord = (Chord) host;
				sp = (SequencePlayer2) params[0];
				int param = (int) params[1];
				for (Note temp_note : chord.getNotes()) {
					param = (int) temp_note.execute(playerAlgo.this, params);
				}
				return param;
			}
		});
		/*
		 * install commands to deal with Triplet
		 */
		this.addCmd(Triplet.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				Triplet triplet = (Triplet) host;
				sp = (SequencePlayer2) params[0];
				int param = (int) params[1];
				for (Note temp_note : triplet.getNotes()) {
					temp_note.setDuration(temp_note.getDuration() * 2.0 / 3);
					param = (int) temp_note.execute(playerAlgo.this, params);
				}
				return param;
			}
		});

		/*
		 * install commands to deal with Note
		 */
		this.addCmd(Note.ID, new IPhraseVisitorCmd() {

			public Object apply(String id, IPhrase host, Object... params) {
				sp = (SequencePlayer2) params[0];
				Note note = (Note) host;
				if (key_signature != null) {
					note = key_signature.adjust(note);
				}
				return sp.addNote(note, (int) params[1]);
			}
		});

		/*
		 * install commands to deal with non-empty sequence list
		 */
		this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				NESeqList ne_list = (NESeqList) host;
				int param = (int) ne_list.getFirst().execute(playerAlgo.this, params);
				return ne_list.getRest().execute(playerAlgo.this, params[0], param);
			}
		});

		/*
		 * install commands to deal with empty sequence list
		 */
		this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				return params[1];
			}
		});

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Bl0bUbFzEeeCH50Lr9AhYw" name="playerAlgo" method="_Bo91_bFzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_Bl0bUrFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Bl0bU7FzEeeCH50Lr9AhYw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_BpFxy7FzEeeCH50Lr9AhYw">
                <body>Constructor for playerAlgo.</body>
              </ownedComment>
              <ownedParameter xmi:id="_Bl0bVLFzEeeCH50Lr9AhYw" type="_Bl0bULFzEeeCH50Lr9AhYw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Bl1CYLFzEeeCH50Lr9AhYw" name="toStringAlgo">
            <ownedComment xmi:id="_BpFxzLFzEeeCH50Lr9AhYw">
              <body>@author Yiqing Lu
@author Alexander Hansen
Create the toStringAlgo class extend APhraseVisitor
The toStringAlgo provides the recursive forward accumulating helper (inner) algorithm.
It helps to represents the music. All the elements are divided by commas, and the parenthesis
holds these elements.</body>
            </ownedComment>
            <generalization xmi:id="_Bn0mcbFzEeeCH50Lr9AhYw" general="_BlgSQLFzEeeCH50Lr9AhYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo91_7FzEeeCH50Lr9AhYw" name="toStringAlgo" specification="_Bl1CYbFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_Bo92ALFzEeeCH50Lr9AhYw" type="_Bl1CYLFzEeeCH50Lr9AhYw" direction="return"/>
              <language>java</language>
              <body>/*
		 * install commands to deal with non-empty sequence list
		 */
		this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				NESeqList ne_list = (NESeqList) host;
				NESeqList.setToStringAlgo(toStringAlgo.this);
				return ne_list.getRest().execute(NESeqList.getToStringAlgo(), params[0] + &quot;,&quot; + ne_list.getFirst());
			}
		});

		/*
		 * install commands to deal with empty sequence list
		 */
		this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params) {
				return params[0] + &quot;}&quot;;
			}
		});

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Bl1CYbFzEeeCH50Lr9AhYw" name="toStringAlgo" method="_Bo91_7FzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_Bl1pcLFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Bl1pcbFzEeeCH50Lr9AhYw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Bl1pcrFzEeeCH50Lr9AhYw" type="_Bl1CYLFzEeeCH50Lr9AhYw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BpVCVLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpVCVbFzEeeCH50Lr9AhYw _Bops4rFzEeeCH50Lr9AhYw">
            <ownedEnd xmi:id="_BpVCVbFzEeeCH50Lr9AhYw" name="" type="_Bl0bULFzEeeCH50Lr9AhYw" association="_BpVCVLFzEeeCH50Lr9AhYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BpVCV7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpVCWLFzEeeCH50Lr9AhYw _Bops5LFzEeeCH50Lr9AhYw">
            <ownedEnd xmi:id="_BpVCWLFzEeeCH50Lr9AhYw" name="" type="_Bl0bULFzEeeCH50Lr9AhYw" association="_BpVCV7FzEeeCH50Lr9AhYw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BlgSQLFzEeeCH50Lr9AhYw" name="APhraseVisitor" isAbstract="true">
          <ownedComment xmi:id="_BpD8o7FzEeeCH50Lr9AhYw">
            <body>Command-based implementation of IPhraseVisitor that uses IPhraseVisitorCmds stored in a hash table.
@author swong
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Bok0YLFzEeeCH50Lr9AhYw" name="defaultCmd" visibility="private" type="_BloOELFzEeeCH50Lr9AhYw" association="_BpTNIbFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_Bok0YrFzEeeCH50Lr9AhYw" name="cmds" visibility="private" type="_BloOELFzEeeCH50Lr9AhYw" association="_BpTNJLFzEeeCH50Lr9AhYw">
            <qualifier xmi:id="_Bok0ZbFzEeeCH50Lr9AhYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bok0Y7FzEeeCH50Lr9AhYw" value="new Hashtable&lt;String, IPhraseVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_BnoZM7FzEeeCH50Lr9AhYw" client="_BlgSQLFzEeeCH50Lr9AhYw" supplier="_BlnnALFzEeeCH50Lr9AhYw" contract="_BlnnALFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo5kjrFzEeeCH50Lr9AhYw" name="APhraseVisitor" specification="_Blg5ULFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo5kj7FzEeeCH50Lr9AhYw" type="_BlgSQLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new IPhraseVisitorCmd() {
			public Object apply(String idx, IPhrase host, Object... inps) {
				throw new IllegalArgumentException(&quot;APhraseVisitor: Unknown index encountered: &quot; + idx);
			}
		};
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo5kkLFzEeeCH50Lr9AhYw" name="APhraseVisitor" specification="_BnpAQLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo5kkbFzEeeCH50Lr9AhYw" name="defaultCmd" type="_BloOELFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo5kkrFzEeeCH50Lr9AhYw" type="_BlgSQLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6LkLFzEeeCH50Lr9AhYw" name="caseAt" specification="_BoLLw7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6LkbFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6LkrFzEeeCH50Lr9AhYw" name="host" type="_Blm_8bFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo6Lk7FzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo6LlLFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6LlbFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {
			return cmds.get(id).apply(id, host, params);
		} else {
			return defaultCmd.apply(id, host, params);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6LlrFzEeeCH50Lr9AhYw" name="addCmd" specification="_BnpARbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6Ll7FzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6LmLFzEeeCH50Lr9AhYw" name="cmd" type="_BloOELFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>cmds.put(id, cmd);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Blg5ULFzEeeCH50Lr9AhYw" name="APhraseVisitor" method="_Bo5kjrFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Blg5UbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Blg5UrFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpD8pLFzEeeCH50Lr9AhYw">
              <body>Constructor that installs a default cmd that throws an IllegalArgumentException on any unknown host.</body>
            </ownedComment>
            <ownedComment xmi:id="_BpD8pbFzEeeCH50Lr9AhYw">
              <body>Abstract extended visitor implementation that uses a dictionary of commands to associate commands with host IDs.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Blg5U7FzEeeCH50Lr9AhYw" type="_BlgSQLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BnpAQLFzEeeCH50Lr9AhYw" name="APhraseVisitor" method="_Bo5kkLFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BnpAQrFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BnpAQ7FzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpD8prFzEeeCH50Lr9AhYw">
              <body>Constructor that sets the default cmd to the supplied cmd.
	 * @param defaultCmd   the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnpAQbFzEeeCH50Lr9AhYw" name="defaultCmd" type="_BloOELFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BnpARLFzEeeCH50Lr9AhYw" type="_BlgSQLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BnpARbFzEeeCH50Lr9AhYw" name="addCmd" method="_Bo6LlrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpEjoLFzEeeCH50Lr9AhYw">
              <body>Add the given command to the dictionary, associated with the given id value.
	 * @param id The id of the host that will use this command
	 * @param cmd The command that will be run when the host calls for it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnpARrFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BnpAR7FzEeeCH50Lr9AhYw" name="cmd" type="_BloOELFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoLLw7FzEeeCH50Lr9AhYw" name="caseAt" method="_Bo6LkLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoLLxLFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoLLxbFzEeeCH50Lr9AhYw" name="host" type="_Blm_8bFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoLLxrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoLy0rFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoLy0LFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BliHcLFzEeeCH50Lr9AhYw" name="Chord">
          <ownedComment xmi:id="_BpEjobFzEeeCH50Lr9AhYw">
            <body>A collection of notes that make up a Chord.  All of the notes should
be played simultaneously.   The last note defines the length of all the notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpEjorFzEeeCH50Lr9AhYw">
            <body>A collection of Notes all played at once</body>
          </ownedComment>
          <generalization xmi:id="_BnqOZLFzEeeCH50Lr9AhYw" general="_BluUsLFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BolbcLFzEeeCH50Lr9AhYw" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BolbcbFzEeeCH50Lr9AhYw" value="&quot;Chord&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6LmbFzEeeCH50Lr9AhYw" name="Chord" specification="_BnpnULFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6LmrFzEeeCH50Lr9AhYw" name="notes" type="_BlsfgLFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo6Lm7FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6LnLFzEeeCH50Lr9AhYw" type="_BliHcLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>super(notes);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6LnbFzEeeCH50Lr9AhYw" name="execute" specification="_BoLy1LFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6LnrFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo6Ln7FzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo6LoLFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6LobFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6LorFzEeeCH50Lr9AhYw" name="toString" specification="_BliHcbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6Lo7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Chord(&quot; + notes[0];
		for (int i = 1; i &lt; notes.length; i++) {
			result += &quot;, &quot; + notes[i];
		}
		return result + &quot;)&quot;;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BliHcbFzEeeCH50Lr9AhYw" name="toString" method="_Bo6LorFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BliHcrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BnpnULFzEeeCH50Lr9AhYw" name="Chord" method="_Bo6LmbFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BnpnUrFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BnpnU7FzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BnpnUbFzEeeCH50Lr9AhYw" name="notes" type="_BlsfgLFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BnqOYrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BnqOYbFzEeeCH50Lr9AhYw" type="_BliHcLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoLy1LFzEeeCH50Lr9AhYw" name="execute" method="_Bo6LnbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoMZ4LFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoMZ4bFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoMZ5LFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoMZ4rFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BliugLFzEeeCH50Lr9AhYw" name="DecoratorSeqList">
          <ownedComment xmi:id="_BpEjo7FzEeeCH50Lr9AhYw">
            <body>An ISeqList that transparently routes the visitor execution to its decoree.  
This class is primarily used to provide a placeholder when a the music should flow 
to a specific point in the sequence but that point has not yet been calculated, as occurs
for instance, during the processing of repeats.    When that target point is finally calculated, 
the decoree can be set and the decorated target will behave identically to the target.
This decorator can also be used to dynamically change the flow of the music by changing the target.  
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_BpEjpLFzEeeCH50Lr9AhYw">
            <body>Decorated ISeqList used as a transparent proxy placeholder.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BolbcrFzEeeCH50Lr9AhYw" name="decoree" visibility="private" type="_Blo1ILFzEeeCH50Lr9AhYw" association="_BpTNJ7FzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bolbc7FzEeeCH50Lr9AhYw" value="MTSeqList.Singleton"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Bnq1cLFzEeeCH50Lr9AhYw" client="_BliugLFzEeeCH50Lr9AhYw" supplier="_Blo1ILFzEeeCH50Lr9AhYw" contract="_Blo1ILFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6LpLFzEeeCH50Lr9AhYw" name="DecoratorSeqList" specification="_Bnq1cbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6LpbFzEeeCH50Lr9AhYw" name="decoree" type="_Blo1ILFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo6LprFzEeeCH50Lr9AhYw" type="_BliugLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>setDecoree(decoree);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6Lp7FzEeeCH50Lr9AhYw" name="setDecoree" specification="_Bnq1drFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6LqLFzEeeCH50Lr9AhYw" name="decoree" type="_Blo1ILFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>this.decoree = decoree;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6LqbFzEeeCH50Lr9AhYw" name="execute" specification="_BoNA8LFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6LqrFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo6Lq7FzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo6LrLFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6LrbFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return decoree.execute(algo, params);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BliugbFzEeeCH50Lr9AhYw" name="DecoratorSeqList">
            <eAnnotations xmi:id="_BljVkLFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BljVkbFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BljVk7FzEeeCH50Lr9AhYw" type="_BliugLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bnq1cbFzEeeCH50Lr9AhYw" name="DecoratorSeqList" method="_Bo6LpLFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Bnq1c7FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bnq1dLFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpEjpbFzEeeCH50Lr9AhYw">
              <body>Constructor used to set the decoree to a known value at construction time.
	 * @param decoree The decoree phrase sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bnq1crFzEeeCH50Lr9AhYw" name="decoree" type="_Blo1ILFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bnq1dbFzEeeCH50Lr9AhYw" type="_BliugLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bnq1drFzEeeCH50Lr9AhYw" name="setDecoree" method="_Bo6Lp7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpEjprFzEeeCH50Lr9AhYw">
              <body>Setter methods used to set the decoree.
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bnq1d7FzEeeCH50Lr9AhYw" name="decoree" type="_Blo1ILFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoNA8LFzEeeCH50Lr9AhYw" name="execute" method="_Bo6LqbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoNA8bFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoNA8rFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoNA9bFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoNA87FzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Blj8oLFzEeeCH50Lr9AhYw" name="FineToggleDecoratorSeqList">
          <ownedComment xmi:id="_BpEjp7FzEeeCH50Lr9AhYw">
            <body>The class is used to implement &quot;Da Capo al fine&quot; or &quot;D.C. al fine&quot;, 
which is to repeat from the beginning up to the &quot;fine&quot; marker.

this class assumes that only two target decorees are ever used.

The is ToggleDecoratorSeqList that can be signaled to switch to the 
another target.   Be default, the target decoree (#0) remains the same even 
when it is accessed.  But after setFine() is called, the target decoree
is switched to the #1 decoree (the &quot;fine&quot; target, usually an MTSeqList because
it is the end of the piece).   After the #1 decoree is used, the target
decoree is advanced to the next available decoree, which , for two decorees, 
would be back to the #0 decoree.  The class returns to default behavior then.
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_BpEjqLFzEeeCH50Lr9AhYw">
            <body>ToggleDecoratorSeqList with controllable cycling</body>
          </ownedComment>
          <generalization xmi:id="_BnsDlLFzEeeCH50Lr9AhYw" general="_Blvi0LFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BolbdbFzEeeCH50Lr9AhYw" name="isFine" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BolbdrFzEeeCH50Lr9AhYw" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6yoLFzEeeCH50Lr9AhYw" name="FineToggleDecoratorSeqList" specification="_Blj8obFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6yobFzEeeCH50Lr9AhYw" type="_Blj8oLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>super();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6yorFzEeeCH50Lr9AhYw" name="FineToggleDecoratorSeqList" specification="_BnrcgLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6yo7FzEeeCH50Lr9AhYw" name="decorees" type="_Blo1ILFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo6ypLFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6ypbFzEeeCH50Lr9AhYw" type="_Blj8oLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>super(decorees);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6yprFzEeeCH50Lr9AhYw" name="setFine" specification="_BlkjsLFzEeeCH50Lr9AhYw">
            <language>java</language>
            <body>this.isFine = true;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6yp7FzEeeCH50Lr9AhYw" name="execute" specification="_BoNoArFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6yqLFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo6yqbFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo6yqrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6yq7FzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>if (isFine) {
			isFine = false;
			this.setTargetToDecoree(1);
			return super.execute(algo, params);
		} else
			return getTargetDecoree().execute(algo, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6yrLFzEeeCH50Lr9AhYw" name="toString" specification="_BlkjsbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6yrbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Blj8obFzEeeCH50Lr9AhYw" name="FineToggleDecoratorSeqList" method="_Bo6yoLFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Blj8orFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Blj8o7FzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpEjqbFzEeeCH50Lr9AhYw">
              <body>Instantiates the class with two MTSeqList decorees.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Blj8pLFzEeeCH50Lr9AhYw" type="_Blj8oLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BlkjsLFzEeeCH50Lr9AhYw" name="setFine" method="_Bo6yprFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpEjqrFzEeeCH50Lr9AhYw">
              <body>Sets the system to use the &quot;fine&quot; decorator at the next execution.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_BlkjsbFzEeeCH50Lr9AhYw" name="toString" method="_Bo6yrLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BlkjsrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BnrcgLFzEeeCH50Lr9AhYw" name="FineToggleDecoratorSeqList" method="_Bo6yorFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BnrcgrFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bnrcg7FzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BnrcgbFzEeeCH50Lr9AhYw" name="decorees" type="_Blo1ILFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BnsDkrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BnsDkbFzEeeCH50Lr9AhYw" type="_Blj8oLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoNoArFzEeeCH50Lr9AhYw" name="execute" method="_Bo6yp7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoNoA7FzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoNoBLFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoNoB7FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoNoBbFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BllKwLFzEeeCH50Lr9AhYw" name="Header">
          <ownedComment xmi:id="_BpEjq7FzEeeCH50Lr9AhYw">
            <body>An abc Header.  Headers are identified by a one character &quot;id&quot; and
can have an arbitrary string value. 
Note that this class represents many different *types* of headers, 
each with its own id value.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpEjrLFzEeeCH50Lr9AhYw">
            <body>A single Header class represents multiple, distinct header hosts.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BomCgbFzEeeCH50Lr9AhYw" name="_id" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BomCg7FzEeeCH50Lr9AhYw" name="_value" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_BnsqoLFzEeeCH50Lr9AhYw" client="_BllKwLFzEeeCH50Lr9AhYw" supplier="_Blm_8bFzEeeCH50Lr9AhYw" contract="_Blm_8bFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6yrrFzEeeCH50Lr9AhYw" name="Header" specification="_Bllx0LFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6yr7FzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6ysLFzEeeCH50Lr9AhYw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6ysbFzEeeCH50Lr9AhYw" type="_BllKwLFzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>_id = id;
		_value = value;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6ysrFzEeeCH50Lr9AhYw" name="execute" specification="_BoOPE7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6ys7FzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo6ytLFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo6ytbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo6ytrFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return algo.caseAt(_id, this, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo6yt7FzEeeCH50Lr9AhYw" name="getID" specification="_Bllx1rFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo6yuLFzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo7ZsLFzEeeCH50Lr9AhYw" name="getValue" specification="_BlmY4bFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo7ZsbFzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _value;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo7ZsrFzEeeCH50Lr9AhYw" name="toString" specification="_BlmY47FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo7Zs7FzEeeCH50Lr9AhYw" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id + &quot;:&quot; + _value;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Bllx0LFzEeeCH50Lr9AhYw" name="Header" method="_Bo6yrrFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Bllx07FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bllx1LFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpEjrbFzEeeCH50Lr9AhYw">
              <body>Create a header out of an id and value
	 * 
	 * @param id    - one character corresponding to the abc header name
	 * @param value - arbitrary string value of the header</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bllx0bFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bllx0rFzEeeCH50Lr9AhYw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bllx1bFzEeeCH50Lr9AhYw" type="_BllKwLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bllx1rFzEeeCH50Lr9AhYw" name="getID" method="_Bo6yt7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpEjrrFzEeeCH50Lr9AhYw">
              <body>Accessor for the id.
	 * @return the _id</body>
            </ownedComment>
            <ownedParameter xmi:id="_BlmY4LFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BlmY4bFzEeeCH50Lr9AhYw" name="getValue" method="_Bo7ZsLFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpEjr7FzEeeCH50Lr9AhYw">
              <body>Accessor for the text value of this header.
	 * @return the _value</body>
            </ownedComment>
            <ownedParameter xmi:id="_BlmY4rFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BlmY47FzEeeCH50Lr9AhYw" name="toString" method="_Bo7ZsrFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpEjsLFzEeeCH50Lr9AhYw">
              <body>String representation of this header: &quot;id: text&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_BlmY5LFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BoOPE7FzEeeCH50Lr9AhYw" name="execute" method="_Bo6ysrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoOPFLFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoOPFbFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoO2IrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoO2ILFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Blm_8LFzEeeCH50Lr9AhYw" name="INote">
          <ownedComment xmi:id="_BpEjsbFzEeeCH50Lr9AhYw">
            <body>Note interface for Notes and collections of Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpEjsrFzEeeCH50Lr9AhYw">
            <body>A generalized notion of a note</body>
          </ownedComment>
          <generalization xmi:id="_BnsqobFzEeeCH50Lr9AhYw" general="_Blm_8bFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Blm_8bFzEeeCH50Lr9AhYw" name="IPhrase">
          <ownedComment xmi:id="_BpEjs7FzEeeCH50Lr9AhYw">
            <body>Top level of a piece of abc music.  The generalized notion of a playable piece of music.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpEjtLFzEeeCH50Lr9AhYw">
            <body>Abstract Host
Each concrete host calls its associated case on the visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_BoPdMLFzEeeCH50Lr9AhYw" name="execute">
            <ownedParameter xmi:id="_BoPdMbFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoPdMrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoPdNbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoPdM7FzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_BlnnALFzEeeCH50Lr9AhYw" name="IPhraseVisitor">
          <ownedComment xmi:id="_BpEjtbFzEeeCH50Lr9AhYw">
            <body>Interface for a Phrase visitor.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpEjtrFzEeeCH50Lr9AhYw">
            <body>Abstract extended visitor.
Supplies case behavior for every host.</body>
          </ownedComment>
          <ownedOperation xmi:id="_BoQEQLFzEeeCH50Lr9AhYw" name="caseAt">
            <ownedParameter xmi:id="_BoQEQbFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoQEQrFzEeeCH50Lr9AhYw" name="host" type="_Blm_8bFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoQEQ7FzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoQERrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoQERLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_BloOELFzEeeCH50Lr9AhYw" name="IPhraseVisitorCmd">
          <ownedComment xmi:id="_BpFKsLFzEeeCH50Lr9AhYw">
            <body>The command used by APhraseVisitor that is associated with a host or hosts.
@author rixner</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFKsbFzEeeCH50Lr9AhYw">
            <body>Abstract command used by APhraseVisitor.  Each command is associated with a particular host(s).</body>
          </ownedComment>
          <ownedOperation xmi:id="_BoQrULFzEeeCH50Lr9AhYw" name="apply">
            <ownedParameter xmi:id="_BoQrUbFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoQrUrFzEeeCH50Lr9AhYw" name="host" type="_Blm_8bFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoQrU7FzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoQrVrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoQrVLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Blo1ILFzEeeCH50Lr9AhYw" name="ISeqList">
          <ownedComment xmi:id="_BpFKsrFzEeeCH50Lr9AhYw">
            <body>Interface for sequential lists of IPhrases.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFKs7FzEeeCH50Lr9AhYw">
            <body>A list of IPhrases
e.g. an ordered sequence of Notes.</body>
          </ownedComment>
          <generalization xmi:id="_BntRsLFzEeeCH50Lr9AhYw" general="_Blm_8bFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Blo1IbFzEeeCH50Lr9AhYw" name="MTSeqList">
          <ownedComment xmi:id="_BpFKtLFzEeeCH50Lr9AhYw">
            <body>An empty sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFKtbFzEeeCH50Lr9AhYw">
            <body>An empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BompkLFzEeeCH50Lr9AhYw" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BompkbFzEeeCH50Lr9AhYw" value="&quot;MTSeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BompkrFzEeeCH50Lr9AhYw" name="Singleton" isLeaf="true" isStatic="true" type="_Blo1IbFzEeeCH50Lr9AhYw" isReadOnly="true" association="_BpT0MbFzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bompk7FzEeeCH50Lr9AhYw" value="new MTSeqList()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_BntRsbFzEeeCH50Lr9AhYw" client="_Blo1IbFzEeeCH50Lr9AhYw" supplier="_Blo1ILFzEeeCH50Lr9AhYw" contract="_Blo1ILFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo7ZtLFzEeeCH50Lr9AhYw" name="execute" specification="_BoRSYLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo7ZtbFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo7ZtrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo7Zt7FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo7ZuLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo7ZubFzEeeCH50Lr9AhYw" name="toString" specification="_BlpcNbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo7ZurFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;{}&quot;;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BlpcMLFzEeeCH50Lr9AhYw" name="MTSeqList" visibility="private">
            <eAnnotations xmi:id="_BlpcMbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BlpcMrFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BlpcNLFzEeeCH50Lr9AhYw" type="_Blo1IbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BlpcNbFzEeeCH50Lr9AhYw" name="toString" method="_Bo7ZubFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BlpcNrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BoRSYLFzEeeCH50Lr9AhYw" name="execute" method="_Bo7ZtLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoRSYbFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoRSYrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoRSZbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoRSY7FzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BlqDQLFzEeeCH50Lr9AhYw" name="NESeqList">
          <ownedComment xmi:id="_BpFKtrFzEeeCH50Lr9AhYw">
            <body>A non-empty (&quot;cons&quot;) sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFKt7FzEeeCH50Lr9AhYw">
            <body>A non-empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BomplLFzEeeCH50Lr9AhYw" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BomplbFzEeeCH50Lr9AhYw" value="&quot;NESeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BomplrFzEeeCH50Lr9AhYw" name="_first" visibility="private" type="_Blm_8bFzEeeCH50Lr9AhYw" association="_BpT0NLFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BonQobFzEeeCH50Lr9AhYw" name="_rest" visibility="private" type="_Blo1ILFzEeeCH50Lr9AhYw" association="_BpT0N7FzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BonQo7FzEeeCH50Lr9AhYw" name="_toStringAlgo" visibility="private" isStatic="true" type="_BlnnALFzEeeCH50Lr9AhYw" association="_BpUbQbFzEeeCH50Lr9AhYw"/>
          <interfaceRealization xmi:id="_Bnt4wLFzEeeCH50Lr9AhYw" client="_BlqDQLFzEeeCH50Lr9AhYw" supplier="_Blo1ILFzEeeCH50Lr9AhYw" contract="_Blo1ILFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo7Zu7FzEeeCH50Lr9AhYw" name="NESeqList" specification="_Bnt4wbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo7ZvLFzEeeCH50Lr9AhYw" name="first" type="_Blm_8bFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo7ZvbFzEeeCH50Lr9AhYw" name="rest" type="_Blo1ILFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo7ZvrFzEeeCH50Lr9AhYw" type="_BlqDQLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>this._rest = rest;
		this._first = first;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo7Zv7FzEeeCH50Lr9AhYw" name="getFirst" specification="_BlqqULFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo7ZwLFzEeeCH50Lr9AhYw" type="_Blm_8bFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return _first;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo7ZwbFzEeeCH50Lr9AhYw" name="getRest" specification="_BlqqUbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo7ZwrFzEeeCH50Lr9AhYw" type="_Blo1ILFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return _rest;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8AwLFzEeeCH50Lr9AhYw" name="execute" specification="_BoR5cLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8AwbFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo8AwrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo8Aw7FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8AxLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8AxbFzEeeCH50Lr9AhYw" name="setToStringAlgo" specification="_Bnuf17FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8AxrFzEeeCH50Lr9AhYw" name="stringAlgo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>_toStringAlgo = stringAlgo;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8Ax7FzEeeCH50Lr9AhYw" name="getToStringAlgo" specification="_BlrRYLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8AyLFzEeeCH50Lr9AhYw" type="_BlnnALFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return _toStringAlgo;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8AybFzEeeCH50Lr9AhYw" name="toString" specification="_BlrRYbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8AyrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) _rest.execute(_toStringAlgo, &quot;{&quot; + _first.toString());
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BlqqULFzEeeCH50Lr9AhYw" name="getFirst" method="_Bo7Zv7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKubFzEeeCH50Lr9AhYw">
              <body>Accessor method for the first element
	 * @return the IPhrase that is the first element of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bnuf1bFzEeeCH50Lr9AhYw" type="_Blm_8bFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BlqqUbFzEeeCH50Lr9AhYw" name="getRest" method="_Bo7ZwbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKurFzEeeCH50Lr9AhYw">
              <body>Accessor method for the rest of the lsit
	 * @return the rest of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bnuf1rFzEeeCH50Lr9AhYw" type="_Blo1ILFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BlrRYLFzEeeCH50Lr9AhYw" name="getToStringAlgo" isStatic="true" method="_Bo8Ax7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKvLFzEeeCH50Lr9AhYw">
              <body>Getter for the _toStringAlgo helper.  Only for use internally inside this package
	 * so ToggleDecoratorSeqList and FineToggleDecoratorSeqList can use the same visitor.
	 * @return the toStringAlgo helper visitor</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnvG4LFzEeeCH50Lr9AhYw" type="_BlnnALFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BlrRYbFzEeeCH50Lr9AhYw" name="toString" method="_Bo8AybFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKvbFzEeeCH50Lr9AhYw">
              <body>Run a visitor over the list to convert it to a String.  
	 * Delegates to the rest of the list using the helper algo, with the accumulator 
	 * (params[0]) set to &quot;{&quot;+_first.toString().  
	 * @return &quot;{a, b, c, d}&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_BlrRYrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Bnt4wbFzEeeCH50Lr9AhYw" name="NESeqList" method="_Bo7Zu7FzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Bnuf0rFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bnuf07FzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpFKuLFzEeeCH50Lr9AhYw">
              <body>Cons an IPhrase to a Sequence List.
	 * @param first The first element of the sequence
	 * @param rest The rest of the sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bnuf0LFzEeeCH50Lr9AhYw" name="first" type="_Blm_8bFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bnuf0bFzEeeCH50Lr9AhYw" name="rest" type="_Blo1ILFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bnuf1LFzEeeCH50Lr9AhYw" type="_BlqDQLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bnuf17FzEeeCH50Lr9AhYw" name="setToStringAlgo" isStatic="true" method="_Bo8AxbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKu7FzEeeCH50Lr9AhYw">
              <body>Setter for the _toStringAlgo helper.  This non-typical method is provided solely 
	 * for the purpose of enabling the student to install their toStringAlgo into the 
	 * read-only provided code.
	 * @param stringAlgo The helper algo to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bnuf2LFzEeeCH50Lr9AhYw" name="stringAlgo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoR5cLFzEeeCH50Lr9AhYw" name="execute" method="_Bo8AwLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoR5cbFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoR5crFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoR5dbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoR5c7FzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BlsfgLFzEeeCH50Lr9AhYw" name="Note">
          <ownedComment xmi:id="_BpFKvrFzEeeCH50Lr9AhYw">
            <body>Basic class representing musical Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFKv7FzEeeCH50Lr9AhYw">
            <body>A playable note or rest.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BonQpbFzEeeCH50Lr9AhYw" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bon3sLFzEeeCH50Lr9AhYw" value="&quot;Note&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Bon3sbFzEeeCH50Lr9AhYw" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bon3srFzEeeCH50Lr9AhYw" value="'Z'"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Bon3s7FzEeeCH50Lr9AhYw" name="octave">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bon3tLFzEeeCH50Lr9AhYw" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Bon3tbFzEeeCH50Lr9AhYw" name="accidental" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bon3trFzEeeCH50Lr9AhYw" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Bon3t7FzEeeCH50Lr9AhYw" name="duration">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bon3uLFzEeeCH50Lr9AhYw" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Bon3ubFzEeeCH50Lr9AhYw" name="isNatural" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bon3urFzEeeCH50Lr9AhYw" value="false"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Bnvt8LFzEeeCH50Lr9AhYw" client="_BlsfgLFzEeeCH50Lr9AhYw" supplier="_Blm_8LFzEeeCH50Lr9AhYw" contract="_Blm_8LFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8Ay7FzEeeCH50Lr9AhYw" name="Note" specification="_BlsfgbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8AzLFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8AzbFzEeeCH50Lr9AhYw" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8AzrFzEeeCH50Lr9AhYw" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8Az7FzEeeCH50Lr9AhYw" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8A0LFzEeeCH50Lr9AhYw" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8A0bFzEeeCH50Lr9AhYw" type="_BlsfgLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>setName(name);
		setOctave(octave);
		setAccidental(accidental);
		setDuration(duration);
		setIsNatural(isNatural);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8A0rFzEeeCH50Lr9AhYw" name="toString" specification="_BltGk7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8A07FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String s = &quot;(&quot;;
		s += Character.toString(name);
		int a = accidental;
		if (isNatural) {
			s += &quot;n&quot;;
		}
		while (a &lt; 0) {
			s += &quot;b&quot;;
			a++;
		}
		while (a > 0) {
			s += &quot;#&quot;;
			a--;
		}
		s += &quot;, &quot; + Integer.toString(octave) + &quot;, &quot;;
		s += String.format(&quot;%3.2f&quot;, duration);
		s += &quot;)&quot;;

		return s;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8A1LFzEeeCH50Lr9AhYw" name="execute" specification="_BoSggrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8A1bFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo8A1rFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo8A17FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8A2LFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8n0LFzEeeCH50Lr9AhYw" name="setName" specification="_BltGlbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8n0bFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>switch (name) {
		case 'a':
		case 'A':
			this.name = 'A';
			break;

		case 'b':
		case 'B':
			this.name = 'B';
			break;

		case 'c':
		case 'C':
			this.name = 'C';
			break;

		case 'd':
		case 'D':
			this.name = 'D';
			break;

		case 'e':
		case 'E':
			this.name = 'E';
			break;

		case 'f':
		case 'F':
			this.name = 'F';
			break;

		case 'g':
		case 'G':
			this.name = 'G';
			break;

		default:
			this.name = 'Z';
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8n0rFzEeeCH50Lr9AhYw" name="setAccidental" specification="_BltGl7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8n07FzEeeCH50Lr9AhYw" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.accidental = accidental;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8n1LFzEeeCH50Lr9AhYw" name="getIsNatural" specification="_BlttoLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8n1bFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return isNatural;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8n1rFzEeeCH50Lr9AhYw" name="setIsNatural" specification="_BlttorFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8n17FzEeeCH50Lr9AhYw" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.isNatural = isNatural;
		if (isNatural)
			accidental = 0;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BlsfgbFzEeeCH50Lr9AhYw" name="Note" method="_Bo8Ay7FzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BltGkLFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BltGkbFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpFKwLFzEeeCH50Lr9AhYw">
              <body>Constructor for the class
	 * @param name  The name of the note
	 * @param octave The octave of the note w.r.t. middle C.  Zero = same octave as middle C.
	 * @param accidental accidental setting sharp &amp;gt; 0, flat &amp;lt; 0
	 * @param duration duration of note
	 * @param isNatural flag to override key signature.  True if note should be natural, overriding key signature.</body>
            </ownedComment>
            <ownedParameter xmi:id="_BlsfgrFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Blsfg7FzEeeCH50Lr9AhYw" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BlsfhLFzEeeCH50Lr9AhYw" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BlsfhbFzEeeCH50Lr9AhYw" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BlsfhrFzEeeCH50Lr9AhYw" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BltGkrFzEeeCH50Lr9AhYw" type="_BlsfgLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BltGk7FzEeeCH50Lr9AhYw" name="toString" method="_Bo8A0rFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKwbFzEeeCH50Lr9AhYw">
              <body>Returns a string representation of the Note  
	 * @return &quot;(name, octave, duration)&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_BltGlLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BltGlbFzEeeCH50Lr9AhYw" name="setName" method="_Bo8n0LFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKwrFzEeeCH50Lr9AhYw">
              <body>Accessor to set the name of the note
	 * @param name - the name to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_BltGlrFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BltGl7FzEeeCH50Lr9AhYw" name="setAccidental" method="_Bo8n0rFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKw7FzEeeCH50Lr9AhYw">
              <body>Accessor to set the accidental value
	 * @param accidental - the accidental to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_BltGmLFzEeeCH50Lr9AhYw" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BlttoLFzEeeCH50Lr9AhYw" name="getIsNatural" method="_Bo8n1LFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKxLFzEeeCH50Lr9AhYw">
              <body>Accessor for isNatural flag
	 * @return isNatural flag setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_BlttobFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BlttorFzEeeCH50Lr9AhYw" name="setIsNatural" method="_Bo8n1rFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFKxbFzEeeCH50Lr9AhYw">
              <body>Settor for isNatural flag.  Accidentals will be set to zero if isNatural is true.
	 * @param isNatural  New isNatural setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bltto7FzEeeCH50Lr9AhYw" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BoSggrFzEeeCH50Lr9AhYw" name="execute" method="_Bo8A1LFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoSgg7FzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoSghLFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoTHkrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoTHkLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BluUsLFzEeeCH50Lr9AhYw" name="NoteCollection" isAbstract="true">
          <ownedComment xmi:id="_BpFKxrFzEeeCH50Lr9AhYw">
            <body>A collection of multiple notes</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFKx7FzEeeCH50Lr9AhYw">
            <body>A collection of Notes</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BooewbFzEeeCH50Lr9AhYw" name="notes" visibility="protected" type="_BlsfgLFzEeeCH50Lr9AhYw" association="_BpUbRLFzEeeCH50Lr9AhYw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BooewrFzEeeCH50Lr9AhYw" value="*"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_BnwVALFzEeeCH50Lr9AhYw" client="_BluUsLFzEeeCH50Lr9AhYw" supplier="_Blm_8LFzEeeCH50Lr9AhYw" contract="_Blm_8LFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8n2LFzEeeCH50Lr9AhYw" name="NoteCollection" specification="_BnwVAbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8n2bFzEeeCH50Lr9AhYw" name="notes" type="_BlsfgLFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo8n2rFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8n27FzEeeCH50Lr9AhYw" type="_BluUsLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>this.notes = notes;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8n3LFzEeeCH50Lr9AhYw" name="getNotes" specification="_Blu7wLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8n3bFzEeeCH50Lr9AhYw" type="_BlsfgLFzEeeCH50Lr9AhYw" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo8n3rFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return notes;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Blu7wLFzEeeCH50Lr9AhYw" name="getNotes" method="_Bo8n3LFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFxwLFzEeeCH50Lr9AhYw">
              <body>Accessor for the array of notes in this collection
	 * @return the array of notes</body>
            </ownedComment>
            <ownedParameter xmi:id="_Blu7wbFzEeeCH50Lr9AhYw" type="_BlsfgLFzEeeCH50Lr9AhYw" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Blu7wrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BnwVAbFzEeeCH50Lr9AhYw" name="NoteCollection" method="_Bo8n2LFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Bnw8ELFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bnw8EbFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BnwVArFzEeeCH50Lr9AhYw" name="notes" type="_BlsfgLFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bnw8FLFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bnw8E7FzEeeCH50Lr9AhYw" type="_BluUsLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Blvi0LFzEeeCH50Lr9AhYw" name="ToggleDecoratorSeqList">
          <ownedComment xmi:id="_BpFxwbFzEeeCH50Lr9AhYw">
            <body>Multiple Decorator ISeqList where the active decoree (the &quot;target&quot;) is
toggled (cycled, actually) through all the available decorees.   
This is arguably a State Design Pattern where each decoree is 
considered to be another state of the system.
This is used to implement repeats where the first time through, the notes are linked
back to a repeat start (decoree #0) but the next time through, the next note is the one
after the repeat (decoree #1).

@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFxwrFzEeeCH50Lr9AhYw">
            <body>Decorated ISeqList that transparently cycles through multiple targets (decorees)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BooexbFzEeeCH50Lr9AhYw" name="decorees" visibility="private" type="_Blo1ILFzEeeCH50Lr9AhYw" association="_BpVCUbFzEeeCH50Lr9AhYw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BooexrFzEeeCH50Lr9AhYw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BopF0bFzEeeCH50Lr9AhYw" value="{ MTSeqList.Singleton, MTSeqList.Singleton }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BopF07FzEeeCH50Lr9AhYw" name="targetIdx" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BopF1LFzEeeCH50Lr9AhYw" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Bnw8FrFzEeeCH50Lr9AhYw" client="_Blvi0LFzEeeCH50Lr9AhYw" supplier="_Blo1ILFzEeeCH50Lr9AhYw" contract="_Blo1ILFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8n37FzEeeCH50Lr9AhYw" name="ToggleDecoratorSeqList" specification="_BnxjILFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo8n4LFzEeeCH50Lr9AhYw" name="decorees" type="_Blo1ILFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo8n4bFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo8n4rFzEeeCH50Lr9AhYw" type="_Blvi0LFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>setDecorees(decorees);
		setTargetToDecoree(0);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo8n47FzEeeCH50Lr9AhYw" name="setDecorees" specification="_BnxjKLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9O4LFzEeeCH50Lr9AhYw" name="decorees" type="_Blo1ILFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo9O4bFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>this.decorees = decorees;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo9O4rFzEeeCH50Lr9AhYw" name="setDecoree" specification="_BnyKM7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9O47FzEeeCH50Lr9AhYw" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo9O5LFzEeeCH50Lr9AhYw" name="decoree" type="_Blo1ILFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>this.decorees[idx] = decoree;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo9O5bFzEeeCH50Lr9AhYw" name="setTargetToDecoree" specification="_Blww8LFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9O5rFzEeeCH50Lr9AhYw" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.targetIdx = targetIdx;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo9O57FzEeeCH50Lr9AhYw" name="getTargetDecoree" specification="_Blww8rFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9O6LFzEeeCH50Lr9AhYw" type="_Blo1ILFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return decorees[targetIdx];
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo9O6bFzEeeCH50Lr9AhYw" name="execute" specification="_BoTuoLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9O6rFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo9O67FzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo9O7LFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo9O7bFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>ISeqList target = decorees[targetIdx++];
		if (targetIdx >= decorees.length)
			targetIdx = 0; // This must be set before the delegate because it may be needed before the recursion returns.
		return target.execute(algo, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo9O7rFzEeeCH50Lr9AhYw" name="toString" specification="_BlxYALFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9O77FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BlwJ4LFzEeeCH50Lr9AhYw" name="ToggleDecoratorSeqList">
            <eAnnotations xmi:id="_BlwJ4bFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BlwJ4rFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BlwJ5LFzEeeCH50Lr9AhYw" type="_Blvi0LFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Blww8LFzEeeCH50Lr9AhYw" name="setTargetToDecoree" method="_Bo9O5bFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFxxLFzEeeCH50Lr9AhYw">
              <body>Used to explicitly set the target (active) decoree if needed.
	 * @param targetIdx  the index of the target decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_Blww8bFzEeeCH50Lr9AhYw" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Blww8rFzEeeCH50Lr9AhYw" name="getTargetDecoree" method="_Bo9O57FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFxxbFzEeeCH50Lr9AhYw">
              <body>Accessor for the current target (active) decoree
	 * @return  The current target (active) decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnyKNrFzEeeCH50Lr9AhYw" type="_Blo1ILFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BlxYALFzEeeCH50Lr9AhYw" name="toString" method="_Bo9O7rFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BlxYAbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BnxjILFzEeeCH50Lr9AhYw" name="ToggleDecoratorSeqList" method="_Bo8n37FzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BnxjIrFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BnxjI7FzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BnxjIbFzEeeCH50Lr9AhYw" name="decorees" type="_Blo1ILFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BnxjJrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BnxjJbFzEeeCH50Lr9AhYw" type="_Blvi0LFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BnxjKLFzEeeCH50Lr9AhYw" name="setDecorees" method="_Bo8n47FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BnxjKbFzEeeCH50Lr9AhYw" name="decorees" type="_Blo1ILFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BnyKMbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BnyKM7FzEeeCH50Lr9AhYw" name="setDecoree" method="_Bo9O4rFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpFxw7FzEeeCH50Lr9AhYw">
              <body>Setter methods used to set a particular decoree.   
	 * The specified index must already exist.
	 * @param idx The index of the decoree to replace
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_BnyKNLFzEeeCH50Lr9AhYw" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BnyKNbFzEeeCH50Lr9AhYw" name="decoree" type="_Blo1ILFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoTuoLFzEeeCH50Lr9AhYw" name="execute" method="_Bo9O6bFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoTuobFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoTuorFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoUVsbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoTuo7FzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BlymILFzEeeCH50Lr9AhYw" name="Triplet">
          <ownedComment xmi:id="_BpFxxrFzEeeCH50Lr9AhYw">
            <body>A musical triplet.  The three notes should be played with 2/3 of their
indicated duration.</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFxx7FzEeeCH50Lr9AhYw">
            <body>A set of 3 notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_BnzYULFzEeeCH50Lr9AhYw" general="_BluUsLFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_BopF1rFzEeeCH50Lr9AhYw" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BopF17FzEeeCH50Lr9AhYw" value="&quot;Triplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo9O8LFzEeeCH50Lr9AhYw" name="Triplet" specification="_BnyxQLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9O8bFzEeeCH50Lr9AhYw" name="n1" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo9O8rFzEeeCH50Lr9AhYw" name="n2" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo9O87FzEeeCH50Lr9AhYw" name="n3" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo9O9LFzEeeCH50Lr9AhYw" type="_BlymILFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>super(n1, n2, n3);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo9O9bFzEeeCH50Lr9AhYw" name="execute" specification="_BoU8wLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9O9rFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo9O97FzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo9O-LFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo9O-bFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo918LFzEeeCH50Lr9AhYw" name="toString" specification="_BlymIbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo918bFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Triplet(&quot; + notes[0];
		for (int i = 1; i &lt; notes.length; i++) {
			result += &quot;, &quot; + notes[i];
		}
		return result + &quot;)&quot;;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BlymIbFzEeeCH50Lr9AhYw" name="toString" method="_Bo918LFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BlymIrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BnyxQLFzEeeCH50Lr9AhYw" name="Triplet" method="_Bo9O8LFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BnyxRLFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BnyxRbFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BnyxQbFzEeeCH50Lr9AhYw" name="n1" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BnyxQrFzEeeCH50Lr9AhYw" name="n2" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BnyxQ7FzEeeCH50Lr9AhYw" name="n3" type="_BlsfgLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BnyxRrFzEeeCH50Lr9AhYw" type="_BlymILFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoU8wLFzEeeCH50Lr9AhYw" name="execute" method="_Bo9O9bFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoU8wbFzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoU8wrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoU8xbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoU8w7FzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BlzNMLFzEeeCH50Lr9AhYw" name="Tuplet">
          <ownedComment xmi:id="_BpFxyLFzEeeCH50Lr9AhYw">
            <body>Class that represents a tuplet, a series of notes played in a fraction of their normal total time.
The exact fraction depends on the meter and the number of notes in the tuplet.
A triplet is a specific type of tuplet.
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_BpFxybFzEeeCH50Lr9AhYw">
            <body>A arbitrary set of notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_Bnz_YbFzEeeCH50Lr9AhYw" general="_BluUsLFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_Bops4LFzEeeCH50Lr9AhYw" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bops4bFzEeeCH50Lr9AhYw" value="&quot;Tuplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo918rFzEeeCH50Lr9AhYw" name="Tuplet" specification="_BnzYUbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9187FzEeeCH50Lr9AhYw" name="notes" type="_BlsfgLFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo919LFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo919bFzEeeCH50Lr9AhYw" type="_BlzNMLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>super(notes);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo919rFzEeeCH50Lr9AhYw" name="execute" specification="_BoVj0rFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo9197FzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo91-LFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo91-bFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo91-rFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo91-7FzEeeCH50Lr9AhYw" name="toString" specification="_Blz0QLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo91_LFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Tuplet(&quot; + notes[0];
		for (int i = 1; i &lt; notes.length; i++) {
			result += &quot;, &quot; + notes[i];
		}
		return result + &quot;)&quot;;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Blz0QLFzEeeCH50Lr9AhYw" name="toString" method="_Bo91-7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Blz0QbFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BnzYUbFzEeeCH50Lr9AhYw" name="Tuplet" method="_Bo918rFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BnzYU7FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BnzYVLFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BnzYUrFzEeeCH50Lr9AhYw" name="notes" type="_BlsfgLFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BnzYV7FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BnzYVrFzEeeCH50Lr9AhYw" type="_BlzNMLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoVj0rFzEeeCH50Lr9AhYw" name="execute" method="_Bo919rFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoVj07FzEeeCH50Lr9AhYw" name="algo" type="_BlnnALFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoVj1LFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoVj17FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoVj1bFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpTNIbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpTNIrFzEeeCH50Lr9AhYw _Bok0YLFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpTNIrFzEeeCH50Lr9AhYw" name="" type="_BlgSQLFzEeeCH50Lr9AhYw" association="_BpTNIbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpTNJLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpTNJbFzEeeCH50Lr9AhYw _Bok0YrFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpTNJbFzEeeCH50Lr9AhYw" name="" type="_BlgSQLFzEeeCH50Lr9AhYw" association="_BpTNJLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpTNJ7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpTNKLFzEeeCH50Lr9AhYw _BolbcrFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpTNKLFzEeeCH50Lr9AhYw" name="" type="_BliugLFzEeeCH50Lr9AhYw" association="_BpTNJ7FzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpT0MbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpT0MrFzEeeCH50Lr9AhYw _BompkrFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpT0MrFzEeeCH50Lr9AhYw" name="" type="_Blo1IbFzEeeCH50Lr9AhYw" association="_BpT0MbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpT0NLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpT0NbFzEeeCH50Lr9AhYw _BomplrFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpT0NbFzEeeCH50Lr9AhYw" name="" type="_BlqDQLFzEeeCH50Lr9AhYw" association="_BpT0NLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpT0N7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpT0OLFzEeeCH50Lr9AhYw _BonQobFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpT0OLFzEeeCH50Lr9AhYw" name="" type="_BlqDQLFzEeeCH50Lr9AhYw" association="_BpT0N7FzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpUbQbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpUbQrFzEeeCH50Lr9AhYw _BonQo7FzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpUbQrFzEeeCH50Lr9AhYw" name="" type="_BlqDQLFzEeeCH50Lr9AhYw" association="_BpUbQbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpUbRLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpUbRbFzEeeCH50Lr9AhYw _BooewbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpUbRbFzEeeCH50Lr9AhYw" name="" type="_BluUsLFzEeeCH50Lr9AhYw" association="_BpUbRLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpVCUbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpVCUrFzEeeCH50Lr9AhYw _BooexbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpVCUrFzEeeCH50Lr9AhYw" name="" type="_Blvi0LFzEeeCH50Lr9AhYw" association="_BpVCUbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BkiB4LFzEeeCH50Lr9AhYw" name="token">
        <packagedElement xmi:type="uml:Package" xmi:id="_BkiB4bFzEeeCH50Lr9AhYw" name="tokenizer">
          <packagedElement xmi:type="uml:Class" xmi:id="_BmCdw7FzEeeCH50Lr9AhYw" name="ABCTokenizer">
            <ownedComment xmi:id="_BpG_5LFzEeeCH50Lr9AhYw">
              <body>Tokenizer for the abc music language. getNextToken() returns next Token in
stream. Does not recognize all possible language constructs and symbols
(returned as &quot;?&quot; token).  Tokens are the atomic psemantic pieces of a language,
such as Note, repeat start, measure, chord, etc.   The token ids (names) returned are: 
 
 EOF - end of file
 &quot;|:&quot; - repeat start
 &quot;:|&quot; - repeat end
 &quot;|1&quot; - first repeat start
 &quot;[1&quot; - alternative first repeat start
 &quot;|2&quot; - second repeat start
 &quot;[2&quot; - alternative second repeat start
 &quot;[|&quot; - thick-thin double bar line
 &quot;|]&quot; - thin-thick double bar line
 &quot;:|2&quot; - alternative second repeat start
 &quot;||&quot; - double measure bar
 &quot;::&quot; - short hand for repeat end-start &quot;:||:&quot;
 &quot;|&quot; - Measure bar
 &quot;[&quot;) - Chord start
 &quot;]&quot; - Chord end
 &quot;-&quot; - tie
 &quot;&amp;lt;&quot; - the previous note  is dotted, the next note halved 
 &quot;&amp;gt;&quot; - the previous note is halved, the next dotted
 &quot;{&quot; - Grace begin
 &quot;}&quot; - Grace end
 &quot;%&quot; - Comment
 &quot;[Header ID]&quot; - where [Header ID] is a single letter from {ABCDEFGHIKLMNOPQRSTWXZ}  
 &quot;Note&quot; - a single note whose lexeme contains the name, accidentals, octave and duration
 &quot;Tuplet&quot; - the lexeme is the number of subsequent Notes comprise this tuplet. 
 &quot;Quote&quot; - lexeme is the quoted text 
 &quot;?&quot; - unknown language construct. 
  
References: 
&lt;a href =
&quot;http://download.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html&quot;
>java.util.regex.Pattern for regex guide&lt;/a>
&lt;a href=&quot;http://asciitable.com/&quot;>ASCII table for codes&lt;/a>
&lt;a href=&quot;http://abcnotation.com/abc2mtex/abc.txt&quot;>abc music standard 1.6&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_Bn6tFLFzEeeCH50Lr9AhYw" general="_BmGIILFzEeeCH50Lr9AhYw"/>
            <ownedAttribute xmi:id="_BoulZLFzEeeCH50Lr9AhYw" name="keywords1" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_BovMcrFzEeeCH50Lr9AhYw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_BovMcLFzEeeCH50Lr9AhYw" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BovMc7FzEeeCH50Lr9AhYw" name="keywords2" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_BovMdrFzEeeCH50Lr9AhYw">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_BovMdLFzEeeCH50Lr9AhYw" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BovzgLFzEeeCH50Lr9AhYw" name="keywordsVector" visibility="private" type="_BobDYLFzEeeCH50Lr9AhYw" association="_BpXelLFzEeeCH50Lr9AhYw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_BovzgrFzEeeCH50Lr9AhYw" value="new Vector&lt;Map&lt;String, String>>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BovzhLFzEeeCH50Lr9AhYw" name="tokFac" visibility="private" type="_Bl_acLFzEeeCH50Lr9AhYw" association="_BpXel7FzEeeCH50Lr9AhYw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_BovzhbFzEeeCH50Lr9AhYw" value="TokenFactory.Singleton"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BowakbFzEeeCH50Lr9AhYw" name="stack" visibility="private" type="_BoJ9oLFzEeeCH50Lr9AhYw" association="_BpYFobFzEeeCH50Lr9AhYw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bowak7FzEeeCH50Lr9AhYw" value="new Stack&lt;Token>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BowalbFzEeeCH50Lr9AhYw" name="ACCIDENTALS" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_BowalrFzEeeCH50Lr9AhYw" value="&quot;_=^&quot;"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_Bn6GAbFzEeeCH50Lr9AhYw" client="_BmCdw7FzEeeCH50Lr9AhYw" supplier="_BmFhELFzEeeCH50Lr9AhYw" contract="_BmFhELFzEeeCH50Lr9AhYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpASRbFzEeeCH50Lr9AhYw" name="ABCTokenizer" specification="_BmDE0LFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpASRrFzEeeCH50Lr9AhYw" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BpASR7FzEeeCH50Lr9AhYw" type="_BmCdw7FzEeeCH50Lr9AhYw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>super(inputFileName);

		// note: &quot;\\7C&quot; => &quot;|&quot;, &quot;\\x5B&quot; => &quot;[&quot;, &quot;\\x5D&quot; => &quot;]&quot;
		// &quot;\\x7B&quot; => &quot;{&quot;,  &quot;\\x7D&quot; => &quot;}&quot;

		// load the regex->keyword mapping
		keywords1.put(&quot;\\x7C:&quot;, &quot;|:&quot;); // repeat start
		keywords1.put(&quot;:\\x7C&quot;, &quot;:|&quot;); // repeat end
		keywords1.put(&quot;\\x7C1&quot;, &quot;|1&quot;); // first repeat start
		keywords1.put(&quot;\\x5B1&quot;, &quot;[1&quot;); // alternative first repeat start
		keywords1.put(&quot;\\x7C2&quot;, &quot;|2&quot;); // second repeat start
		keywords1.put(&quot;\\x5B2&quot;, &quot;[2&quot;); // alternative second repeat start
		keywords1.put(&quot;\\x5B\\7C&quot;, &quot;[|&quot;); // thick-thin double bar line
		keywords1.put(&quot;\\7C\\x5D&quot;, &quot;|]&quot;); // thin-thick double bar line
		keywords1.put(&quot;:\\x7C2&quot;, &quot;:|2&quot;); // alternative second repeat start
		keywords1.put(&quot;\\x7C\\x7C&quot;, &quot;||&quot;); // double measure bar
		keywords1.put(&quot;::&quot;, &quot;::&quot;); // short hand for repeat end-start &quot;:||:&quot;

		// Should these be separated out into a different map because order of
		// search is important?
		keywords2.put(&quot;\\x7C&quot;, &quot;|&quot;); // Measure bar
		keywords2.put(&quot;\\x5B&quot;, &quot;[&quot;); // Chord start
		keywords2.put(&quot;\\x5D&quot;, &quot;]&quot;); // Chord end
		keywords2.put(&quot;-&quot;, &quot;-&quot;); // tie
		keywords2.put(&quot;>&quot;, &quot;>&quot;); // the previous note  is dotted, the next note halved 
		keywords2.put(&quot;&lt;&quot;, &quot;&lt;&quot;); // the previous note is halved, the next dotted
		keywords2.put(&quot;\\x7B&quot;, &quot;{&quot;); // Grace begin
		keywords2.put(&quot;\\x7D&quot;, &quot;}&quot;); // Grace end		

		keywordsVector.add(keywords1);
		keywordsVector.add(keywords2);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpASSLFzEeeCH50Lr9AhYw" name="getNextToken" specification="_BmDE1bFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpASSbFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())
			return makeNextToken();
		else
			return stack.pop();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpA5QLFzEeeCH50Lr9AhYw" name="putBack" specification="_Bn6tEbFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpA5QbFzEeeCH50Lr9AhYw" name="t" type="_BmABg7FzEeeCH50Lr9AhYw"/>
              <language>java</language>
              <body>stack.push(t);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpA5QrFzEeeCH50Lr9AhYw" name="makeNextToken" specification="_BmDr4LFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpA5Q7FzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>String sTok = this.getNextStringToken();
		if (null == sTok)
			return tokFac.makeToken(&quot;EOF&quot;, &quot;EOF&quot;); // EOF returns as null
		if (sTok.equals(&quot;\n&quot;))
			return makeNextToken(); // discard bare LF's.

		// search for first keywords, pushing extra tokens back into tokenizer's
		// stack.
		for (Map&lt;String, String> keywords : keywordsVector) {
			for (String kw : keywords.keySet()) {
				if (keywords.get(kw).equals(sTok))
					return tokFac.makeToken(sTok, sTok);
				String[] split = sTok.split(kw, -1);
				if (split.length > 1) {

					for (int i = split.length - 1; i > 0; i--) {
						if (!split[i].equals(&quot;&quot;)) {
							this.putStringBack(split[i]);
						}
						this.putStringBack(keywords.get(kw));
					}
					if (!split[0].equals(&quot;&quot;)) {
						this.putStringBack(split[0]);
					}
					return makeNextToken();
				}
			}
		}

		// Find header tokens, which are the whole line.
		int idx = sTok.indexOf(&quot;:&quot;);
		if (1 == idx) {
			String header = sTok;
			String next = super.getNextStringToken();
			while (!next.equals(&quot;\n&quot;)) {
				header += &quot; &quot; + next;
				next = this.getNextStringToken();
			}
			return tokFac.makeToken(header.substring(0, 1), header.substring(2));
		}

		// Find comment, which is the rest of the line.
		idx = sTok.indexOf(&quot;%&quot;);
		if (-1 != idx) {
			// Comment in line somewhere
			if (0 == idx) { // comment is at beginning of line
				String comment = sTok;
				String next = super.getNextStringToken();
				while (!next.equals(&quot;\n&quot;)) { // get the rest of the line
					comment += next;
					// get the next string token 
					next = this.getNextStringToken();
				}
				return tokFac.makeToken(&quot;%&quot;, comment.substring(1));
			} else { // comment is in middle of the line
				// push the entire comment, incl. the comment char, back into
				// the tokenizer b/c it can't be dealt with yet.
				this.putStringBack(sTok.substring(idx));
				// push the tokens before the comment back into the tokenizer
				// so that they can be then processed when pulled back out.
				this.putStringBack(sTok.substring(0, idx));
				return makeNextToken(); // Process whatever is in the tokenizer
			}
		}

		// Find tuplet
		if ('(' == sTok.charAt(0)) {
			// Tuplet found
			int n = Integer.parseInt(sTok.substring(1, 2)); // get tuplet size
			this.putStringBack(sTok.substring(2)); // push rest back into tokenizer
			return tokFac.makeToken(&quot;Tuplet&quot;, &quot;&quot; + n);
		}

		if (Character.isLetter(sTok.charAt(0)) || ACCIDENTALS.contains(sTok.subSequence(0, 1))) {
			// Start of Note string found.
			return tokFac.makeToken(&quot;Note&quot;, parseNote(sTok));
		}

		if ('\&quot;' == sTok.charAt(0)) {
			// Quoted string found
			return tokFac.makeToken(&quot;Quote&quot;, parseQuote(&quot;&quot;, sTok.substring(1)));
		}

		if (sTok.equals(&quot;\\&quot;)) {
			// abc line break detected.  Ignore.
			return makeNextToken();
		}

		// Unknown token
		return tokFac.makeToken(&quot;?&quot;, sTok);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpA5RLFzEeeCH50Lr9AhYw" name="parseNote" specification="_BmDr4bFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpA5RbFzEeeCH50Lr9AhYw" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BpA5RrFzEeeCH50Lr9AhYw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>int i = 1;
		// look for pre-note name characters
		if (!Character.isLetter(sTok.charAt(0))) {
			for (; i &lt; sTok.length(); i++) {
				if (sTok.charAt(i) != sTok.charAt(0)) {
					i++; // move to next char
					break; // This assumes that this char is a letter which
							// follows the accidentals
				}
			}
		}

		for (; i &lt; sTok.length(); i++) {
			// look for non-post-note name characters.
			if (!(Character.isDigit(sTok.charAt(i)) || &quot;,/'&quot;.contains(sTok.subSequence(i, i + 1)))) {
				putStringBack(sTok.substring(i)); // put the rest back in the
													// tokenizer.
				break;
			}
		}
		// i = end of note string
		return sTok.substring(0, i);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpA5R7FzEeeCH50Lr9AhYw" name="parseQuote" specification="_BmDr5LFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpA5SLFzEeeCH50Lr9AhYw" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BpA5SbFzEeeCH50Lr9AhYw" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BpA5SrFzEeeCH50Lr9AhYw" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; sTok.length(); i++) {
			if ('\&quot;' == sTok.charAt(i)) {
				String rest = sTok.substring(i + 1);
				if (!rest.equals(&quot;&quot;)) {
					this.putStringBack(rest);
				}
				return acc;
			} else {
				acc += sTok.charAt(i);
			}
		}
		acc += &quot; &quot;;
		return parseQuote(acc, this.getNextStringToken());
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_BmDE0LFzEeeCH50Lr9AhYw" name="ABCTokenizer" method="_BpASRbFzEeeCH50Lr9AhYw" raisedException="_Bn77MbFzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_BmDE0rFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BmDE07FzEeeCH50Lr9AhYw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_BpG_5bFzEeeCH50Lr9AhYw">
                <body>Constructor for the class
	 * @param inputFileName  File to tokenize
	 * @throws FileNotFoundException  When input file could not be loaded.</body>
              </ownedComment>
              <ownedParameter xmi:id="_BmDE0bFzEeeCH50Lr9AhYw" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BmDE1LFzEeeCH50Lr9AhYw" type="_BmCdw7FzEeeCH50Lr9AhYw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BmDE1bFzEeeCH50Lr9AhYw" name="getNextToken" method="_BpASSLFzEeeCH50Lr9AhYw">
              <ownedComment xmi:id="_BpG_5rFzEeeCH50Lr9AhYw">
                <body>Return the next token, either from the stream or the last token if it was
	 * pushed back</body>
              </ownedComment>
              <ownedParameter xmi:id="_Bn6tELFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BmDr4LFzEeeCH50Lr9AhYw" name="makeNextToken" visibility="private" method="_BpA5QrFzEeeCH50Lr9AhYw">
              <ownedComment xmi:id="_BpG_6LFzEeeCH50Lr9AhYw">
                <body>Parse the strings down from the getNextStringToken further, separating
	 * out the abc keywords into tokens.
	 * @return The next Token in the stream</body>
              </ownedComment>
              <ownedParameter xmi:id="_Bn6tE7FzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BmDr4bFzEeeCH50Lr9AhYw" name="parseNote" visibility="private" method="_BpA5RLFzEeeCH50Lr9AhYw">
              <ownedComment xmi:id="_BpG_6bFzEeeCH50Lr9AhYw">
                <body>Returns the first note string in the given string.
	 * 
	 * @param sTok  The string to parse
	 * @return A String that is the first note in the given string</body>
              </ownedComment>
              <ownedParameter xmi:id="_BmDr4rFzEeeCH50Lr9AhYw" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BmDr47FzEeeCH50Lr9AhYw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BmDr5LFzEeeCH50Lr9AhYw" name="parseQuote" visibility="private" method="_BpA5R7FzEeeCH50Lr9AhYw">
              <ownedComment xmi:id="_BpG_6rFzEeeCH50Lr9AhYw">
                <body>Returns the rest of a string, incl. spaces until the next double quote
	 * @param acc  Accumulated result string
	 * @param sTok the current string token
	 * @return the full quoted string</body>
              </ownedComment>
              <ownedParameter xmi:id="_BmDr5bFzEeeCH50Lr9AhYw" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BmDr5rFzEeeCH50Lr9AhYw" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BmDr57FzEeeCH50Lr9AhYw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Bn6tEbFzEeeCH50Lr9AhYw" name="putBack" method="_BpA5QLFzEeeCH50Lr9AhYw">
              <ownedComment xmi:id="_BpG_57FzEeeCH50Lr9AhYw">
                <body>*	 Push token back into the stream
	 * @param t the Token you need to put back in the stream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_Bn6tErFzEeeCH50Lr9AhYw" name="t" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_BmE6ALFzEeeCH50Lr9AhYw" name="IStringTokenizer">
            <ownedComment xmi:id="_BpG_67FzEeeCH50Lr9AhYw">
              <body>Tokenizer that only returns string tokens.  This is a specialization of ITokenizer for strings.

@author swong
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_BmE6AbFzEeeCH50Lr9AhYw" name="getNextStringToken" isAbstract="true">
              <ownedComment xmi:id="_BpG_7LFzEeeCH50Lr9AhYw">
                <body>Return the next token.
	 * @return The next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_BmE6ArFzEeeCH50Lr9AhYw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BmE6A7FzEeeCH50Lr9AhYw" name="putStringBack" isAbstract="true">
              <ownedComment xmi:id="_BpG_7bFzEeeCH50Lr9AhYw">
                <body>Put the previously consumed token back into the token stream. Can only
	 * put back one token.
	 * @param t the token to push back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_BmE6BLFzEeeCH50Lr9AhYw" name="t">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_BmFhELFzEeeCH50Lr9AhYw" name="ITokenizer" isAbstract="true">
            <ownedComment xmi:id="_BpG_7rFzEeeCH50Lr9AhYw">
              <body>Extract and return an appropriate Token from some given source.</body>
            </ownedComment>
            <ownedOperation xmi:id="_BmFhErFzEeeCH50Lr9AhYw" name="getNextToken" isAbstract="true">
              <ownedComment xmi:id="_BpG_77FzEeeCH50Lr9AhYw">
                <body>Return the next token.
	 * @return the next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_Bn7UILFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Bn7UIbFzEeeCH50Lr9AhYw" name="putBack" isAbstract="true">
              <ownedComment xmi:id="_BpG_8LFzEeeCH50Lr9AhYw">
                <body>Put the previously consumed token back into the token stream. 
	 * @param t the token to put back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_Bn7UIrFzEeeCH50Lr9AhYw" name="t" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_BmGIILFzEeeCH50Lr9AhYw" name="StringTokenizer">
            <ownedComment xmi:id="_BpG_8bFzEeeCH50Lr9AhYw">
              <body>Special tokenizer that converts a stream of various types of tokens from  StreamTokenizer and converts them into a stream of strings. 
@author swong
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_BoxBoLFzEeeCH50Lr9AhYw" name="stack" visibility="private" type="_BoJ9oLFzEeeCH50Lr9AhYw" association="_BpYFpLFzEeeCH50Lr9AhYw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_BoxBorFzEeeCH50Lr9AhYw" value="new Stack&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BoxosbFzEeeCH50Lr9AhYw" name="_st" visibility="protected" type="_Bn9JUbFzEeeCH50Lr9AhYw" association="_BpYssLFzEeeCH50Lr9AhYw"/>
            <ownedAttribute xmi:id="_Boxos7FzEeeCH50Lr9AhYw" name="_fileReader" visibility="protected" type="_Bn8iRbFzEeeCH50Lr9AhYw" association="_BpYss7FzEeeCH50Lr9AhYw"/>
            <interfaceRealization xmi:id="_Bn9JU7FzEeeCH50Lr9AhYw" client="_BmGIILFzEeeCH50Lr9AhYw" supplier="_BmE6ALFzEeeCH50Lr9AhYw" contract="_BmE6ALFzEeeCH50Lr9AhYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpA5S7FzEeeCH50Lr9AhYw" name="StringTokenizer" specification="_BmGIIbFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpA5TLFzEeeCH50Lr9AhYw" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BpA5TbFzEeeCH50Lr9AhYw" type="_BmGIILFzEeeCH50Lr9AhYw" direction="return"/>
              <language>java</language>
              <body>// Create an input text file object:

		//_st = new StreamTokenizer(new BufferedReader(url.openStream()));
		//_fileReader = new FileReader(inputFileName);
		try {
			InputStream is = this.getClass().getResource(inputFileName).openStream();

			_fileReader = new BufferedReader(new InputStreamReader(is));

			//_fileReader = new FileReader(file);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			System.err.println(&quot;StringTokenizer error opening file: &quot; + e);
			e.printStackTrace();
		}

		// Create a Streamtokenizer to parse the input text file:
		_st = new StreamTokenizer(_fileReader);

		_st.eolIsSignificant(true);
		_st.wordChars(33, 125);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpA5TrFzEeeCH50Lr9AhYw" name="getNextStringToken" specification="_BmGvMLFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpA5T7FzEeeCH50Lr9AhYw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())
			return makeNextStringToken();
		else
			return stack.pop();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpA5ULFzEeeCH50Lr9AhYw" name="putStringBack" specification="_BmGvNbFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpA5UbFzEeeCH50Lr9AhYw" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>stack.push(str);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpA5UrFzEeeCH50Lr9AhYw" name="makeNextStringToken" specification="_BmHWQ7FzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BpA5U7FzEeeCH50Lr9AhYw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {
			int t = _st.nextToken();
			if (StreamTokenizer.TT_EOL == t)
				return &quot;\n&quot;;
			if (StreamTokenizer.TT_EOF != t) {
				switch (_st.ttype) {

				case StreamTokenizer.TT_WORD: {
					return _st.sval;
				}

				case StreamTokenizer.TT_NUMBER: {
					// check if number is an integer
					if (Math.floor(_st.nval) == _st.nval) {
						return &quot;&quot; + (int) _st.nval;
					} else {
						return &quot;&quot; + _st.nval;
					}
				}

				default:
					throw new IllegalArgumentException(&quot;Tokenizer1: Illegal token type = &quot; + _st.ttype);
				}
			} else {
				_fileReader.close();
				System.err.println(&quot;EOF Token&quot;);
				return null;
			}
		} catch (IOException e) {
			System.out.println(&quot;StringTokenizer.makeNextToken(): Exception = &quot; + e.getMessage());
			return null;
		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_BmGIIbFzEeeCH50Lr9AhYw" name="StringTokenizer" method="_BpA5S7FzEeeCH50Lr9AhYw" raisedException="_Bn77MbFzEeeCH50Lr9AhYw">
              <eAnnotations xmi:id="_BmGII7FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BmGIJLFzEeeCH50Lr9AhYw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_BpG_8rFzEeeCH50Lr9AhYw">
                <body>Initialize _st to read from a input Reader file with the given input file
	 * name.
	 * 
	 * @param inputFileName
	 *            the name of the input text file
	 * @throws FileNotFoundException When the input file could not be opened</body>
              </ownedComment>
              <ownedParameter xmi:id="_BmGIIrFzEeeCH50Lr9AhYw" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BmGIJbFzEeeCH50Lr9AhYw" type="_BmGIILFzEeeCH50Lr9AhYw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BmGvMLFzEeeCH50Lr9AhYw" name="getNextStringToken" method="_BpA5TrFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BmGvMbFzEeeCH50Lr9AhYw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BmGvNbFzEeeCH50Lr9AhYw" name="putStringBack" method="_BpA5ULFzEeeCH50Lr9AhYw">
              <ownedParameter xmi:id="_BmGvNrFzEeeCH50Lr9AhYw" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BmHWQ7FzEeeCH50Lr9AhYw" name="makeNextStringToken" visibility="private" method="_BpA5UrFzEeeCH50Lr9AhYw">
              <ownedComment xmi:id="_BpG_87FzEeeCH50Lr9AhYw">
                <body>Returns the next string in the stream.  
	 * Returns LF (&quot;\n&quot;) at end of line.  
	 * Returns null for EOF or error
	 * 
	 * @return A string token or null if EOF</body>
              </ownedComment>
              <ownedParameter xmi:id="_BmHWRLFzEeeCH50Lr9AhYw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BpXelLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpXelbFzEeeCH50Lr9AhYw _BovzgLFzEeeCH50Lr9AhYw">
            <ownedEnd xmi:id="_BpXelbFzEeeCH50Lr9AhYw" name="" type="_BmCdw7FzEeeCH50Lr9AhYw" association="_BpXelLFzEeeCH50Lr9AhYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BpXel7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpXemLFzEeeCH50Lr9AhYw _BovzhLFzEeeCH50Lr9AhYw">
            <ownedEnd xmi:id="_BpXemLFzEeeCH50Lr9AhYw" name="" type="_BmCdw7FzEeeCH50Lr9AhYw" association="_BpXel7FzEeeCH50Lr9AhYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BpYFobFzEeeCH50Lr9AhYw" name="" memberEnd="_BpYForFzEeeCH50Lr9AhYw _BowakbFzEeeCH50Lr9AhYw">
            <ownedEnd xmi:id="_BpYForFzEeeCH50Lr9AhYw" name="" type="_BmCdw7FzEeeCH50Lr9AhYw" association="_BpYFobFzEeeCH50Lr9AhYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BpYFpLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpYFpbFzEeeCH50Lr9AhYw _BoxBoLFzEeeCH50Lr9AhYw">
            <ownedEnd xmi:id="_BpYFpbFzEeeCH50Lr9AhYw" name="" type="_BmGIILFzEeeCH50Lr9AhYw" association="_BpYFpLFzEeeCH50Lr9AhYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BpYssLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpYssbFzEeeCH50Lr9AhYw _BoxosbFzEeeCH50Lr9AhYw">
            <ownedEnd xmi:id="_BpYssbFzEeeCH50Lr9AhYw" name="" type="_BmGIILFzEeeCH50Lr9AhYw" association="_BpYssLFzEeeCH50Lr9AhYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BpYss7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpYstLFzEeeCH50Lr9AhYw _Boxos7FzEeeCH50Lr9AhYw">
            <ownedEnd xmi:id="_BpYstLFzEeeCH50Lr9AhYw" name="" type="_BmGIILFzEeeCH50Lr9AhYw" association="_BpYss7FzEeeCH50Lr9AhYw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Bl8-MLFzEeeCH50Lr9AhYw" name="ATokVisitor" isAbstract="true">
          <ownedComment xmi:id="_BpGY3bFzEeeCH50Lr9AhYw">
            <body>A visitor to an Token that implements ITokVisitor using a dictionary of commands.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BotXRrFzEeeCH50Lr9AhYw" name="defaultCmd" visibility="private" type="_Bl-zYbFzEeeCH50Lr9AhYw" association="_BpW3hLFzEeeCH50Lr9AhYw"/>
          <ownedAttribute xmi:id="_Bot-UbFzEeeCH50Lr9AhYw" name="cmds" visibility="private" type="_Bl-zYbFzEeeCH50Lr9AhYw" association="_BpW3h7FzEeeCH50Lr9AhYw">
            <qualifier xmi:id="_Bot-VLFzEeeCH50Lr9AhYw">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bot-UrFzEeeCH50Lr9AhYw" value="new Hashtable&lt;String, ITokVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Bn3pwLFzEeeCH50Lr9AhYw" client="_Bl8-MLFzEeeCH50Lr9AhYw" supplier="_Bl-zYLFzEeeCH50Lr9AhYw" contract="_Bl-zYLFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rKrFzEeeCH50Lr9AhYw" name="ATokVisitor" specification="_Bl9lQLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rK7FzEeeCH50Lr9AhYw" type="_Bl8-MLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new ITokVisitorCmd() {
			public Object apply(String idx, Token host, Object... inps) {
				throw new IllegalArgumentException(&quot;ATokVisitor: Unknown token encountered: &quot; + idx);
			}
		};
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rLLFzEeeCH50Lr9AhYw" name="ATokVisitor" specification="_Bn3pwbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rLbFzEeeCH50Lr9AhYw" name="defaultCmd" type="_Bl-zYbFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo_rLrFzEeeCH50Lr9AhYw" type="_Bl8-MLFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rL7FzEeeCH50Lr9AhYw" name="caseAt" specification="_BoYAELFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rMLFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_rMbFzEeeCH50Lr9AhYw" name="host" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bo_rMrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo_rM7FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_rNLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {
			return cmds.get(id).apply(id, host, params);
		} else {
			return defaultCmd.apply(id, host, params);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo_rNbFzEeeCH50Lr9AhYw" name="addCmd" specification="_Bn4Q1LFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_Bo_rNrFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bo_rN7FzEeeCH50Lr9AhYw" name="cmd" type="_Bl-zYbFzEeeCH50Lr9AhYw"/>
            <language>java</language>
            <body>cmds.put(id, cmd);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Bl9lQLFzEeeCH50Lr9AhYw" name="ATokVisitor" method="_Bo_rKrFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Bl9lQbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bl9lQrFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpGY3rFzEeeCH50Lr9AhYw">
              <body>Constructor that sets the default cmd to one that throws and IllegalArgumentException&quot; for any unknown tokens.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bl9lQ7FzEeeCH50Lr9AhYw" type="_Bl8-MLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn3pwbFzEeeCH50Lr9AhYw" name="ATokVisitor" method="_Bo_rLLFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_Bn4Q0bFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Bn4Q0rFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpGY37FzEeeCH50Lr9AhYw">
              <body>Constructor that sets the default cmd to the given command.
	 * @param defaultCmd the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn4Q0LFzEeeCH50Lr9AhYw" name="defaultCmd" type="_Bl-zYbFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_Bn4Q07FzEeeCH50Lr9AhYw" type="_Bl8-MLFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Bn4Q1LFzEeeCH50Lr9AhYw" name="addCmd" method="_Bo_rNbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpGY4LFzEeeCH50Lr9AhYw">
              <body>Add a new cmd or replace an existing cmd associated with the given host id.
	 * @param id the id of the host to associate with this visitor.
	 * @param cmd The command to associate with the given key value.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Bn4Q1bFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn4Q1rFzEeeCH50Lr9AhYw" name="cmd" type="_Bl-zYbFzEeeCH50Lr9AhYw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BoYAELFzEeeCH50Lr9AhYw" name="caseAt" method="_Bo_rL7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoYAEbFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoYAErFzEeeCH50Lr9AhYw" name="host" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoYAE7FzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoYnIbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoYAFLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Bl-zYLFzEeeCH50Lr9AhYw" name="ITokVisitor">
          <ownedComment xmi:id="_BpGY4bFzEeeCH50Lr9AhYw">
            <body>Interface for a token visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_BoYnI7FzEeeCH50Lr9AhYw" name="caseAt">
            <ownedParameter xmi:id="_BoYnJLFzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoZOMLFzEeeCH50Lr9AhYw" name="host" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoZOMbFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoZONLFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoZOMrFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Bl-zYbFzEeeCH50Lr9AhYw" name="ITokVisitorCmd">
          <ownedComment xmi:id="_BpGY4rFzEeeCH50Lr9AhYw">
            <body>A command for use in ATokVisitors</body>
          </ownedComment>
          <ownedOperation xmi:id="_BoZONrFzEeeCH50Lr9AhYw" name="apply">
            <ownedParameter xmi:id="_BoZON7FzEeeCH50Lr9AhYw" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoZOOLFzEeeCH50Lr9AhYw" name="host" type="_BmABg7FzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoZOObFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoZ1QrFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoZ1QLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Bl_acLFzEeeCH50Lr9AhYw" name="ITokenFactory">
          <ownedComment xmi:id="_BpGY47FzEeeCH50Lr9AhYw">
            <body>Abstract factory to produce tokens</body>
          </ownedComment>
          <ownedOperation xmi:id="_BmABgLFzEeeCH50Lr9AhYw" name="makeToken">
            <ownedParameter xmi:id="_BmABgbFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmABgrFzEeeCH50Lr9AhYw" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn5e8LFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BmABg7FzEeeCH50Lr9AhYw" name="Token">
          <ownedComment xmi:id="_BpGY5LFzEeeCH50Lr9AhYw">
            <body>Represents a token in the language.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Bot-VbFzEeeCH50Lr9AhYw" name="_name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_BoulYLFzEeeCH50Lr9AhYw" name="_lexeme" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpASMLFzEeeCH50Lr9AhYw" name="Token" specification="_BmAokLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpASMbFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpASMrFzEeeCH50Lr9AhYw" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpASM7FzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>_name = name;
		_lexeme = lexeme;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpASNLFzEeeCH50Lr9AhYw" name="execute" specification="_BoacULFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpASNbFzEeeCH50Lr9AhYw" name="algo" type="_Bl-zYLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BpASNrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BpASN7FzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpASOLFzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_name, this, params);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpASObFzEeeCH50Lr9AhYw" name="getName" specification="_BmAolrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpASOrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _name;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpASO7FzEeeCH50Lr9AhYw" name="getLexeme" specification="_BmAomLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpASPLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _lexeme;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpASPbFzEeeCH50Lr9AhYw" name="toString" specification="_BmAomrFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpASPrFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;[&quot; + _name + &quot;] &quot; + _lexeme;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BmAokLFzEeeCH50Lr9AhYw" name="Token" method="_BpASMLFzEeeCH50Lr9AhYw">
            <eAnnotations xmi:id="_BmAok7FzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BmAolLFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_BpGY5bFzEeeCH50Lr9AhYw">
              <body>Token constructor.
	 *
	 * @param name The name associated with this token.  This is the id value when it executes its visitors.
	 * @param lexeme _lexeme this token is representing.</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmAokbFzEeeCH50Lr9AhYw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmAokrFzEeeCH50Lr9AhYw" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmAolbFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BmAolrFzEeeCH50Lr9AhYw" name="getName" method="_BpASObFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpG_4LFzEeeCH50Lr9AhYw">
              <body>Accessor for the name of this token
	 * @return The name of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmAol7FzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BmAomLFzEeeCH50Lr9AhYw" name="getLexeme" method="_BpASO7FzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpG_4bFzEeeCH50Lr9AhYw">
              <body>Accessor for the lexeme of this token
	 * @return The lexeme of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmAombFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BmAomrFzEeeCH50Lr9AhYw" name="toString" method="_BpASPbFzEeeCH50Lr9AhYw">
            <ownedComment xmi:id="_BpG_4rFzEeeCH50Lr9AhYw">
              <body>Return a string representation of the token: &quot;[name] lexeme&quot;
	 *
	 * @return string representation</body>
            </ownedComment>
            <ownedParameter xmi:id="_BmBPoLFzEeeCH50Lr9AhYw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_BoacULFzEeeCH50Lr9AhYw" name="execute" method="_BpASNLFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BoacUbFzEeeCH50Lr9AhYw" name="algo" type="_Bl-zYLFzEeeCH50Lr9AhYw"/>
            <ownedParameter xmi:id="_BoacUrFzEeeCH50Lr9AhYw" name="params" type="_BoLLwbFzEeeCH50Lr9AhYw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BoacVbFzEeeCH50Lr9AhYw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BoacU7FzEeeCH50Lr9AhYw" type="_BoLLwbFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BmBPobFzEeeCH50Lr9AhYw" name="TokenFactory">
          <ownedComment xmi:id="_BpG_47FzEeeCH50Lr9AhYw">
            <body>Concrete factory to create tokens</body>
          </ownedComment>
          <ownedAttribute xmi:id="_BoulYrFzEeeCH50Lr9AhYw" name="Singleton" isLeaf="true" isStatic="true" type="_BmBPobFzEeeCH50Lr9AhYw" isReadOnly="true" association="_BpXekbFzEeeCH50Lr9AhYw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_BoulY7FzEeeCH50Lr9AhYw" value="new TokenFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Bn5e8bFzEeeCH50Lr9AhYw" client="_BmBPobFzEeeCH50Lr9AhYw" supplier="_Bl_acLFzEeeCH50Lr9AhYw" contract="_Bl_acLFzEeeCH50Lr9AhYw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpASP7FzEeeCH50Lr9AhYw" name="makeToken" specification="_BmB2tbFzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BpASQLFzEeeCH50Lr9AhYw" name="name">
              <eAnnotations xmi:id="_BpASQbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BpASQrFzEeeCH50Lr9AhYw" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpASQ7FzEeeCH50Lr9AhYw" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BpASRLFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
            <language>java</language>
            <body>return new Token(name, lexeme);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_BmB2sLFzEeeCH50Lr9AhYw" name="TokenFactory" visibility="private">
            <eAnnotations xmi:id="_BmB2sbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_BmB2srFzEeeCH50Lr9AhYw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_BmB2tLFzEeeCH50Lr9AhYw" type="_BmBPobFzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_BmB2tbFzEeeCH50Lr9AhYw" name="makeToken" method="_BpASP7FzEeeCH50Lr9AhYw">
            <ownedParameter xmi:id="_BmB2trFzEeeCH50Lr9AhYw" name="name">
              <eAnnotations xmi:id="_BmCdwbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BmCdwrFzEeeCH50Lr9AhYw" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_BmCdwLFzEeeCH50Lr9AhYw" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Bn6GALFzEeeCH50Lr9AhYw" type="_BmABg7FzEeeCH50Lr9AhYw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpW3hLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpW3hbFzEeeCH50Lr9AhYw _BotXRrFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpW3hbFzEeeCH50Lr9AhYw" name="" type="_Bl8-MLFzEeeCH50Lr9AhYw" association="_BpW3hLFzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpW3h7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpW3iLFzEeeCH50Lr9AhYw _Bot-UbFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpW3iLFzEeeCH50Lr9AhYw" name="" type="_Bl8-MLFzEeeCH50Lr9AhYw" association="_BpW3h7FzEeeCH50Lr9AhYw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BpXekbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpXekrFzEeeCH50Lr9AhYw _BoulYrFzEeeCH50Lr9AhYw">
          <ownedEnd xmi:id="_BpXekrFzEeeCH50Lr9AhYw" name="" type="_BmBPobFzEeeCH50Lr9AhYw" association="_BpXekbFzEeeCH50Lr9AhYw"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BkdwcrFzEeeCH50Lr9AhYw" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_BmM10LFzEeeCH50Lr9AhYw" name="IView2ModelControlAdapter">
        <ownedComment xmi:id="_BpHm_bFzEeeCH50Lr9AhYw">
          <body>@author Alexander Hansen
@author Yiqing Lu
The IView2ModelControlAdapter interface</body>
        </ownedComment>
        <ownedOperation xmi:id="_BmNc4LFzEeeCH50Lr9AhYw" name="loadFile">
          <ownedComment xmi:id="_BpHm_rFzEeeCH50Lr9AhYw">
            <body>load the given file.
	 * @return the music file content</body>
          </ownedComment>
          <ownedParameter xmi:id="_BmNc4bFzEeeCH50Lr9AhYw" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_BmNc4rFzEeeCH50Lr9AhYw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BmNc47FzEeeCH50Lr9AhYw" name="parseFile">
          <ownedComment xmi:id="_BpHm_7FzEeeCH50Lr9AhYw">
            <body>parse the given file.
	 * @return the parse result</body>
          </ownedComment>
          <ownedParameter xmi:id="_BmNc5LFzEeeCH50Lr9AhYw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BmNc5bFzEeeCH50Lr9AhYw" name="playFile">
          <ownedComment xmi:id="_BpHnALFzEeeCH50Lr9AhYw">
            <body>play the loaded file.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_BmNc5rFzEeeCH50Lr9AhYw" name="stopFile">
          <ownedComment xmi:id="_BpHnAbFzEeeCH50Lr9AhYw">
            <body>stop the given file.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_BmNc57FzEeeCH50Lr9AhYw" name="MusicPlayerView">
        <ownedComment xmi:id="_BpHnArFzEeeCH50Lr9AhYw">
          <body>@author Alexander Hansen
@author Yiqing Lu
The player GUI class</body>
        </ownedComment>
        <generalization xmi:id="_BodfobFzEeeCH50Lr9AhYw" general="_BoBawbFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo0E8bFzEeeCH50Lr9AhYw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Bo0E8rFzEeeCH50Lr9AhYw" value="432253693325539503L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Bo0E87FzEeeCH50Lr9AhYw" name="contentPane" visibility="private" type="_BoBaw7FzEeeCH50Lr9AhYw" association="_BpZTx7FzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo0E9bFzEeeCH50Lr9AhYw" name="txtFile" visibility="private" type="_BoCo4bFzEeeCH50Lr9AhYw" association="_BpZ60bFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo0sAbFzEeeCH50Lr9AhYw" name="panelControls" visibility="private" type="_BoBaw7FzEeeCH50Lr9AhYw" association="_BpZ61LFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo0sA7FzEeeCH50Lr9AhYw" name="lblFile" visibility="private" type="_BoCB07FzEeeCH50Lr9AhYw" association="_Bpah4LFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo0sBbFzEeeCH50Lr9AhYw" name="btnLoad" visibility="private" type="_BoCo47FzEeeCH50Lr9AhYw" association="_Bpah47FzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo1TELFzEeeCH50Lr9AhYw" name="btnParse" visibility="private" type="_BoCo47FzEeeCH50Lr9AhYw" association="_Bpah5rFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo1TErFzEeeCH50Lr9AhYw" name="comboBoxInstruments" visibility="private" type="_BoCo5bFzEeeCH50Lr9AhYw" association="_BpbI8bFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo16IbFzEeeCH50Lr9AhYw" name="btnPlay" visibility="private" type="_BoCo47FzEeeCH50Lr9AhYw" association="_BpbI9LFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo16I7FzEeeCH50Lr9AhYw" name="_iView2Model" visibility="private" type="_BmM10LFzEeeCH50Lr9AhYw" association="_BpbI97FzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo16JbFzEeeCH50Lr9AhYw" name="splitPane" visibility="private" type="_BoDP8bFzEeeCH50Lr9AhYw" association="_BpbwAbFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo2hMLFzEeeCH50Lr9AhYw" name="scrollPane_file" visibility="private" type="_BoD3AbFzEeeCH50Lr9AhYw" association="_BpbwBLFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo2hMrFzEeeCH50Lr9AhYw" name="scrollPane_parse" visibility="private" type="_BoD3AbFzEeeCH50Lr9AhYw" association="_BpbwB7FzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo2hNLFzEeeCH50Lr9AhYw" name="textPane_file" visibility="private" type="_BoEeEbFzEeeCH50Lr9AhYw" association="_BpcXEbFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo2hNrFzEeeCH50Lr9AhYw" name="textPane_parse" visibility="private" type="_BoEeEbFzEeeCH50Lr9AhYw" association="_BpcXFLFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bo3IQbFzEeeCH50Lr9AhYw" name="btnStop" visibility="private" type="_BoCo47FzEeeCH50Lr9AhYw" association="_Bpc-IbFzEeeCH50Lr9AhYw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCHb7FzEeeCH50Lr9AhYw" name="MusicPlayerView" specification="_BoFFILFzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_BpCHcLFzEeeCH50Lr9AhYw" name="iView2Model" type="_BmM10LFzEeeCH50Lr9AhYw"/>
          <ownedParameter xmi:id="_BpCHcbFzEeeCH50Lr9AhYw" type="_BmNc57FzEeeCH50Lr9AhYw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>setMinimumSize(new Dimension(600, 0));

		_iView2Model = iView2Model;
		init();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCucLFzEeeCH50Lr9AhYw" name="init" specification="_BmPSELFzEeeCH50Lr9AhYw">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 667, 454);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);

		panelControls = new JPanel();
		panelControls.setBackground(Color.LIGHT_GRAY);
		panelControls.setToolTipText(&quot;Panel containing all the controls\r\n&quot;);
		contentPane.add(panelControls, BorderLayout.NORTH);

		lblFile = new JLabel(&quot;File:&quot;);
		lblFile.setToolTipText(&quot;File Descriptior&quot;);
		panelControls.add(lblFile);

		txtFile = new JTextField();
		txtFile.setToolTipText(&quot;File to load.&quot;);
		txtFile.setText(&quot;File&quot;);
		panelControls.add(txtFile);
		txtFile.setColumns(10);

		btnLoad = new JButton(&quot;Load&quot;);
		btnLoad.setToolTipText(&quot;Loads the indicated file\r\n&quot;);
		panelControls.add(btnLoad);
		btnLoad.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				btnParse.setEnabled(true);
				textPane_file.setText(_iView2Model.loadFile(txtFile.getText()));
			}
		});

		btnParse = new JButton(&quot;Parse&quot;);
		btnParse.setEnabled(false);

		btnParse.setToolTipText(&quot;Parses the selected file\r\n&quot;);
		panelControls.add(btnParse);
		btnParse.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				textPane_parse.setText(_iView2Model.parseFile());
			}
		});

		comboBoxInstruments = new JComboBox&lt;TInst>();
		comboBoxInstruments.setToolTipText(&quot;The avalible instruments to choose from - please pick one&quot;);
		panelControls.add(comboBoxInstruments);
		for (TInst i : getInstruments())
			comboBoxInstruments.addItem(i);

		btnPlay = new JButton(&quot;Play&quot;);
		btnPlay.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_iView2Model.playFile();
			}
		});
		btnPlay.setToolTipText(&quot;Plays the file, once it is loaded&quot;);
		panelControls.add(btnPlay);

		btnStop = new JButton(&quot;Stop&quot;);
		btnStop.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_iView2Model.stopFile();
			}
		});
		btnStop.setToolTipText(&quot;Stop playing the music&quot;);
		panelControls.add(btnStop);

		splitPane = new JSplitPane();
		splitPane.setResizeWeight(0.5);
		splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);
		contentPane.add(splitPane, BorderLayout.CENTER);

		scrollPane_file = new JScrollPane();
		scrollPane_file.setViewportBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null),
				&quot;File Content&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, new Color(0, 0, 0)));
		splitPane.setLeftComponent(scrollPane_file);

		textPane_file = new JTextPane();
		scrollPane_file.setViewportView(textPane_file);

		scrollPane_parse = new JScrollPane();
		scrollPane_parse.setViewportBorder(
				new TitledBorder(null, &quot;Parsed IPhrase Structure&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));
		splitPane.setRightComponent(scrollPane_parse);

		textPane_parse = new JTextPane();
		scrollPane_parse.setViewportView(textPane_parse);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCucbFzEeeCH50Lr9AhYw" name="getInstruments" specification="_BmPSEbFzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_BpCucrFzEeeCH50Lr9AhYw" type="_BoAzs7FzEeeCH50Lr9AhYw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>ArrayList&lt;TInst> instruments = new ArrayList&lt;TInst>();
		instruments.add((TInst) (new ABCInstrument(&quot;Piano 1&quot;, 0)));
		instruments.add((TInst) (new ABCInstrument(&quot;Bright Acoustic Piano&quot;, 1)));
		instruments.add((TInst) (new ABCInstrument(&quot;Harpsichord&quot;, 6)));
		instruments.add((TInst) (new ABCInstrument(&quot;Clavi&quot;, 7)));
		instruments.add((TInst) (new ABCInstrument(&quot;Music Box&quot;, 10)));
		instruments.add((TInst) (new ABCInstrument(&quot;Harmonica&quot;, 22)));
		return instruments;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCuc7FzEeeCH50Lr9AhYw" name="getSelectedInstrumentIndex" specification="_BmP5I7FzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_BpCudLFzEeeCH50Lr9AhYw" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>ABCInstrument i = (ABCInstrument) comboBoxInstruments.getSelectedItem();
		return i.getValue();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BpCudbFzEeeCH50Lr9AhYw" name="start" specification="_BmP5JbFzEeeCH50Lr9AhYw">
          <language>java</language>
          <body>setVisible(true);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_BmPSELFzEeeCH50Lr9AhYw" name="init" method="_BpCucLFzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpHnBLFzEeeCH50Lr9AhYw">
            <body>initiates the frame.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_BmPSEbFzEeeCH50Lr9AhYw" name="getInstruments" method="_BpCucbFzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_BodfoLFzEeeCH50Lr9AhYw" type="_BoAzs7FzEeeCH50Lr9AhYw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_BmP5I7FzEeeCH50Lr9AhYw" name="getSelectedInstrumentIndex" method="_BpCuc7FzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpIOALFzEeeCH50Lr9AhYw">
            <body>returns the index of the selected instrument of the combo box
	 * @return return the number of the instrument</body>
          </ownedComment>
          <ownedParameter xmi:id="_BmP5JLFzEeeCH50Lr9AhYw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BmP5JbFzEeeCH50Lr9AhYw" name="start" method="_BpCudbFzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpIOAbFzEeeCH50Lr9AhYw">
            <body>starts the view</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_BoFFILFzEeeCH50Lr9AhYw" name="MusicPlayerView" method="_BpCHb7FzEeeCH50Lr9AhYw">
          <eAnnotations xmi:id="_BoFFIrFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_BoFFI7FzEeeCH50Lr9AhYw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_BpHnA7FzEeeCH50Lr9AhYw">
            <body>Create the frame.
	 * @param iView2Model view to model adapter</body>
          </ownedComment>
          <ownedParameter xmi:id="_BoFFIbFzEeeCH50Lr9AhYw" name="iView2Model" type="_BmM10LFzEeeCH50Lr9AhYw"/>
          <ownedParameter xmi:id="_BoFFJLFzEeeCH50Lr9AhYw" type="_BmNc57FzEeeCH50Lr9AhYw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpZTx7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpZTyLFzEeeCH50Lr9AhYw _Bo0E87FzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpZTyLFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpZTx7FzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpZ60bFzEeeCH50Lr9AhYw" name="" memberEnd="_BpZ60rFzEeeCH50Lr9AhYw _Bo0E9bFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpZ60rFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpZ60bFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpZ61LFzEeeCH50Lr9AhYw" name="" memberEnd="_BpZ61bFzEeeCH50Lr9AhYw _Bo0sAbFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpZ61bFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpZ61LFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Bpah4LFzEeeCH50Lr9AhYw" name="" memberEnd="_Bpah4bFzEeeCH50Lr9AhYw _Bo0sA7FzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_Bpah4bFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_Bpah4LFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Bpah47FzEeeCH50Lr9AhYw" name="" memberEnd="_Bpah5LFzEeeCH50Lr9AhYw _Bo0sBbFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_Bpah5LFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_Bpah47FzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Bpah5rFzEeeCH50Lr9AhYw" name="" memberEnd="_Bpah57FzEeeCH50Lr9AhYw _Bo1TELFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_Bpah57FzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_Bpah5rFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpbI8bFzEeeCH50Lr9AhYw" name="" memberEnd="_BpbI8rFzEeeCH50Lr9AhYw _Bo1TErFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpbI8rFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpbI8bFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpbI9LFzEeeCH50Lr9AhYw" name="" memberEnd="_BpbI9bFzEeeCH50Lr9AhYw _Bo16IbFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpbI9bFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpbI9LFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpbI97FzEeeCH50Lr9AhYw" name="" memberEnd="_BpbI-LFzEeeCH50Lr9AhYw _Bo16I7FzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpbI-LFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpbI97FzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpbwAbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpbwArFzEeeCH50Lr9AhYw _Bo16JbFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpbwArFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpbwAbFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpbwBLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpbwBbFzEeeCH50Lr9AhYw _Bo2hMLFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpbwBbFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpbwBLFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpbwB7FzEeeCH50Lr9AhYw" name="" memberEnd="_BpbwCLFzEeeCH50Lr9AhYw _Bo2hMrFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpbwCLFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpbwB7FzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpcXEbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpcXErFzEeeCH50Lr9AhYw _Bo2hNLFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpcXErFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpcXEbFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpcXFLFzEeeCH50Lr9AhYw" name="" memberEnd="_BpcXFbFzEeeCH50Lr9AhYw _Bo2hNrFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpcXFbFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpcXFLFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Bpc-IbFzEeeCH50Lr9AhYw" name="" memberEnd="_Bpc-IrFzEeeCH50Lr9AhYw _Bo3IQbFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_Bpc-IrFzEeeCH50Lr9AhYw" name="" type="_BmNc57FzEeeCH50Lr9AhYw" association="_Bpc-IbFzEeeCH50Lr9AhYw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BkeXgLFzEeeCH50Lr9AhYw" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_BlY9gLFzEeeCH50Lr9AhYw" name="MusicPlayerController">
        <ownedComment xmi:id="_BpDVgLFzEeeCH50Lr9AhYw">
          <body>@author Alexander Hansen
@author Yiqing Lu
The Controller class</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Bof74LFzEeeCH50Lr9AhYw" name="musicPlayerModel" visibility="private" type="_BlbZwLFzEeeCH50Lr9AhYw" association="_BpPiwbFzEeeCH50Lr9AhYw"/>
        <ownedAttribute xmi:id="_Bogi8bFzEeeCH50Lr9AhYw" name="musicPlayerView" visibility="private" type="_BmNc57FzEeeCH50Lr9AhYw" association="_BpQJ0LFzEeeCH50Lr9AhYw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo4WYLFzEeeCH50Lr9AhYw" name="MusicPlayerController" specification="_BlZkkLFzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_Bo4WYbFzEeeCH50Lr9AhYw" type="_BlY9gLFzEeeCH50Lr9AhYw" direction="return"/>
          <language>java</language>
          <body>// set the view field
		musicPlayerView = new MusicPlayerView&lt;ABCInstrument>(new IView2ModelControlAdapter() {
			public String loadFile(String file) {
				return musicPlayerModel.loadFile(file);
			}

			public String parseFile() {
				return musicPlayerModel.parseFile();
			}

			public void playFile() {
				musicPlayerModel.playFile(musicPlayerView.getSelectedInstrumentIndex());
			}

			public void stopFile() {
				musicPlayerModel.stopFile();
			}
		});

		// set the model field
		musicPlayerModel = new MusicPlayerModel(new IModel2ViewAdapter() {
			public SequencePlayer2 getPlayer() {
				return musicPlayerModel.getPlayer();
			}

		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo4WYrFzEeeCH50Lr9AhYw" name="start" specification="_BlZklLFzEeeCH50Lr9AhYw">
          <language>java</language>
          <body>musicPlayerModel.start(); // It is usually better to start the model first but not always.
		musicPlayerView.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Bo4WY7FzEeeCH50Lr9AhYw" name="main" specification="_BlaLoLFzEeeCH50Lr9AhYw">
          <ownedParameter xmi:id="_Bo4WZLFzEeeCH50Lr9AhYw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Bo4WZbFzEeeCH50Lr9AhYw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() { // Java specs say that the system must be constructed on the GUI event thread.
			public void run() {
				try {
					MusicPlayerController controller = new MusicPlayerController(); // instantiate the system
					controller.start(); // start the system
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_BlZkkLFzEeeCH50Lr9AhYw" name="MusicPlayerController" method="_Bo4WYLFzEeeCH50Lr9AhYw">
          <eAnnotations xmi:id="_BlZkkbFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_BlZkkrFzEeeCH50Lr9AhYw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_BpDVgbFzEeeCH50Lr9AhYw">
            <body>Controller constructor builds the system</body>
          </ownedComment>
          <ownedParameter xmi:id="_BlZkk7FzEeeCH50Lr9AhYw" type="_BlY9gLFzEeeCH50Lr9AhYw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_BlZklLFzEeeCH50Lr9AhYw" name="start" method="_Bo4WYrFzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpD8kLFzEeeCH50Lr9AhYw">
            <body>Start the system</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_BlaLoLFzEeeCH50Lr9AhYw" name="main" isStatic="true" method="_Bo4WY7FzEeeCH50Lr9AhYw">
          <ownedComment xmi:id="_BpD8kbFzEeeCH50Lr9AhYw">
            <body>Launch the application.
	 * @param args Arguments given by the system or command line.</body>
          </ownedComment>
          <ownedParameter xmi:id="_BlaLobFzEeeCH50Lr9AhYw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BlaLorFzEeeCH50Lr9AhYw" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpPiwbFzEeeCH50Lr9AhYw" name="" memberEnd="_BpPiwrFzEeeCH50Lr9AhYw _Bof74LFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpPiwrFzEeeCH50Lr9AhYw" name="" type="_BlY9gLFzEeeCH50Lr9AhYw" association="_BpPiwbFzEeeCH50Lr9AhYw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BpQJ0LFzEeeCH50Lr9AhYw" name="" memberEnd="_BpQJ0bFzEeeCH50Lr9AhYw _Bogi8bFzEeeCH50Lr9AhYw">
        <ownedEnd xmi:id="_BpQJ0bFzEeeCH50Lr9AhYw" name="" type="_BlY9gLFzEeeCH50Lr9AhYw" association="_BpQJ0LFzEeeCH50Lr9AhYw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BkwEULFzEeeCH50Lr9AhYw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_BkwEUbFzEeeCH50Lr9AhYw" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_BkwEUrFzEeeCH50Lr9AhYw" name="midi">
          <packagedElement xmi:type="uml:Class" xmi:id="_Bn9wYLFzEeeCH50Lr9AhYw" name="Instrument"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Bn-XcbFzEeeCH50Lr9AhYw" name="MidiSystem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Bn-Xc7FzEeeCH50Lr9AhYw" name="MidiUnavailableException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Bn--gbFzEeeCH50Lr9AhYw" name="Synthesizer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BoWK4rFzEeeCH50Lr9AhYw" name="Sequence"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BoWx8LFzEeeCH50Lr9AhYw" name="Track"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_BoWx8rFzEeeCH50Lr9AhYw" name="Sequencer"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Bk-t0LFzEeeCH50Lr9AhYw" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_Bk-t0bFzEeeCH50Lr9AhYw" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_BoCB0bFzEeeCH50Lr9AhYw" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BoDP9bFzEeeCH50Lr9AhYw" name="TitledBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BoD3A7FzEeeCH50Lr9AhYw" name="EtchedBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoBawbFzEeeCH50Lr9AhYw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoBaw7FzEeeCH50Lr9AhYw" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoCB07FzEeeCH50Lr9AhYw" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoCo4bFzEeeCH50Lr9AhYw" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoCo47FzEeeCH50Lr9AhYw" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoCo5bFzEeeCH50Lr9AhYw" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoDP8bFzEeeCH50Lr9AhYw" name="JSplitPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoD3AbFzEeeCH50Lr9AhYw" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BoEeEbFzEeeCH50Lr9AhYw" name="JTextPane"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_BU974LFzEeeCH50Lr9AhYw">
      <eAnnotations xmi:id="_BU974bFzEeeCH50Lr9AhYw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_BU974rFzEeeCH50Lr9AhYw" base_Package="_BR3kkLFzEeeCH50Lr9AhYw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BlbZwrFzEeeCH50Lr9AhYw" base_Element="_BlbZwbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BljVkrFzEeeCH50Lr9AhYw" base_Element="_BliugbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Blkjs7FzEeeCH50Lr9AhYw" base_Element="_BlkjsbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BlkjtLFzEeeCH50Lr9AhYw" base_Element="_BlkjsbFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BlkjtbFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BlpcM7FzEeeCH50Lr9AhYw" base_Element="_BlpcMLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_Blu7w7FzEeeCH50Lr9AhYw" base_Element="_Blu7wLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BlwJ47FzEeeCH50Lr9AhYw" base_Element="_BlwJ4LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BlxYArFzEeeCH50Lr9AhYw" base_Element="_BlxYALFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BlxYA7FzEeeCH50Lr9AhYw" base_Element="_BlxYALFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BlxYBLFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BmB2s7FzEeeCH50Lr9AhYw" base_Element="_BmB2sLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BmFhEbFzEeeCH50Lr9AhYw" base_Element="_BmFhELFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:StyledElement xmi:id="_BmFhE7FzEeeCH50Lr9AhYw" base_Element="_BmFhErFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BmGvMrFzEeeCH50Lr9AhYw" base_Element="_BmGvMLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BmGvM7FzEeeCH50Lr9AhYw" base_Element="_BmGvMLFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BmGvNLFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BmHWQLFzEeeCH50Lr9AhYw" base_Element="_BmGvNbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BmHWQbFzEeeCH50Lr9AhYw" base_Element="_BmGvNbFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BmHWQrFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BmJLdLFzEeeCH50Lr9AhYw" base_Element="_BmJLcbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BmKZkrFzEeeCH50Lr9AhYw" base_Element="_BmJyirFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_BmOD8LFzEeeCH50Lr9AhYw" genericsValue="TInst" base_Element="_BmNc57FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_BmPSErFzEeeCH50Lr9AhYw" genericsValue="TInst" base_Element="_BmPSEbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BmPSE7FzEeeCH50Lr9AhYw" base_Element="_BmPSEbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BmP5ILFzEeeCH50Lr9AhYw" base_Element="_BmPSEbFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BmP5IbFzEeeCH50Lr9AhYw" name="SuppressWarnings">
      <annotationParameters xmi:id="_BmP5IrFzEeeCH50Lr9AhYw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_BpHnBbFzEeeCH50Lr9AhYw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_BnkHwLFzEeeCH50Lr9AhYw" base_Element="_BnjgsLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bnku0bFzEeeCH50Lr9AhYw" base_Element="_Bnku0LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BnoZMLFzEeeCH50Lr9AhYw" base_Element="_BnnyILFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BnoZMrFzEeeCH50Lr9AhYw" base_Element="_BnoZMbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BnqOYLFzEeeCH50Lr9AhYw" base_Element="_BnpnULFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BnqOY7FzEeeCH50Lr9AhYw" base_Element="_BnpnUbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BnsDkLFzEeeCH50Lr9AhYw" base_Element="_BnrcgLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BnsDk7FzEeeCH50Lr9AhYw" base_Element="_BnrcgbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bnw8ErFzEeeCH50Lr9AhYw" base_Element="_BnwVAbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_Bnw8FbFzEeeCH50Lr9AhYw" base_Element="_BnwVArFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BnxjJLFzEeeCH50Lr9AhYw" base_Element="_BnxjILFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BnxjJ7FzEeeCH50Lr9AhYw" base_Element="_BnxjIbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BnyKMLFzEeeCH50Lr9AhYw" base_Element="_BnxjKLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BnyKMrFzEeeCH50Lr9AhYw" base_Element="_BnxjKbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BnzYVbFzEeeCH50Lr9AhYw" base_Element="_BnzYUbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_Bnz_YLFzEeeCH50Lr9AhYw" dimensions="1" base_Element="_BnzYUrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:StyledElement xmi:id="_Bn7UI7FzEeeCH50Lr9AhYw" base_Element="_Bn7UIbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn77MLFzEeeCH50Lr9AhYw" base_Element="_Bn7UJLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn77MrFzEeeCH50Lr9AhYw" base_Element="_Bn77MbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn8iQLFzEeeCH50Lr9AhYw" base_Element="_Bn77M7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn8iQrFzEeeCH50Lr9AhYw" base_Element="_Bn8iQbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn8iRLFzEeeCH50Lr9AhYw" base_Element="_Bn8iQ7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn9JULFzEeeCH50Lr9AhYw" base_Element="_Bn8iRbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn9JUrFzEeeCH50Lr9AhYw" base_Element="_Bn9JUbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn-XcLFzEeeCH50Lr9AhYw" base_Element="_Bn9wYLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn-XcrFzEeeCH50Lr9AhYw" base_Element="_Bn-XcbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn--gLFzEeeCH50Lr9AhYw" base_Element="_Bn-Xc7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bn--grFzEeeCH50Lr9AhYw" base_Element="_Bn--gbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoAMobFzEeeCH50Lr9AhYw" base_Element="_BoAMoLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoAzsLFzEeeCH50Lr9AhYw" base_Element="_BoAMorFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoAzsrFzEeeCH50Lr9AhYw" base_Element="_BoAzsbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoBawLFzEeeCH50Lr9AhYw" base_Element="_BoAzs7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoBawrFzEeeCH50Lr9AhYw" base_Element="_BoBawbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoCB0LFzEeeCH50Lr9AhYw" base_Element="_BoBaw7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoCB0rFzEeeCH50Lr9AhYw" base_Element="_BoCB0bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoCo4LFzEeeCH50Lr9AhYw" base_Element="_BoCB07FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoCo4rFzEeeCH50Lr9AhYw" base_Element="_BoCo4bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoCo5LFzEeeCH50Lr9AhYw" base_Element="_BoCo47FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoDP8LFzEeeCH50Lr9AhYw" base_Element="_BoCo5bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoDP8rFzEeeCH50Lr9AhYw" base_Element="_BoDP8bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoDP9LFzEeeCH50Lr9AhYw" base_Element="_BoDP87FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoD3ALFzEeeCH50Lr9AhYw" base_Element="_BoDP9bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoD3ArFzEeeCH50Lr9AhYw" base_Element="_BoD3AbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoD3BLFzEeeCH50Lr9AhYw" base_Element="_BoD3A7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoEeELFzEeeCH50Lr9AhYw" base_Element="_BoD3BbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoEeErFzEeeCH50Lr9AhYw" base_Element="_BoEeEbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoKksLFzEeeCH50Lr9AhYw" base_Element="_BoJ9oLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoLLwrFzEeeCH50Lr9AhYw" base_Element="_BoLLwbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoLy0bFzEeeCH50Lr9AhYw" base_Element="_BoLLw7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoLy07FzEeeCH50Lr9AhYw" base_Element="_BoLLxrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoMZ47FzEeeCH50Lr9AhYw" base_Element="_BoLy1LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoMZ5bFzEeeCH50Lr9AhYw" base_Element="_BoMZ4bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoMZ5rFzEeeCH50Lr9AhYw" base_Element="_BoLy1LFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoMZ57FzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoNA9LFzEeeCH50Lr9AhYw" base_Element="_BoNA8LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoNA9rFzEeeCH50Lr9AhYw" base_Element="_BoNA8rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoNoALFzEeeCH50Lr9AhYw" base_Element="_BoNA8LFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoNoAbFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoNoBrFzEeeCH50Lr9AhYw" base_Element="_BoNoArFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoOPELFzEeeCH50Lr9AhYw" base_Element="_BoNoBLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoOPEbFzEeeCH50Lr9AhYw" base_Element="_BoNoArFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoOPErFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoO2IbFzEeeCH50Lr9AhYw" base_Element="_BoOPE7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoO2I7FzEeeCH50Lr9AhYw" dimensions="1" base_Element="_BoOPFbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoO2JLFzEeeCH50Lr9AhYw" base_Element="_BoOPE7FzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoO2JbFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoPdNLFzEeeCH50Lr9AhYw" base_Element="_BoPdMLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoPdNrFzEeeCH50Lr9AhYw" base_Element="_BoPdMrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoQERbFzEeeCH50Lr9AhYw" base_Element="_BoQEQLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoQER7FzEeeCH50Lr9AhYw" base_Element="_BoQEQ7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoQrVbFzEeeCH50Lr9AhYw" base_Element="_BoQrULFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoQrV7FzEeeCH50Lr9AhYw" base_Element="_BoQrU7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoRSZLFzEeeCH50Lr9AhYw" base_Element="_BoRSYLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoRSZrFzEeeCH50Lr9AhYw" base_Element="_BoRSYrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoRSZ7FzEeeCH50Lr9AhYw" base_Element="_BoRSYLFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoRSaLFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoR5dLFzEeeCH50Lr9AhYw" base_Element="_BoR5cLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoR5drFzEeeCH50Lr9AhYw" base_Element="_BoR5crFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoSggLFzEeeCH50Lr9AhYw" base_Element="_BoR5cLFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoSggbFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoTHkbFzEeeCH50Lr9AhYw" base_Element="_BoSggrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoTHk7FzEeeCH50Lr9AhYw" base_Element="_BoSghLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoTHlLFzEeeCH50Lr9AhYw" base_Element="_BoSggrFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoTHlbFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoUVsLFzEeeCH50Lr9AhYw" base_Element="_BoTuoLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoUVsrFzEeeCH50Lr9AhYw" base_Element="_BoTuorFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoUVs7FzEeeCH50Lr9AhYw" base_Element="_BoTuoLFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoUVtLFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoU8xLFzEeeCH50Lr9AhYw" base_Element="_BoU8wLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoU8xrFzEeeCH50Lr9AhYw" base_Element="_BoU8wrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoVj0LFzEeeCH50Lr9AhYw" base_Element="_BoU8wLFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoVj0bFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoVj1rFzEeeCH50Lr9AhYw" base_Element="_BoVj0rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoVj2LFzEeeCH50Lr9AhYw" base_Element="_BoVj1LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Annotations xmi:id="_BoWK4LFzEeeCH50Lr9AhYw" base_Element="_BoVj0rFzEeeCH50Lr9AhYw">
    <annotations xmi:id="_BoWK4bFzEeeCH50Lr9AhYw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_BoWK47FzEeeCH50Lr9AhYw" base_Element="_BoWK4rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoWx8bFzEeeCH50Lr9AhYw" base_Element="_BoWx8LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BoWx87FzEeeCH50Lr9AhYw" base_Element="_BoWx8rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoYnILFzEeeCH50Lr9AhYw" base_Element="_BoYAELFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoYnIrFzEeeCH50Lr9AhYw" base_Element="_BoYAE7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoZOM7FzEeeCH50Lr9AhYw" base_Element="_BoYnI7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoZONbFzEeeCH50Lr9AhYw" base_Element="_BoZOMbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoZ1QbFzEeeCH50Lr9AhYw" base_Element="_BoZONrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoZ1Q7FzEeeCH50Lr9AhYw" base_Element="_BoZOObFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoacVLFzEeeCH50Lr9AhYw" base_Element="_BoacULFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoacVrFzEeeCH50Lr9AhYw" base_Element="_BoacUrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BobDYbFzEeeCH50Lr9AhYw" base_Element="_BobDYLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BocRgbFzEeeCH50Lr9AhYw" base_Element="_BocRgLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bogi8LFzEeeCH50Lr9AhYw" base_Element="_Bof74LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_Bogi8rFzEeeCH50Lr9AhYw" genericsValue="ABCInstrument" base_Element="_Bogi8bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bogi87FzEeeCH50Lr9AhYw" base_Element="_Bogi8bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BohKArFzEeeCH50Lr9AhYw" base_Element="_BohKAbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BohKBLFzEeeCH50Lr9AhYw" base_Element="_BohKA7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BohKBrFzEeeCH50Lr9AhYw" base_Element="_BohKBbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BohxELFzEeeCH50Lr9AhYw" base_Element="_BohKB7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BohxErFzEeeCH50Lr9AhYw" base_Element="_BohxEbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoiYILFzEeeCH50Lr9AhYw" base_Element="_BohxE7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_BoiYIrFzEeeCH50Lr9AhYw" genericsValue="DecoratorSeqList" base_Element="_BoiYIbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoiYJLFzEeeCH50Lr9AhYw" base_Element="_BoiYIbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_Boi_MLFzEeeCH50Lr9AhYw" genericsValue="DecoratorSeqList" base_Element="_BoiYJbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Boi_MrFzEeeCH50Lr9AhYw" base_Element="_BoiYJbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Boi_NbFzEeeCH50Lr9AhYw" base_Element="_Boi_M7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BojmQLFzEeeCH50Lr9AhYw" base_Element="_Boi_NrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BojmQ7FzEeeCH50Lr9AhYw" base_Element="_BojmQbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BojmRrFzEeeCH50Lr9AhYw" base_Element="_BojmRLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BokNULFzEeeCH50Lr9AhYw" base_Element="_BojmR7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BokNU7FzEeeCH50Lr9AhYw" base_Element="_BokNUbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BokNV7FzEeeCH50Lr9AhYw" base_Element="_BokNVLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bok0YbFzEeeCH50Lr9AhYw" base_Element="_Bok0YLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bok0ZLFzEeeCH50Lr9AhYw" base_Element="_Bok0YrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BolbdLFzEeeCH50Lr9AhYw" base_Element="_BolbcrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BomCgLFzEeeCH50Lr9AhYw" base_Element="_BolbdbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BomCgrFzEeeCH50Lr9AhYw" base_Element="_BomCgbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BomChLFzEeeCH50Lr9AhYw" base_Element="_BomCg7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BonQoLFzEeeCH50Lr9AhYw" base_Element="_BomplrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BonQorFzEeeCH50Lr9AhYw" base_Element="_BonQobFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BonQpLFzEeeCH50Lr9AhYw" base_Element="_BonQo7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BooewLFzEeeCH50Lr9AhYw" base_Element="_Bon3ubFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_Booew7FzEeeCH50Lr9AhYw" dimensions="1" base_Element="_BooewbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BooexLFzEeeCH50Lr9AhYw" base_Element="_BooewbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BopF0LFzEeeCH50Lr9AhYw" dimensions="1" base_Element="_BooexbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BopF0rFzEeeCH50Lr9AhYw" base_Element="_BooexbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BopF1bFzEeeCH50Lr9AhYw" base_Element="_BopF07FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bops47FzEeeCH50Lr9AhYw" base_Element="_Bops4rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoqT8LFzEeeCH50Lr9AhYw" base_Element="_Bops5LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoqT9LFzEeeCH50Lr9AhYw" base_Element="_BoqT87FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoqT9rFzEeeCH50Lr9AhYw" base_Element="_BoqT9bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Boq7ALFzEeeCH50Lr9AhYw" base_Element="_BoqT97FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Boq7ArFzEeeCH50Lr9AhYw" base_Element="_Boq7AbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Boq7BLFzEeeCH50Lr9AhYw" base_Element="_Boq7A7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Boq7BrFzEeeCH50Lr9AhYw" base_Element="_Boq7BbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoriELFzEeeCH50Lr9AhYw" base_Element="_Boq7B7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoriErFzEeeCH50Lr9AhYw" base_Element="_BoriEbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoriFbFzEeeCH50Lr9AhYw" base_Element="_BoriE7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BosJI7FzEeeCH50Lr9AhYw" base_Element="_BosJIrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoswMLFzEeeCH50Lr9AhYw" base_Element="_BosJJLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoswMrFzEeeCH50Lr9AhYw" base_Element="_BoswMbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoswNLFzEeeCH50Lr9AhYw" base_Element="_BoswM7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoswNrFzEeeCH50Lr9AhYw" base_Element="_BoswNbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoswOLFzEeeCH50Lr9AhYw" base_Element="_BoswN7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BotXRLFzEeeCH50Lr9AhYw" base_Element="_BotXQLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bot-ULFzEeeCH50Lr9AhYw" base_Element="_BotXRrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bot-U7FzEeeCH50Lr9AhYw" base_Element="_Bot-UbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bot-VrFzEeeCH50Lr9AhYw" base_Element="_Bot-VbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoulYbFzEeeCH50Lr9AhYw" base_Element="_BoulYLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BovMcbFzEeeCH50Lr9AhYw" base_Element="_BoulZLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BovMdbFzEeeCH50Lr9AhYw" base_Element="_BovMc7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_BovzgbFzEeeCH50Lr9AhYw" genericsValue="Map&lt;String, String>" base_Element="_BovzgLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bovzg7FzEeeCH50Lr9AhYw" base_Element="_BovzgLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BowakLFzEeeCH50Lr9AhYw" base_Element="_BovzhLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_BowakrFzEeeCH50Lr9AhYw" genericsValue="Token" base_Element="_BowakbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BowalLFzEeeCH50Lr9AhYw" base_Element="_BowakbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_BoxBobFzEeeCH50Lr9AhYw" genericsValue="String" base_Element="_BoxBoLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoxosLFzEeeCH50Lr9AhYw" base_Element="_BoxBoLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoxosrFzEeeCH50Lr9AhYw" base_Element="_BoxosbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BoxotLFzEeeCH50Lr9AhYw" base_Element="_Boxos7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_BoyPxbFzEeeCH50Lr9AhYw" base_Element="_BoyPw7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_Boy20LFzEeeCH50Lr9AhYw" base_Element="_BoyPx7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Boy207FzEeeCH50Lr9AhYw" base_Element="_Boy20rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Boy21bFzEeeCH50Lr9AhYw" base_Element="_Boy21LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bozd4LFzEeeCH50Lr9AhYw" base_Element="_Boy21rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_Bozd5LFzEeeCH50Lr9AhYw" base_Element="_Bozd4rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bozd5rFzEeeCH50Lr9AhYw" base_Element="_Bozd4rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Array xmi:id="_Bozd6bFzEeeCH50Lr9AhYw" base_Element="_Bozd57FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo0E8LFzEeeCH50Lr9AhYw" base_Element="_Bozd57FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo0E9LFzEeeCH50Lr9AhYw" base_Element="_Bo0E87FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo0sALFzEeeCH50Lr9AhYw" base_Element="_Bo0E9bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo0sArFzEeeCH50Lr9AhYw" base_Element="_Bo0sAbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo0sBLFzEeeCH50Lr9AhYw" base_Element="_Bo0sA7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo0sBrFzEeeCH50Lr9AhYw" base_Element="_Bo0sBbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo1TEbFzEeeCH50Lr9AhYw" base_Element="_Bo1TELFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Generics xmi:id="_Bo1TE7FzEeeCH50Lr9AhYw" genericsValue="TInst" base_Element="_Bo1TErFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo16ILFzEeeCH50Lr9AhYw" base_Element="_Bo1TErFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo16IrFzEeeCH50Lr9AhYw" base_Element="_Bo16IbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo16JLFzEeeCH50Lr9AhYw" base_Element="_Bo16I7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo16JrFzEeeCH50Lr9AhYw" base_Element="_Bo16JbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo2hMbFzEeeCH50Lr9AhYw" base_Element="_Bo2hMLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo2hM7FzEeeCH50Lr9AhYw" base_Element="_Bo2hMrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo2hNbFzEeeCH50Lr9AhYw" base_Element="_Bo2hNLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo3IQLFzEeeCH50Lr9AhYw" base_Element="_Bo2hNrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Bo3IQrFzEeeCH50Lr9AhYw" base_Element="_Bo3IQbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpO7sLFzEeeCH50Lr9AhYw" base_Element="_BpOUoLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpO7s7FzEeeCH50Lr9AhYw" base_Element="_BpO7sbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpO7trFzEeeCH50Lr9AhYw" base_Element="_BpO7tLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpPiwLFzEeeCH50Lr9AhYw" base_Element="_BpO7t7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpPiw7FzEeeCH50Lr9AhYw" base_Element="_BpPiwbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpQJ0rFzEeeCH50Lr9AhYw" base_Element="_BpQJ0LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpQw4LFzEeeCH50Lr9AhYw" base_Element="_BpQJ07FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpQw47FzEeeCH50Lr9AhYw" base_Element="_BpQw4bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpQw5rFzEeeCH50Lr9AhYw" base_Element="_BpQw5LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpRX8rFzEeeCH50Lr9AhYw" base_Element="_BpRX8LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpRX9bFzEeeCH50Lr9AhYw" base_Element="_BpRX87FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpR_ALFzEeeCH50Lr9AhYw" base_Element="_BpRX9rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpR_A7FzEeeCH50Lr9AhYw" base_Element="_BpR_AbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpR_BrFzEeeCH50Lr9AhYw" base_Element="_BpR_BLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpSmELFzEeeCH50Lr9AhYw" base_Element="_BpR_B7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpSmE7FzEeeCH50Lr9AhYw" base_Element="_BpSmEbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpTNILFzEeeCH50Lr9AhYw" base_Element="_BpSmFLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpTNI7FzEeeCH50Lr9AhYw" base_Element="_BpTNIbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpTNJrFzEeeCH50Lr9AhYw" base_Element="_BpTNJLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpT0MLFzEeeCH50Lr9AhYw" base_Element="_BpTNJ7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpT0M7FzEeeCH50Lr9AhYw" base_Element="_BpT0MbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpT0NrFzEeeCH50Lr9AhYw" base_Element="_BpT0NLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpUbQLFzEeeCH50Lr9AhYw" base_Element="_BpT0N7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpUbQ7FzEeeCH50Lr9AhYw" base_Element="_BpUbQbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpVCULFzEeeCH50Lr9AhYw" base_Element="_BpUbRLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpVCU7FzEeeCH50Lr9AhYw" base_Element="_BpVCUbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpVCVrFzEeeCH50Lr9AhYw" base_Element="_BpVCVLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpVpYLFzEeeCH50Lr9AhYw" base_Element="_BpVCV7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpVpY7FzEeeCH50Lr9AhYw" base_Element="_BpVpYbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpVpZrFzEeeCH50Lr9AhYw" base_Element="_BpVpZLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpWQcrFzEeeCH50Lr9AhYw" base_Element="_BpWQcLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpWQdbFzEeeCH50Lr9AhYw" base_Element="_BpWQc7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpW3gLFzEeeCH50Lr9AhYw" base_Element="_BpWQdrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpW3g7FzEeeCH50Lr9AhYw" base_Element="_BpW3gbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpW3hrFzEeeCH50Lr9AhYw" base_Element="_BpW3hLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpXekLFzEeeCH50Lr9AhYw" base_Element="_BpW3h7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpXek7FzEeeCH50Lr9AhYw" base_Element="_BpXekbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpXelrFzEeeCH50Lr9AhYw" base_Element="_BpXelLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpYFoLFzEeeCH50Lr9AhYw" base_Element="_BpXel7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpYFo7FzEeeCH50Lr9AhYw" base_Element="_BpYFobFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpYFprFzEeeCH50Lr9AhYw" base_Element="_BpYFpLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpYssrFzEeeCH50Lr9AhYw" base_Element="_BpYssLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpYstbFzEeeCH50Lr9AhYw" base_Element="_BpYss7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpZTwLFzEeeCH50Lr9AhYw" base_Element="_BpYstrFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpZTw7FzEeeCH50Lr9AhYw" base_Element="_BpZTwbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpZTxrFzEeeCH50Lr9AhYw" base_Element="_BpZTxLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpZ60LFzEeeCH50Lr9AhYw" base_Element="_BpZTx7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpZ607FzEeeCH50Lr9AhYw" base_Element="_BpZ60bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpZ61rFzEeeCH50Lr9AhYw" base_Element="_BpZ61LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bpah4rFzEeeCH50Lr9AhYw" base_Element="_Bpah4LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bpah5bFzEeeCH50Lr9AhYw" base_Element="_Bpah47FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpbI8LFzEeeCH50Lr9AhYw" base_Element="_Bpah5rFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpbI87FzEeeCH50Lr9AhYw" base_Element="_BpbI8bFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpbI9rFzEeeCH50Lr9AhYw" base_Element="_BpbI9LFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpbwALFzEeeCH50Lr9AhYw" base_Element="_BpbI97FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpbwA7FzEeeCH50Lr9AhYw" base_Element="_BpbwAbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpbwBrFzEeeCH50Lr9AhYw" base_Element="_BpbwBLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpcXELFzEeeCH50Lr9AhYw" base_Element="_BpbwB7FzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_BpcXE7FzEeeCH50Lr9AhYw" base_Element="_BpcXEbFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bpc-ILFzEeeCH50Lr9AhYw" base_Element="_BpcXFLFzEeeCH50Lr9AhYw"/>
  <UMLLabProfile:Reference xmi:id="_Bpc-I7FzEeeCH50Lr9AhYw" base_Element="_Bpc-IbFzEeeCH50Lr9AhYw"/>
</xmi:XMI>
