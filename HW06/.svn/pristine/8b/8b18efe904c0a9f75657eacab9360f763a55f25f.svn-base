<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_YtAeILEXEeeP95al6XTTTg" name="MusicController">
    <eAnnotations xmi:id="_YyCIELEXEeeP95al6XTTTg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_YyCIEbEXEeeP95al6XTTTg" source="codegen">
        <details xmi:id="_YyCIErEXEeeP95al6XTTTg" key="codegenDirectory" value="/HW06/src"/>
        <details xmi:id="_aKcFcLEXEeeP95al6XTTTg" key="AssociatedSourceCode" value="/HW06/src/controller/MusicPlayerController.java;2283594585/1;/HW06/src/model/IModel2ViewAdapter.java;3803546862/1;/HW06/src/model/MusicPlayerModel.java;793601/1;/HW06/src/provided/abcParser/ABCParser.java;3153405954/1;/HW06/src/provided/music/APhraseVisitor.java;1010602946/1;/HW06/src/provided/music/Chord.java;1971309365/1;/HW06/src/provided/music/DecoratorSeqList.java;2350535095/1;/HW06/src/provided/music/FineToggleDecoratorSeqList.java;2903020233/1;/HW06/src/provided/music/Header.java;855643762/1;/HW06/src/provided/music/INote.java;507512117/1;/HW06/src/provided/music/IPhrase.java;1122806289/1;/HW06/src/provided/music/IPhraseVisitor.java;2583970647/1;/HW06/src/provided/music/IPhraseVisitorCmd.java;3144788355/1;/HW06/src/provided/music/ISeqList.java;1752096597/1;/HW06/src/provided/music/MTSeqList.java;797718925/1;/HW06/src/provided/music/NESeqList.java;240802844/1;/HW06/src/provided/music/Note.java;141424783/1;/HW06/src/provided/music/NoteCollection.java;2061496451/1;/HW06/src/provided/music/ToggleDecoratorSeqList.java;3430233739/1;/HW06/src/provided/music/Triplet.java;163966482/1;/HW06/src/provided/music/Tuplet.java;799272193/1;/HW06/src/provided/music/visitor/playerAlgo.java;2604221261/1;/HW06/src/provided/music/visitor/toStringAlgo.java;3630904698/1;/HW06/src/provided/player/ISequencePlayerStatus.java;2951061270/1;/HW06/src/provided/player/SequencePlayer.java;1814505560/1;/HW06/src/provided/player/SequencePlayer2.java;1631007379/1;/HW06/src/provided/token/ATokVisitor.java;2901257995/1;/HW06/src/provided/token/ITokVisitor.java;275599564/1;/HW06/src/provided/token/ITokVisitorCmd.java;4098180758/1;/HW06/src/provided/token/ITokenFactory.java;1037223879/1;/HW06/src/provided/token/Token.java;2670746935/1;/HW06/src/provided/token/TokenFactory.java;1190700287/1;/HW06/src/provided/token/tokenizer/ABCTokenizer.java;2224825631/1;/HW06/src/provided/token/tokenizer/IStringTokenizer.java;2530580852/1;/HW06/src/provided/token/tokenizer/ITokenizer.java;1031763823/1;/HW06/src/provided/token/tokenizer/StringTokenizer.java;3408517212/1;/HW06/src/provided/util/ABCInstrument.java;1182473716/1;/HW06/src/view/IView2ModelControlAdapter.java;3162454401/1;/HW06/src/provided/util/KeySignature.java;3543793777/1;/HW06/src/provided/util/ABCUtil.java;817699883/1;/HW06/src/view/MusicPlayerView.java;1357472571/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_ZlsZoLEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_ZlsZobEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_ZlsZorEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_ZlsZo7EXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_ZlsZpLEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_ZltAsLEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_ZltAsbEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_ZltAsrEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_ZltAs7EXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZltnwLEXEeeP95al6XTTTg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_ZltnwbEXEeeP95al6XTTTg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZoG0cLEXEeeP95al6XTTTg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_Z2bkUbEXEeeP95al6XTTTg" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Z2cLYbEXEeeP95al6XTTTg" name="ActionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z1DEQLEXEeeP95al6XTTTg" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2a9QLEXEeeP95al6XTTTg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2iSAbEXEeeP95al6XTTTg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2kuQbEXEeeP95al6XTTTg" name="Color"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Zl51ALEXEeeP95al6XTTTg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_Z1OqcLEXEeeP95al6XTTTg" name="Hashtable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Z1PRgbEXEeeP95al6XTTTg" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2cycbEXEeeP95al6XTTTg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z210ALEXEeeP95al6XTTTg" name="Stack"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z3c4ALEXEeeP95al6XTTTg" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZnmeILEXEeeP95al6XTTTg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2Nh4LEXEeeP95al6XTTTg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2OI8bEXEeeP95al6XTTTg" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2OwAbEXEeeP95al6XTTTg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2PXEbEXEeeP95al6XTTTg" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2QlMLEXEeeP95al6XTTTg" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2RMQbEXEeeP95al6XTTTg" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2RzUbEXEeeP95al6XTTTg" name="StreamTokenizer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Z24QQLEXEeeP95al6XTTTg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_Z243ULEXEeeP95al6XTTTg" name="Object"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_Z3hJcLEXEeeP95al6XTTTg" name="Character"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZluO0LEXEeeP95al6XTTTg" name="model">
      <packagedElement xmi:type="uml:Interface" xmi:id="_ZpqToLEXEeeP95al6XTTTg" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_Z4_wIbEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
the IModel2ViewAdapter interface.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Zpq6sLEXEeeP95al6XTTTg" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_ZpqToLEXEeeP95al6XTTTg" isReadOnly="true" association="_Z5Z_0LEXEeeP95al6XTTTg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZprhwLEXEeeP95al6XTTTg" value="new IModel2ViewAdapter() {&#xD;&#xA;&#x9;&#x9;public SequencePlayer2 getPlayer() {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZpsI0LEXEeeP95al6XTTTg" name="player" type="_ZrxzgLEXEeeP95al6XTTTg" isReadOnly="true" association="_Z5am4bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZptW8LEXEeeP95al6XTTTg" name="MusicPlayerModel">
        <ownedComment xmi:id="_Z4_wIrEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
the ball world model class</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Z3svoLEXEeeP95al6XTTTg" name="player" type="_ZrxzgLEXEeeP95al6XTTTg" isReadOnly="true" association="_Z5eRQbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z3svobEXEeeP95al6XTTTg" name="_iModel2View" visibility="private" type="_ZpqToLEXEeeP95al6XTTTg" association="_Z5e4UbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z3tWsLEXEeeP95al6XTTTg" name="fileName" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z3tWsrEXEeeP95al6XTTTg" name="phrase" visibility="private" type="_ZqpyILEXEeeP95al6XTTTg" association="_Z5ffYbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z3t9wbEXEeeP95al6XTTTg" name="make_playable" visibility="private" type="_Zr020LEXEeeP95al6XTTTg" association="_Z5gGcbEXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4jrQLEXEeeP95al6XTTTg" name="MusicPlayerModel" specification="_Z1HVsLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z4jrQbEXEeeP95al6XTTTg" name="iModel2View" type="_ZpqToLEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_Z4jrQrEXEeeP95al6XTTTg" type="_ZptW8LEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>_iModel2View = iModel2View;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4jrQ7EXEeeP95al6XTTTg" name="loadFile" specification="_Zp3vAbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z4jrRLEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z4jrRbEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.fileName = &quot;/songs/&quot; + filename + &quot;.abc&quot;;&#xD;
	    return ABCUtil.Singleton.getFileContents(this.fileName);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4jrRrEXEeeP95al6XTTTg" name="parseFile" specification="_Zp5kMbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z4jrR7EXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>NESeqList.setToStringAlgo(new toStringAlgo());&#xD;
	    phrase = new ABCParser(this.fileName).parse();&#xD;
	    return phrase.toString();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4k5YLEXEeeP95al6XTTTg" name="playFile" specification="_Zp6yULEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z4k5YbEXEeeP95al6XTTTg" name="instrument">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>player = new SequencePlayer2(16, instrument);&#xD;
//		phrase = new Chord(new Note('G', 0, 0, 1.0, false), new Note('A', 0, 0, 1.0, false));&#xD;
//		phrase = new Triplet(new Note('G', 0, 0, 1.0, true), new Note('A', 0, 0, 1.0, false), new Note('C', 0, 0, 1.0, false));&#xD;
//		phrase = new Note('G', 0, 0, 1.0, false);&#xD;
		&#xD;
		player.setTicksPerDefaultNote(16);&#xD;
		player.setTempo(120);   &#xD;
&#xD;
		phrase.execute(new playerAlgo(), player, 1);&#xD;
		if(make_playable != null) {&#xD;
			make_playable.stop();&#xD;
		}&#xD;
		make_playable = player.makePlayable(ISequencePlayerStatus.NULL);&#xD;
		&#xD;
		make_playable.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4k5YrEXEeeP95al6XTTTg" name="stopFile" specification="_Zp6yUrEXEeeP95al6XTTTg">
          <language>java</language>
          <body>make_playable.stop();	&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Zp3H8LEXEeeP95al6XTTTg" name="start"/>
        <ownedOperation xmi:id="_Zp3vAbEXEeeP95al6XTTTg" name="loadFile" method="_Z4jrQ7EXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z4_wJLEXEeeP95al6XTTTg">
            <body>loads the given file.&#xD;
	 * @param filename the given file to load</body>
          </ownedComment>
          <ownedParameter xmi:id="_Zp3vArEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Zp5kMLEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Zp5kMbEXEeeP95al6XTTTg" name="parseFile" method="_Z4jrRrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z4_wJbEXEeeP95al6XTTTg">
            <body>parses the given file.&#xD;
	 * @param filename the given file to parse</body>
          </ownedComment>
          <ownedParameter xmi:id="_Zp6LQLEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Zp6yULEXEeeP95al6XTTTg" name="playFile" method="_Z4k5YLEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z4_wJrEXEeeP95al6XTTTg">
            <body>plays the given file.&#xD;
	 * @param filename the given file to play</body>
          </ownedComment>
          <ownedParameter xmi:id="_Zp6yUbEXEeeP95al6XTTTg" name="instrument">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Zp6yUrEXEeeP95al6XTTTg" name="stopFile" method="_Z4k5YrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z4_wJ7EXEeeP95al6XTTTg">
            <body>stops the given file.&#xD;
	 * @param filename the given file to stop</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Z1HVsLEXEeeP95al6XTTTg" name="MusicPlayerModel" method="_Z4jrQLEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_Z1H8wLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Z1H8wbEXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_Z4_wI7EXEeeP95al6XTTTg">
            <body>initiates the frame.&#xD;
	 * @param iModel2View the IModel2ViewAdapter that will be used throughout the instance</body>
          </ownedComment>
          <ownedParameter xmi:id="_Z1HVsbEXEeeP95al6XTTTg" name="iModel2View" type="_ZpqToLEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_Z1H8wrEXEeeP95al6XTTTg" type="_ZptW8LEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5Z_0LEXEeeP95al6XTTTg" name="" memberEnd="_Z5Z_0bEXEeeP95al6XTTTg _Zpq6sLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5Z_0bEXEeeP95al6XTTTg" name="" type="_ZpqToLEXEeeP95al6XTTTg" association="_Z5Z_0LEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5am4bEXEeeP95al6XTTTg" name="" memberEnd="_Z5am4rEXEeeP95al6XTTTg _ZpsI0LEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5am4rEXEeeP95al6XTTTg" name="" type="_ZpqToLEXEeeP95al6XTTTg" association="_Z5am4bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5eRQbEXEeeP95al6XTTTg" name="" memberEnd="_Z5eRQrEXEeeP95al6XTTTg _Z3svoLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5eRQrEXEeeP95al6XTTTg" name="" type="_ZptW8LEXEeeP95al6XTTTg" association="_Z5eRQbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5e4UbEXEeeP95al6XTTTg" name="" memberEnd="_Z5e4UrEXEeeP95al6XTTTg _Z3svobEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5e4UrEXEeeP95al6XTTTg" name="" type="_ZptW8LEXEeeP95al6XTTTg" association="_Z5e4UbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5ffYbEXEeeP95al6XTTTg" name="" memberEnd="_Z5ffYrEXEeeP95al6XTTTg _Z3tWsrEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5ffYrEXEeeP95al6XTTTg" name="" type="_ZptW8LEXEeeP95al6XTTTg" association="_Z5ffYbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5gGcbEXEeeP95al6XTTTg" name="" memberEnd="_Z5gGcrEXEeeP95al6XTTTg _Z3t9wbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5gGcrEXEeeP95al6XTTTg" name="" type="_ZptW8LEXEeeP95al6XTTTg" association="_Z5gGcbEXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZluO0bEXEeeP95al6XTTTg" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_ZluO0rEXEeeP95al6XTTTg" name="player">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZlzuYbEXEeeP95al6XTTTg" name="SequencePlayer2">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Z1GHkLEXEeeP95al6XTTTg" name="IPlayable"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Zrk_MLEXEeeP95al6XTTTg" name="ISequencePlayerStatus">
          <ownedComment xmi:id="_Z5EoorEXEeeP95al6XTTTg">
            <body>Command that is used to notify a user that a track has stopped playing.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_ZrmNULEXEeeP95al6XTTTg" name="NULL" isLeaf="true" isStatic="true" type="_Zrk_MLEXEeeP95al6XTTTg" isReadOnly="true" association="_Z5b1ALEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZrmNUbEXEeeP95al6XTTTg" value="new ISequencePlayerStatus() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Prints &quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot; to console.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void finished() {&#xD;&#xA;&#x9;&#x9;&#x9;System.out&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_ZrlmQLEXEeeP95al6XTTTg" name="finished">
            <ownedComment xmi:id="_Z5Eoo7EXEeeP95al6XTTTg">
              <body>Called when a track stops playing.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zrm0YLEXEeeP95al6XTTTg" name="SequencePlayer">
          <ownedComment xmi:id="_Z5EopLEXEeeP95al6XTTTg">
            <body>Sequence Player to create and play MIDI music sequences.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z4BfwbEXEeeP95al6XTTTg" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4BfwrEXEeeP95al6XTTTg" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4Bfw7EXEeeP95al6XTTTg" name="_sequence" visibility="private" type="_Z3R44LEXEeeP95al6XTTTg" association="_Z5uI4LEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4CG0bEXEeeP95al6XTTTg" name="_track" visibility="private" type="_Z3THALEXEeeP95al6XTTTg" association="_Z5uv8LEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4CG07EXEeeP95al6XTTTg" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4Ct4bEXEeeP95al6XTTTg" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4Ct47EXEeeP95al6XTTTg" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4DU8bEXEeeP95al6XTTTg" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4D8ALEXEeeP95al6XTTTg" name="_sequencer" visibility="private" type="_Z3UVILEXEeeP95al6XTTTg" association="_Z5vXAbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4D8ArEXEeeP95al6XTTTg" name="_synthesizer" visibility="private" type="_Z2ZvIbEXEeeP95al6XTTTg" association="_Z5v-EbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4FKILEXEeeP95al6XTTTg" name="_offsets" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4FKIbEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4FKI7EXEeeP95al6XTTTg" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4xtsLEXEeeP95al6XTTTg" name="SequencePlayer" specification="_ZropkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4xtsbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4xtsrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4xts7EXEeeP95al6XTTTg" type="_Zrm0YLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4xttLEXEeeP95al6XTTTg" name="init" specification="_ZrpQobEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4xttbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4xttrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4xtt7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_sequencer = null;&#xD;
		_synthesizer = null;&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
			_sequencer = MidiSystem.getSequencer();&#xD;
			_synthesizer = MidiSystem.getSynthesizer();&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out&#xD;
					.println(&quot;MIDI Unavailable, SequencePlayer not initialized.&quot;);&#xD;
			return false;&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4xtuLEXEeeP95al6XTTTg" name="addNote" specification="_Z16m8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4xtubEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4xturEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4xtu7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4xtvLEXEeeP95al6XTTTg" name="addNote" specification="_Z18cILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4xtvbEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4xtvrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4xtv7EXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4xtwLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4yUwLEXEeeP95al6XTTTg" name="play" specification="_Z19DMbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4yUwbEXEeeP95al6XTTTg" name="statusCmd" type="_Zrk_MLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_Z4yUwrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Z4yUw7EXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out.println(&quot;Finished Playing&quot;);&#xD;
						stop();&#xD;
						statusCmd.finished();&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
&#xD;
			// And start playing now.&#xD;
			_sequencer.start();&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4yUxLEXEeeP95al6XTTTg" name="stop" specification="_ZrrF0LEXEeeP95al6XTTTg">
            <language>java</language>
            <body>_sequencer.close();&#xD;
		_synthesizer.close();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4yUxbEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" specification="_ZrrF0bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4yUxrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4yUx7EXEeeP95al6XTTTg" name="setTicksPerDefaultNote" specification="_Zrrs4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4yUyLEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4y70LEXEeeP95al6XTTTg" name="getTempo" specification="_ZrsT8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4y70bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4y70rEXEeeP95al6XTTTg" name="setTempo" specification="_Zrs7ALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4y707EXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4y71LEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" specification="_Zrs7ArEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4y71bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZropkLEXEeeP95al6XTTTg" name="SequencePlayer" method="_Z4xtsLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Zropk7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZroplLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5EopbEXEeeP95al6XTTTg">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZropkbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZropkrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZrpQoLEXEeeP95al6XTTTg" type="_Zrm0YLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrpQobEXEeeP95al6XTTTg" name="init" method="_Z4xttLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5EoprEXEeeP95al6XTTTg">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrpQorEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZrpQo7EXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zrp3sLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrrF0LEXEeeP95al6XTTTg" name="stop" method="_Z4yUxLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5FPsbEXEeeP95al6XTTTg">
              <body>Stop playing music and close resources.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrrF0bEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" method="_Z4yUxbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5FPsrEXEeeP95al6XTTTg">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrrF0rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zrrs4LEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" method="_Z4yUx7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5FPs7EXEeeP95al6XTTTg">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zrrs4bEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrsT8LEXEeeP95al6XTTTg" name="getTempo" method="_Z4y70LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5FPtLEXEeeP95al6XTTTg">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrsT8bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zrs7ALEXEeeP95al6XTTTg" name="setTempo" method="_Z4y70rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5FPtbEXEeeP95al6XTTTg">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zrs7AbEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zrs7ArEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" method="_Z4y71LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5FPtrEXEeeP95al6XTTTg">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zrs7A7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z16m8LEXEeeP95al6XTTTg" name="addNote" method="_Z4xtuLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5Eop7EXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z17OALEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z17OAbEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z171ELEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z18cILEXEeeP95al6XTTTg" name="addNote" method="_Z4xtvLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5EoqLEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z18cIbEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z18cIrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z18cI7EXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z19DMLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z19DMbEXEeeP95al6XTTTg" name="play" method="_Z4yUwLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5FPsLEXEeeP95al6XTTTg">
              <body>Play the created Sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z19DMrEXEeeP95al6XTTTg" name="statusCmd" type="_Zrk_MLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_Z19DM7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Z19DNLEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZrxzgLEXEeeP95al6XTTTg" name="SequencePlayer2">
          <ownedComment xmi:id="_Z5FPt7EXEeeP95al6XTTTg">
            <body>Sequence Player to create and play MIDI music sequences.&#xD;
Differs from SequencePlayer because it has no play() method.   Instead, this class has &#xD;
a factory method that creates an SequencePlayer2.IPlayable object that can be individually &#xD;
and asynchronously started and stopped.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z4GYQLEXEeeP95al6XTTTg" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4GYQbEXEeeP95al6XTTTg" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4GYQrEXEeeP95al6XTTTg" name="_sequence" visibility="private" type="_Z3R44LEXEeeP95al6XTTTg" association="_Z5wlIbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4G_UbEXEeeP95al6XTTTg" name="_track" visibility="private" type="_Z3THALEXEeeP95al6XTTTg" association="_Z5xMMbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4G_U7EXEeeP95al6XTTTg" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4HmYbEXEeeP95al6XTTTg" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4INcbEXEeeP95al6XTTTg" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4INc7EXEeeP95al6XTTTg" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4I0gbEXEeeP95al6XTTTg" name="_offsets" isLeaf="true" isStatic="true" isReadOnly="true">
            <eAnnotations xmi:id="_Z4JbkLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z4JbkbEXEeeP95al6XTTTg" key="ConstantWithGetter"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4JbkrEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4JblLEXEeeP95al6XTTTg" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4zi4LEXEeeP95al6XTTTg" name="SequencePlayer2" specification="_Zr3TELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4zi4bEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4zi4rEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4zi47EXEeeP95al6XTTTg" type="_ZrxzgLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4zi5LEXEeeP95al6XTTTg" name="init" specification="_Zr4hMLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4zi5bEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4zi5rEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4zi57EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4zi6LEXEeeP95al6XTTTg" name="addNote" specification="_Z2AtkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4zi6bEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4zi6rEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4zi67EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z40J8LEXEeeP95al6XTTTg" name="addNote" specification="_Z2BUobEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z40J8bEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z40J8rEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z40J87EXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z40J9LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z40J9bEXEeeP95al6XTTTg" name="makePlayable" specification="_Z2B7srEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z40J9rEXEeeP95al6XTTTg" name="statusCmd" type="_Zrk_MLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_Z40J97EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Z40J-LEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_Z40J-bEXEeeP95al6XTTTg" type="_Zr020LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			final Sequencer _sequencer = MidiSystem.getSequencer(); // MIDI Sequencer object&#xD;
			final Synthesizer _synthesizer = MidiSystem.getSynthesizer(); // MIDI synthesizer object&#xD;
&#xD;
			final IPlayable playable = new IPlayable() {&#xD;
&#xD;
				@Override&#xD;
				public void start() {&#xD;
					_sequencer.start();&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public void stop() {&#xD;
					_sequencer.close();&#xD;
					_synthesizer.close();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out&#xD;
								.println(&quot;SequencePlayer2.play(): End of Track&quot;);&#xD;
						playable.stop();&#xD;
						statusCmd.finished();&#xD;
					} else&#xD;
						System.out.println(&quot;Message type received: &quot;&#xD;
								+ m.getType());&#xD;
				}&#xD;
			});&#xD;
&#xD;
			return playable;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		return IPlayable.NULL;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z40J-rEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" specification="_Zr5vULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z40J-7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z40J_LEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" specification="_Zr6WYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z40J_bEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z40J_rEXEeeP95al6XTTTg" name="getTempo" specification="_Zr6WYrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z40J_7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z40xALEXEeeP95al6XTTTg" name="setTempo" specification="_Zr69cbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z40xAbEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z40xArEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" specification="_Zr7kgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z40xA7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Zr3TELEXEeeP95al6XTTTg" name="SequencePlayer2" method="_Z4zi4LEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Zr36IbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Zr36IrEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5F2wLEXEeeP95al6XTTTg">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zr3TEbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zr36ILEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zr36I7EXEeeP95al6XTTTg" type="_ZrxzgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Zr4hMLEXEeeP95al6XTTTg" name="init" method="_Z4zi5LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5F2wbEXEeeP95al6XTTTg">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zr4hMbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zr4hMrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zr4hM7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zr5vULEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" method="_Z40J-rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5F2xbEXEeeP95al6XTTTg">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zr5vUbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zr6WYLEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" method="_Z40J_LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5Gd0LEXEeeP95al6XTTTg">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zr6WYbEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zr6WYrEXEeeP95al6XTTTg" name="getTempo" method="_Z40J_rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5Gd0bEXEeeP95al6XTTTg">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zr69cLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zr69cbEXEeeP95al6XTTTg" name="setTempo" method="_Z40xALEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5Gd0rEXEeeP95al6XTTTg">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zr69crEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zr7kgLEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" method="_Z40xArEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5Gd07EXEeeP95al6XTTTg">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zr7kgbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z2AtkLEXEeeP95al6XTTTg" name="addNote" method="_Z4zi6LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5F2wrEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z2AtkbEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z2AtkrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2BUoLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z2BUobEXEeeP95al6XTTTg" name="addNote" method="_Z40J8LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5F2w7EXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z2BUorEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z2BUo7EXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2B7sLEXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2B7sbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z2B7srEXEeeP95al6XTTTg" name="makePlayable" method="_Z40J9bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5F2xLEXEeeP95al6XTTTg">
              <body>Factory method for an IPlayable object that can play the currently programmed music sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.&#xD;
	 * @return An IPlayable object associated with the currently programmed music sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z2B7s7EXEeeP95al6XTTTg" name="statusCmd" type="_Zrk_MLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_Z2CiwLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Z2CiwbEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2B7tLEXEeeP95al6XTTTg" type="_Zr020LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Interface" xmi:id="_Zr020LEXEeeP95al6XTTTg" name="IPlayable">
            <eAnnotations xmi:id="_Zr020bEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Zr020rEXEeeP95al6XTTTg" key="static"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5FPuLEXEeeP95al6XTTTg">
              <body>Interface  that represents a playable entity.&#xD;
	 * @author swong&#xD;
	 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_Zr2E8LEXEeeP95al6XTTTg" name="NULL" isLeaf="true" isStatic="true" type="_Zr020LEXEeeP95al6XTTTg" isReadOnly="true" association="_Z5ccEbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zr2E8bEXEeeP95al6XTTTg" value="new IPlayable() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void start() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void stop() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_Zr1d4LEXEeeP95al6XTTTg" name="start">
              <ownedComment xmi:id="_Z5FPubEXEeeP95al6XTTTg">
                <body>Starts the sequencer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_Zr1d4bEXEeeP95al6XTTTg" name="stop">
              <ownedComment xmi:id="_Z5FPurEXEeeP95al6XTTTg">
                <body>Stops the sequencer and synthesizer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5b1ALEXEeeP95al6XTTTg" name="" memberEnd="_Z5b1AbEXEeeP95al6XTTTg _ZrmNULEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5b1AbEXEeeP95al6XTTTg" name="" type="_Zrk_MLEXEeeP95al6XTTTg" association="_Z5b1ALEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5ccEbEXEeeP95al6XTTTg" name="" memberEnd="_Z5ccErEXEeeP95al6XTTTg _Zr2E8LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5ccErEXEeeP95al6XTTTg" name="" type="_Zr020LEXEeeP95al6XTTTg" association="_Z5ccEbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5uI4LEXEeeP95al6XTTTg" name="" memberEnd="_Z5uI4bEXEeeP95al6XTTTg _Z4Bfw7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5uI4bEXEeeP95al6XTTTg" name="" type="_Zrm0YLEXEeeP95al6XTTTg" association="_Z5uI4LEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5uv8LEXEeeP95al6XTTTg" name="" memberEnd="_Z5uv8bEXEeeP95al6XTTTg _Z4CG0bEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5uv8bEXEeeP95al6XTTTg" name="" type="_Zrm0YLEXEeeP95al6XTTTg" association="_Z5uv8LEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5vXAbEXEeeP95al6XTTTg" name="" memberEnd="_Z5vXArEXEeeP95al6XTTTg _Z4D8ALEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5vXArEXEeeP95al6XTTTg" name="" type="_Zrm0YLEXEeeP95al6XTTTg" association="_Z5vXAbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5v-EbEXEeeP95al6XTTTg" name="" memberEnd="_Z5v-ErEXEeeP95al6XTTTg _Z4D8ArEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5v-ErEXEeeP95al6XTTTg" name="" type="_Zrm0YLEXEeeP95al6XTTTg" association="_Z5v-EbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5wlIbEXEeeP95al6XTTTg" name="" memberEnd="_Z5wlIrEXEeeP95al6XTTTg _Z4GYQrEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5wlIrEXEeeP95al6XTTTg" name="" type="_ZrxzgLEXEeeP95al6XTTTg" association="_Z5wlIbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5xMMbEXEeeP95al6XTTTg" name="" memberEnd="_Z5xMMrEXEeeP95al6XTTTg _Z4G_UbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5xMMrEXEeeP95al6XTTTg" name="" type="_ZrxzgLEXEeeP95al6XTTTg" association="_Z5xMMbEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZluO1LEXEeeP95al6XTTTg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_ZsnhALEXEeeP95al6XTTTg" name="ABCInstrument">
          <ownedComment xmi:id="_Z5ITArEXEeeP95al6XTTTg">
            <body>Represents an instrument as a name and an integer value&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z4TzoLEXEeeP95al6XTTTg" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4TzobEXEeeP95al6XTTTg" name="value" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z45pgLEXEeeP95al6XTTTg" name="ABCInstrument" specification="_ZsovILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z45pgbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z45pgrEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z45pg7EXEeeP95al6XTTTg" type="_ZsnhALEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.name = name;&#xD;
		this.value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z45phLEXEeeP95al6XTTTg" name="toString" specification="_ZspWMLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z45phbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return name + &quot;: &quot; + value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZsovILEXEeeP95al6XTTTg" name="ABCInstrument" method="_Z45pgLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_ZsovI7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZsovJLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ZsovIbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZsovIrEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZsovJbEXEeeP95al6XTTTg" type="_ZsnhALEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZspWMLEXEeeP95al6XTTTg" name="toString" method="_Z45phLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_ZspWMbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZsrycbEXEeeP95al6XTTTg" name="KeySignature">
          <ownedComment xmi:id="_Z5ITCLEXEeeP95al6XTTTg">
            <body>Utility class to simplify dealing with key signatures &lt;br/>&#xD;
Usage:&lt;br/>&#xD;
KeySignature keySig = new KeySignature(aKey); // aKey is a string representing a key, e.g. &quot;C&quot;, &quot;Bb&quot;, &quot;Am&quot;&lt;br/>&#xD;
Note adjustedNote = keySig.adjust(originalNote); // returns the Note object, adjusted so that it matches the key,&#xD;
e.g for key of &quot;D&quot;, an &quot;F&quot; --&amp;gt; &quot;F#&quot;.&lt;br/></body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z4UasLEXEeeP95al6XTTTg" name="_major" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4UasbEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4Uas7EXEeeP95al6XTTTg" value="{ 0, 2, 2, 1, 2, 2, 2 //, 1&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4UatLEXEeeP95al6XTTTg" name="_minor" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4VBwLEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4VBwrEXEeeP95al6XTTTg" value="{ // Half steps in a Minor key&#xD;&#xA;&#x9;0, 2, 1, 2, 2, 1, 2 //, 2&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4WP4LEXEeeP95al6XTTTg" name="keymap" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <qualifier xmi:id="_Z4WP47EXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4WP4bEXEeeP95al6XTTTg" value="new Hashtable&lt;Character, Integer>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4WP5LEXEeeP95al6XTTTg" name="notes" visibility="private" type="_ZstAkLEXEeeP95al6XTTTg" association="_Z51dobEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4W28LEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4W28rEXEeeP95al6XTTTg" value="{ new KeyNote('A', 0), new KeyNote('A', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('B', 0), new KeyNote('C', 0), new KeyNote('C', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('D', 0), new KeyNote('D', 1), new KeyNote('E', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 0), new KeyNote('F', 1), new KeyNote('G', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4W29LEXEeeP95al6XTTTg" name="fs_dsm" visibility="private" type="_ZstAkLEXEeeP95al6XTTTg" association="_Z52EsbEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4XeALEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4XeArEXEeeP95al6XTTTg" value="{ new KeyNote('A', 1), new KeyNote('B', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('C', 1), new KeyNote('D', 1), new KeyNote('E', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 1), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z46QkrEXEeeP95al6XTTTg" name="KeySignature" specification="_Zsvc0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z46Qk7EXEeeP95al6XTTTg" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z46QlLEXEeeP95al6XTTTg" type="_ZsrycbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>// Get rid of spurious &quot;maj&quot; at the end, if it's there&#xD;
		if (key.endsWith(&quot;maj&quot;)) {&#xD;
			key = key.replace(&quot;maj&quot;, &quot;&quot;);&#xD;
		}&#xD;
&#xD;
		// Special case keys with 6 sharps&#xD;
		if ((key == &quot;F#&quot;) || (key == &quot;D#m&quot;)) {&#xD;
			for (KeyNote n : fs_dsm) {&#xD;
				keymap.put(n.letter, n.accidental);&#xD;
			}&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		char keynote = key.charAt(0);&#xD;
		int cur = -1;&#xD;
&#xD;
		for (int i = 0; i &lt; notes.length; i++) {&#xD;
			if (notes[i].letter == keynote) {&#xD;
				cur = i;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			System.out.println(&quot;Invalid key: &quot; + key);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		int[] steps = _major;&#xD;
&#xD;
		int idx = 1;&#xD;
		while (idx &lt; key.length()) {&#xD;
			switch (key.charAt(idx)) {&#xD;
			case '#':&#xD;
				cur += 1;&#xD;
				break;&#xD;
&#xD;
			case 'b':&#xD;
				cur -= 1;&#xD;
				break;&#xD;
&#xD;
			case 'm':&#xD;
				steps = _minor;&#xD;
				break;&#xD;
&#xD;
			default:&#xD;
				System.out.println(&quot;Invalid key: &quot; + key);&#xD;
				return;&#xD;
			}&#xD;
			idx++;&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			cur = notes.length - 1;&#xD;
		}&#xD;
&#xD;
		for (int i : steps) {&#xD;
			cur += i;&#xD;
			if (cur >= notes.length) {&#xD;
				cur -= notes.length;&#xD;
			}&#xD;
			KeyNote n = notes[cur];&#xD;
			insert(n);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z46QlbEXEeeP95al6XTTTg" name="convertflat" specification="_ZswD4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z46QlrEXEeeP95al6XTTTg" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z46Ql7EXEeeP95al6XTTTg" type="_ZstAkLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>char next = (char) (n + 1);&#xD;
		if (next == 'H') {&#xD;
			next = 'A';&#xD;
		}&#xD;
		return new KeyNote(next, -1);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z46QmLEXEeeP95al6XTTTg" name="insert" specification="_Z2U2obEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z46QmbEXEeeP95al6XTTTg" name="n" type="_ZstAkLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>if (!keymap.containsKey(n.letter)) {&#xD;
			keymap.put(n.letter, n.accidental);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if (n.accidental == 1) {&#xD;
			// Move sharp up to next flat&#xD;
			insert(convertflat(n.letter));&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if ((n.accidental == 0) || (n.accidental == -1)) {&#xD;
			// Conflict, move higher note up to next flat&#xD;
			int a = keymap.get(n.letter);&#xD;
			a = Math.min(a, n.accidental);&#xD;
			insert(convertflat(n.letter));&#xD;
			keymap.put(n.letter, a);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		// Shouldn't get here&#xD;
		System.out.println(&quot;Should not reach here.&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z463oLEXEeeP95al6XTTTg" name="map" specification="_Z3hwgbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z463obEXEeeP95al6XTTTg" name="note" type="_Z3hJcLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z463orEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (keymap.containsKey(note)) {&#xD;
			return (int) keymap.get(note);&#xD;
		} else {&#xD;
			return 0;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z463o7EXEeeP95al6XTTTg" name="adjust" specification="_Z2VdsbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z463pLEXEeeP95al6XTTTg" name="n" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z463pbEXEeeP95al6XTTTg" type="_ZrEo4LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (n.getAccidental() != 0 &amp;&amp; !n.getIsNatural()) {&#xD;
			return n; // Accidentals set and is not natural&#xD;
		} else if (n.getIsNatural()) {&#xD;
			return n; // override key signature&#xD;
		} else {&#xD;
			// normal key signature mapping applies&#xD;
			int accidental = map(n.getName());&#xD;
			if (accidental == 0) {&#xD;
				return n; // nothing to change&#xD;
			}&#xD;
			return new Note(n.getName(), n.getOctave(), accidental,&#xD;
					n.getDuration(), false); // must be false isNatural&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z463prEXEeeP95al6XTTTg" name="printmap" specification="_ZsxSALEXEeeP95al6XTTTg">
            <language>java</language>
            <body>System.out.println(keymap);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Zsvc0LEXEeeP95al6XTTTg" name="KeySignature" method="_Z46QkrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Zsvc0rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Zsvc07EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5I6EbEXEeeP95al6XTTTg">
              <body>Generate a &quot;Key&quot; object that enables easy access to the key signature.&#xD;
	 * &#xD;
	 * @param key        - String indicating key (i.e., &quot;C&quot; or &quot;D#m&quot;)</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zsvc0bEXEeeP95al6XTTTg" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zsvc1LEXEeeP95al6XTTTg" type="_ZsrycbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZswD4LEXEeeP95al6XTTTg" name="convertflat" visibility="private" method="_Z46QlbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5I6ErEXEeeP95al6XTTTg">
              <body>Helper method to convert a note to its equivalent flat version.&#xD;
	 * &#xD;
	 * @param n  - note letter&#xD;
	 * @return   - equivalent flat version of note n</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZswD4bEXEeeP95al6XTTTg" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2U2oLEXEeeP95al6XTTTg" type="_ZstAkLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZsxSALEXEeeP95al6XTTTg" name="printmap" method="_Z463prEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5I6FrEXEeeP95al6XTTTg">
              <body>Print the mapping for this key signature</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_Z2U2obEXEeeP95al6XTTTg" name="insert" visibility="private" method="_Z46QmLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5I6E7EXEeeP95al6XTTTg">
              <body>Helper method to insert the given note into the keymap.&#xD;
	 * &#xD;
	 * @param n  - note to add to the map</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z2VdsLEXEeeP95al6XTTTg" name="n" type="_ZstAkLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z2VdsbEXEeeP95al6XTTTg" name="adjust" method="_Z463o7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5I6FbEXEeeP95al6XTTTg">
              <body>Takes a note and returns the properly transposed note in this key signature&#xD;
	 *&#xD;
	 * @param n - note to be adjusted&#xD;
	 * @return A new, adjusted Note</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z2VdsrEXEeeP95al6XTTTg" name="n" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z2Vds7EXEeeP95al6XTTTg" type="_ZrEo4LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3hwgbEXEeeP95al6XTTTg" name="map" visibility="private" method="_Z463oLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5I6FLEXEeeP95al6XTTTg">
              <body>Takes a note (with no accidentals) and returns the accidental for this&#xD;
	 * key signature.&#xD;
	 * &#xD;
	 * @param  note - in [A, B, C, D, E, F, G]&#xD;
	 * @return accidental for the note in this key signature [-1, 0, 1]</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z3hwgrEXEeeP95al6XTTTg" name="note" type="_Z3hJcLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3hwg7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_ZstAkLEXEeeP95al6XTTTg" name="KeyNote" visibility="private">
            <ownedComment xmi:id="_Z5ITCbEXEeeP95al6XTTTg">
              <body>Utility class to keep track of the position of notes</body>
            </ownedComment>
            <ownedAttribute xmi:id="_Z4VBw7EXEeeP95al6XTTTg" name="letter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Z4Vo0bEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z45phrEXEeeP95al6XTTTg" name="KeyNote" specification="_ZstnoLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z45ph7EXEeeP95al6XTTTg" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Z45piLEXEeeP95al6XTTTg" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Z45pibEXEeeP95al6XTTTg" type="_ZstAkLEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>this.letter = letter;&#xD;
			this.accidental = accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z46QkLEXEeeP95al6XTTTg" name="toString" specification="_ZsuOsbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z46QkbEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;&quot; + letter + accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ZstnoLEXEeeP95al6XTTTg" name="KeyNote" visibility="package" method="_Z45phrEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_Zstno7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_ZstnpLEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_Z5I6ELEXEeeP95al6XTTTg">
                <body>Constructor for the class&#xD;
		 * @param letter  The letter of the note&#xD;
		 * @param accidental  Whether or not the note is accidental:  -1 = flat, 0 = natural, +1 = sharp</body>
              </ownedComment>
              <ownedParameter xmi:id="_ZstnobEXEeeP95al6XTTTg" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ZstnorEXEeeP95al6XTTTg" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ZsuOsLEXEeeP95al6XTTTg" type="_ZstAkLEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ZsuOsbEXEeeP95al6XTTTg" name="toString" method="_Z46QkLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_ZsuOsrEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zs2KgLEXEeeP95al6XTTTg" name="ABCUtil">
          <ownedComment xmi:id="_Z5I6F7EXEeeP95al6XTTTg">
            <body>Singleton utility class that has methods for parsing,&#xD;
reading file content and getting the list of instruments.&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z4YFELEXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_Zs2KgLEXEeeP95al6XTTTg" isReadOnly="true" association="_Z52rwbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4YsILEXEeeP95al6XTTTg" value="new ABCUtil()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z47esLEXEeeP95al6XTTTg" name="parseFraction" specification="_Zs5N0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z47esbEXEeeP95al6XTTTg" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z47esrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] vals = frac.split(&quot;/&quot;);&#xD;
		if (vals.length != 2) {&#xD;
			throw new NumberFormatException(frac + &quot; is not a fraction.&quot;);&#xD;
		}&#xD;
		double num = Double.parseDouble(vals[0]);&#xD;
		double denom = Double.parseDouble(vals[1]);&#xD;
		return num / denom;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z47es7EXEeeP95al6XTTTg" name="parseTempo" specification="_Zs504LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z47etLEXEeeP95al6XTTTg" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z47etbEXEeeP95al6XTTTg" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z47etrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String els[] = tempo.split(&quot;=&quot;);&#xD;
		double bpm = 0;&#xD;
		if (1 == els.length) {&#xD;
			bpm = Double.parseDouble(els[0]) / defaultNotesPerQuarterNote;&#xD;
		} else {&#xD;
			double note = parseFraction(els[0]);&#xD;
			bpm = Double.parseDouble(els[1]) / (0.25 / note);&#xD;
		}&#xD;
		return bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z47et7EXEeeP95al6XTTTg" name="getFileContents" specification="_Zs6b8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z47euLEXEeeP95al6XTTTg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z47eubEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String fileContents = &quot;&quot;;&#xD;
&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(filename).openStream();&#xD;
&#xD;
			BufferedReader input = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			try {&#xD;
				// use buffering, reading one line at a time&#xD;
				// FileReader always assumes default&#xD;
				// encoding is OK!&#xD;
&#xD;
				String line = null; // not declared within while loop&#xD;
&#xD;
				/*&#xD;
				 * readLine is a bit quirky : it returns the&#xD;
				 * content of a line MINUS the newline. it&#xD;
				 * returns null only for the END of the&#xD;
				 * stream. it returns an empty String if two&#xD;
				 * newlines appear in a row.&#xD;
				 */&#xD;
				while ((line = input.readLine()) != null) {&#xD;
					fileContents += line + &quot;\n&quot;;&#xD;
				}&#xD;
			} finally {&#xD;
				input.close();&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			return &quot;Error loading file: &quot; + filename + &quot;\n&quot; + e + &quot;\n&quot;;&#xD;
		}&#xD;
&#xD;
		return fileContents;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z47eurEXEeeP95al6XTTTg" name="getInstruments" specification="_Zs6b87EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z47eu7EXEeeP95al6XTTTg" type="_ZsnhALEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z47evLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			Synthesizer synth = MidiSystem.getSynthesizer();&#xD;
			synth.open();&#xD;
			Instrument[] instruments = synth.getAvailableInstruments();&#xD;
			ABCInstrument[] result = new ABCInstrument[instruments.length];&#xD;
			for (int i = 0; i &lt; instruments.length; i++) {&#xD;
				result[i] = new ABCInstrument(instruments[i].getName(),&#xD;
						instruments[i].getPatch().getProgram());&#xD;
			}&#xD;
&#xD;
			synth.close();&#xD;
			return result;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.err.println(&quot;ABCUtil.getInstruments: &quot; + e);&#xD;
			return null;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Zs3_sLEXEeeP95al6XTTTg" name="ABCUtil" visibility="private">
            <eAnnotations xmi:id="_Zs4mwLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Zs4mwbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Zs4mw7EXEeeP95al6XTTTg" type="_Zs2KgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Zs5N0LEXEeeP95al6XTTTg" name="parseFraction" method="_Z47esLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5I6GLEXEeeP95al6XTTTg">
              <body>Return the evaluation of a string &quot;a/b&quot;.&#xD;
	 * &#xD;
	 * @param frac - a string containing a fraction&#xD;
	 * @return     - the result of evaluating the fraction</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zs5N0bEXEeeP95al6XTTTg" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zs5N0rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zs504LEXEeeP95al6XTTTg" name="parseTempo" method="_Z47es7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5I6GbEXEeeP95al6XTTTg">
              <body>Return the tempo given by the input string.  The returned value is in the &#xD;
	 * units of quarter notes per minute.&#xD;
	 * &#xD;
	 * Accepts &quot;bpm&quot; (beats per default note) or &quot;a/b=bpm&quot; (beats per a/b note).&#xD;
	 * &#xD;
	 * @param tempo                      - tempo represented as a string&#xD;
	 * @param defaultNotesPerQuarterNote - default notes per quarter note &#xD;
	 * @return                           - the tempo indicated by the string</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zs504bEXEeeP95al6XTTTg" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zs504rEXEeeP95al6XTTTg" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zs5047EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zs6b8LEXEeeP95al6XTTTg" name="getFileContents" method="_Z47et7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5I6GrEXEeeP95al6XTTTg">
              <body>Returns the contents of a text file, e.g. an abc file, as a single string.&#xD;
	 * @param filename the name of the file with respect to the default package, where &quot;/&quot; refers to the default package, e.g. a file in the &quot;data&quot; package would &quot;/data/myfile.abc&quot;&#xD;
	 * @return the contents of the file</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zs6b8bEXEeeP95al6XTTTg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Zs6b8rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zs6b87EXEeeP95al6XTTTg" name="getInstruments" method="_Z47eurEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5JhILEXEeeP95al6XTTTg">
              <body>Get an array of all the available instruments as ABCInstruments &#xD;
	 * where the instrument's value is the MIDI instrument number&#xD;
	 * &#xD;
	 * @return an array of ABCInstruments</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zs6b9LEXEeeP95al6XTTTg" type="_ZsnhALEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zs7DALEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z51dobEXEeeP95al6XTTTg" name="" memberEnd="_Z51dorEXEeeP95al6XTTTg _Z4WP5LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z51dorEXEeeP95al6XTTTg" name="" type="_ZsrycbEXEeeP95al6XTTTg" association="_Z51dobEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z52EsbEXEeeP95al6XTTTg" name="" memberEnd="_Z52EsrEXEeeP95al6XTTTg _Z4W29LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z52EsrEXEeeP95al6XTTTg" name="" type="_ZsrycbEXEeeP95al6XTTTg" association="_Z52EsbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z52rwbEXEeeP95al6XTTTg" name="" memberEnd="_Z52rwrEXEeeP95al6XTTTg _Z4YFELEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z52rwrEXEeeP95al6XTTTg" name="" type="_Zs2KgLEXEeeP95al6XTTTg" association="_Z52rwbEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZlzHULEXEeeP95al6XTTTg" name="abcParser">
        <packagedElement xmi:type="uml:Class" xmi:id="_Zp_DwLEXEeeP95al6XTTTg" name="ABCParser">
          <ownedComment xmi:id="_Z4_wKLEXEeeP95al6XTTTg">
            <body>Parses an abc file into IPhrase music structures&lt;br/>&#xD;
&#xD;
Usage: &lt;br/>&#xD;
ABCParser parser = new ABCParser(&quot;/data/aMusicFile.abc&quot;); &lt;br/>&#xD;
IPhrase phrase = parser.parse(); &lt;br/>&#xD;
&#xD;
Cases handled:&lt;br/>&#xD;
- single notes with and without accidentals and naturals with regards to measures&lt;br/>&#xD;
- chords&lt;br/>&#xD;
- dotted notes&lt;br/>&#xD;
- grace notes&lt;br/>&#xD;
- repeats, including first and second repeats.&lt;br/>&#xD;
- triplets &lt;br/>&#xD;
- tuplets&lt;br/>&#xD;
- all headers&lt;br/>&#xD;
- quoted text&lt;br/>&#xD;
- D.C. al fine&lt;br/>&#xD;
- EOF (End Of File)&lt;br/>&#xD;
&lt;br/>&#xD;
All other cases ignored.&#xD;
&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z3uk0LEXEeeP95al6XTTTg" name="abcT" visibility="private" type="_ZsUmELEXEeeP95al6XTTTg" association="_Z5gtgbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z3vL4bEXEeeP95al6XTTTg" name="beginningTarget" visibility="private" type="_ZqYsYLEXEeeP95al6XTTTg" association="_Z5h7obEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3vL4rEXEeeP95al6XTTTg" value="new DecoratorSeqList()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z3vy8LEXEeeP95al6XTTTg" name="jumpTargetStack" visibility="private" type="_Z210ALEXEeeP95al6XTTTg" association="_Z5iisbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3waAbEXEeeP95al6XTTTg" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z3waA7EXEeeP95al6XTTTg" name="jumpSecondRepeatStack" visibility="private" type="_Z210ALEXEeeP95al6XTTTg" association="_Z5jJwbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3xoIbEXEeeP95al6XTTTg" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z3yPMbEXEeeP95al6XTTTg" name="makeSeqListAlgo" visibility="private" type="_Zr_18LEXEeeP95al6XTTTg" association="_Z5jw0bEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3yPMrEXEeeP95al6XTTTg" value="new ATokVisitor(new ITokVisitorCmd() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Default behavior is to ignore any unrecognized tokens by merely proceeding to the next one.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unhandled Token: &quot; + host);&#xD;&#xA;&#x9;&#x9;&#x9;return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}) {&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z3y2QbEXEeeP95al6XTTTg" name="isGrace" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3y2QrEXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z3zdULEXEeeP95al6XTTTg" name="grace_multiplier" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3zdUbEXEeeP95al6XTTTg" value="0.2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z3zdU7EXEeeP95al6XTTTg" name="graceDuration" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3zdVLEXEeeP95al6XTTTg" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z30EYbEXEeeP95al6XTTTg" name="dottedCorrection" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z30EYrEXEeeP95al6XTTTg" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z30rcbEXEeeP95al6XTTTg" name="checkNextNoteAlgo" visibility="private" type="_Zr_18LEXEeeP95al6XTTTg" association="_Z5kX4bEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z30rcrEXEeeP95al6XTTTg" value="new ATokVisitor(&#xD;&#xA;&#x9;&#x9;&#x9;new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No dotted modification detected.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;abcT.putBack(host); // put token back to be reprocessed&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// later&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = 0.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return params[0]; // return duration unchanged.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;}) {&#xD;&#xA;&#x9;&#x9;// Initializer block for internal visitor&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;&lt;&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is halved, the next dotted&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0] / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;>&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is dotted, the next note halved&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = -duration / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;duration -= dottedCorrection;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z31SgLEXEeeP95al6XTTTg" name="accidentalNotes" visibility="private" type="_ZrEo4LEXEeeP95al6XTTTg" association="_Z5lmALEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z31SgbEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z31SgrEXEeeP95al6XTTTg" value="new HashSet&lt;Note>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4k5Y7EXEeeP95al6XTTTg" name="popJumpTarget" specification="_ZqAR4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4k5ZLEXEeeP95al6XTTTg" type="_ZqYsYLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (jumpTargetStack.isEmpty())&#xD;
			return beginningTarget;&#xD;
		else&#xD;
			return jumpTargetStack.pop();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4lgcLEXEeeP95al6XTTTg" name="pushJumpTarget" specification="_Z1Jx8bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4lgcbEXEeeP95al6XTTTg" name="target" type="_ZqYsYLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>jumpTargetStack.push(target);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4lgcrEXEeeP95al6XTTTg" name="ABCParser" specification="_ZqCHELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4lgc7EXEeeP95al6XTTTg" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4lgdLEXEeeP95al6XTTTg" type="_Zp_DwLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			abcT = new ABCTokenizer(inputFileName);&#xD;
&#xD;
			// ------ EOF -----------------------------------------------------&#xD;
			ITokVisitorCmd eofCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					return MTSeqList.Singleton;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Note -----------------------------------------------------&#xD;
			ITokVisitorCmd noteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note note = makeNote(host);&#xD;
					System.out.println(&quot;Note parsed: &quot; + note);&#xD;
&#xD;
					return new NESeqList(note, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Header-------------------------------------------&#xD;
			// Same command for all headers&#xD;
			ITokVisitorCmd headerCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Header header = new Header(id, host.getLexeme());&#xD;
					System.out.println(&quot;Header parsed: &quot; + header);&#xD;
					return new NESeqList(header, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Chord----------------------------------------------&#xD;
			ITokVisitorCmd chordStartCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeChordAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.chordCmd: Non-Note token encountered:&quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Note note = makeNote(host);&#xD;
								System.out&#xD;
										.println(&quot;Chord parsed Note: &quot; + note);&#xD;
								((Vector&lt;Note>) params[0]).add(note);&#xD;
								return abcT.getNextToken().execute(&#xD;
										makeChordAlgo, params);&#xD;
							}&#xD;
						});&#xD;
&#xD;
						this.addCmd(&quot;]&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Vector&lt;Note> vNotes = (Vector&lt;Note>) params[0];&#xD;
								Note[] result = new Note[vNotes.size()];&#xD;
								for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
									result[i] = vNotes.get(i);&#xD;
								return result;&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeChordAlgo, new Vector&lt;Note>());&#xD;
					Chord chord = new Chord(notes);&#xD;
					System.out.println(&quot;Chord parsed: &quot; + chord);&#xD;
					return new NESeqList(chord, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note Start---------------------------------------&#xD;
			ITokVisitorCmd graceStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace Start parsed.&quot;);&#xD;
					isGrace = true; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note End--------------------------------------------&#xD;
			ITokVisitorCmd graceEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace End parsed.&quot;);&#xD;
					isGrace = false; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Tuplet----------------------------------------------&#xD;
			ITokVisitorCmd tupletCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeTupletAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.tupletCmd: Non-Note token encountered: &quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								int count = (Integer) params[0];&#xD;
								Vector&lt;Note> vNotes = ((Vector&lt;Note>) params[1]);&#xD;
&#xD;
								Note note = makeNote(host);&#xD;
								System.out.println(&quot;Tuplet parsed Note: &quot;&#xD;
										+ note + &quot; count = &quot; + count);&#xD;
								vNotes.add(note);&#xD;
&#xD;
								if (1 == count) {&#xD;
									Note[] result = new Note[vNotes.size()];&#xD;
									for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
										result[i] = vNotes.get(i);&#xD;
									return result;&#xD;
								} else {&#xD;
									return abcT.getNextToken().execute(&#xD;
											makeTupletAlgo, --count, vNotes);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					int nNotes = Integer.parseInt(host.getLexeme());&#xD;
&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeTupletAlgo, nNotes, new Vector&lt;Note>());&#xD;
&#xD;
					NoteCollection result;&#xD;
&#xD;
					if (3 == nNotes) {&#xD;
						result = new Triplet(notes[0], notes[1], notes[2]);&#xD;
					} else {&#xD;
						result = new Tuplet(notes);&#xD;
					}&#xD;
					System.out.println(&quot;Tuplet parsed: &quot; + result);&#xD;
					return new NESeqList(result, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Measure bar --------------------------------------------&#xD;
			ITokVisitorCmd measureBarCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					accidentalNotes.clear(); // clear any accidentals&#xD;
					System.out&#xD;
							.println(&quot;Measure bar parsed.  Accidental Notes cleared.&quot;);&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat Start -----------------------------------------&#xD;
			ITokVisitorCmd repeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList repeatStart = new DecoratorSeqList();&#xD;
					pushJumpTarget(repeatStart);&#xD;
					System.out.println(&quot;Repeat Start parsed&quot;);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					repeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat End -----------------------------------------&#xD;
			ITokVisitorCmd repeatEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					ISeqList jumpTarget = popJumpTarget();&#xD;
					System.out.println(&quot;Repeat End parsed&quot;);&#xD;
					if (jumpSecondRepeatStack.isEmpty()) {&#xD;
						return new ToggleDecoratorSeqList(jumpTarget,&#xD;
								(ISeqList) abcT.getNextToken().execute(&#xD;
										makeSeqListAlgo, params));&#xD;
					} else {&#xD;
						abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
						return jumpTarget;&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ First Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd firstRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = new DecoratorSeqList();&#xD;
					jumpSecondRepeatStack.push(secondRepeatStart);&#xD;
					System.out&#xD;
							.println(&quot;First Repeat Start parsed.  ID = &quot; + id);&#xD;
					return new ToggleDecoratorSeqList((ISeqList) abcT&#xD;
							.getNextToken().execute(makeSeqListAlgo, params),&#xD;
							secondRepeatStart);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Second Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd secondRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out.println(&quot;Second Repeat Start parsed.  ID = &quot;&#xD;
							+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Alt. Second Repeat Start Repeat --------------------------&#xD;
			/**&#xD;
			 * This covers the &quot;:|2&quot; token which includes the repeat.&#xD;
			 */&#xD;
			ITokVisitorCmd secondRepeatStartAltCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out&#xD;
							.println(&quot;Second Repeat Start Alt. parsed.  ID = &quot;&#xD;
									+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return popJumpTarget();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Quote processing --------------------------&#xD;
			ITokVisitorCmd quoteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				FineToggleDecoratorSeqList fineToggle = new FineToggleDecoratorSeqList();&#xD;
&#xD;
				boolean isSwapped = false;&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					if (host.getLexeme().equals(&quot;_fine&quot;)) {&#xD;
&#xD;
						System.out.println(&quot;\&quot;_fine\&quot; parsed&quot;);&#xD;
						fineToggle.setDecoree(0, (ISeqList) abcT.getNextToken()&#xD;
								.execute(makeSeqListAlgo, params));&#xD;
						return fineToggle;&#xD;
					} else if (host.getLexeme().equals(&quot;_D.C al Fine&quot;)) {&#xD;
						if (isSwapped) {&#xD;
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed&quot;);&#xD;
							return new ISeqList() {&#xD;
&#xD;
								@Override&#xD;
								public Object execute(IPhraseVisitor algo,&#xD;
										Object... params) {&#xD;
									fineToggle.setFine();&#xD;
									return beginningTarget&#xD;
											.execute(algo, params);&#xD;
								}&#xD;
							};&#xD;
						} else {&#xD;
							isSwapped = true;&#xD;
							System.out&#xD;
									.println(&quot;\&quot;_D.C al Fine\&quot; parsed, but swapped for next token.&quot;);&#xD;
							return swapToken(host).execute(makeSeqListAlgo,&#xD;
									params);&#xD;
						}&#xD;
					} else {&#xD;
						System.out.println(&quot;Quote parsed - ignored&quot;);&#xD;
						return abcT.getNextToken().execute(makeSeqListAlgo,&#xD;
								params);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ---- Add Commands to Visitor------------------------------&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;EOF&quot;, eofCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Note&quot;, noteCmd);&#xD;
&#xD;
			String headers = &quot;ABCDEFGHIKLMNOPQRSTWXZ&quot;;&#xD;
			for (int i = 0; i &lt; headers.length(); i++) {&#xD;
				makeSeqListAlgo.addCmd(&quot;&quot; + headers.charAt(i), headerCmd);&#xD;
			}&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;[&quot;, chordStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;{&quot;, graceStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;}&quot;, graceEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Tuplet&quot;, tupletCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|&quot;, measureBarCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|:&quot;, repeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|&quot;, repeatEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|2&quot;, secondRepeatStartAltCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Quote&quot;, quoteCmd);&#xD;
		} catch (Exception e) {&#xD;
			System.err.println(&quot;ABCParser constructor exception: &quot; + e);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4lgdbEXEeeP95al6XTTTg" name="parse" specification="_ZqCuILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4lgdrEXEeeP95al6XTTTg" type="_ZqpyILEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>ISeqList beginning = (ISeqList) abcT.getNextToken().execute(&#xD;
				makeSeqListAlgo, MTSeqList.Singleton);&#xD;
		beginningTarget.setDecoree(beginning);&#xD;
		return beginning;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4mHgLEXEeeP95al6XTTTg" name="makeNote" specification="_Z1KZAbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4mHgbEXEeeP95al6XTTTg" name="host" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4mHgrEXEeeP95al6XTTTg" type="_ZrEo4LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>char name = 'C';&#xD;
		int octave = 0;&#xD;
		int accidental = 0;&#xD;
		double duration = 1.0;&#xD;
		boolean isNatural = false;&#xD;
&#xD;
		String lex = host.getLexeme();&#xD;
&#xD;
		// get accidental value&#xD;
		int i = 0;&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isLetter(lex.charAt(i))) {&#xD;
				break;&#xD;
			}&#xD;
			if (lex.charAt(i) == '^') {&#xD;
				accidental += +1;&#xD;
			} else if (lex.charAt(i) == '_') {&#xD;
				accidental += -1;&#xD;
			} else if (lex.charAt(i) == '=') {&#xD;
				isNatural = true;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (Character.isLowerCase(lex.charAt(i))) {&#xD;
			octave++;&#xD;
		}&#xD;
		name = Character.toUpperCase(lex.charAt(i));&#xD;
		i++;&#xD;
&#xD;
		// get octave value&#xD;
&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isDigit(lex.charAt(i)) || '/' == lex.charAt(i)) {&#xD;
				break;&#xD;
			}&#xD;
			if ('\'' == lex.charAt(i))&#xD;
				octave += +1;&#xD;
			else if (',' == lex.charAt(i))&#xD;
				octave += -1;&#xD;
		}&#xD;
&#xD;
		if (i &lt; lex.length()) {&#xD;
			if (Character.isDigit(lex.charAt(i))) {&#xD;
				int idx = lex.substring(i).indexOf('/');&#xD;
				if (-1 == idx) {&#xD;
					duration = Double.parseDouble(lex.substring(i));&#xD;
				} else if (lex.length() > i + idx + 1) {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx))&#xD;
							/ Double.parseDouble(lex.substring(i + idx + 1));&#xD;
				} else {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx)) / 2.0;&#xD;
				}&#xD;
			} else {&#xD;
				i++;&#xD;
				if (i &lt; lex.length()) {&#xD;
					duration /= Double.parseDouble(lex.substring(i));&#xD;
				} else {&#xD;
					duration /= 2.0; // Slash w/o number is divide by two.&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (isGrace) {&#xD;
			duration *= grace_multiplier;&#xD;
			graceDuration += duration; // sum the duration of the grace notes&#xD;
		} else if (graceDuration > 0.0) {&#xD;
			// Correct the length of the current note to get it back on beat.&#xD;
			duration -= graceDuration;&#xD;
			graceDuration = 0.0;&#xD;
		}&#xD;
&#xD;
		if (dottedCorrection != 0.0) {&#xD;
			duration += dottedCorrection;&#xD;
			dottedCorrection = 0.0;&#xD;
		}&#xD;
&#xD;
		duration = (Double) abcT.getNextToken().execute(checkNextNoteAlgo,&#xD;
				duration);&#xD;
&#xD;
		Note note = new Note(name, octave, accidental, duration, isNatural);&#xD;
&#xD;
		if (!isNatural) // naturals always override prior accidentals in measure&#xD;
			checkAccidentals(note);&#xD;
		return note;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4mHg7EXEeeP95al6XTTTg" name="checkAccidentals" specification="_Z1LAEbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4mHhLEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				System.out&#xD;
						.println(note&#xD;
								+ &quot; found in accidentals.  Overriding accidentals and isNatural to &quot;&#xD;
								+ n);&#xD;
				note.setAccidental(n.getAccidental());&#xD;
				note.setIsNatural(n.getIsNatural()); // this will override&#xD;
														// accidentals if true&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		if (note.getAccidental() != 0 || note.getIsNatural()) {&#xD;
			addAccidental(note);&#xD;
		}&#xD;
		return;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4mHhbEXEeeP95al6XTTTg" name="addAccidental" specification="_Z1LnILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4mHhrEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>removeAccidental(note); // remove anything like this note&#xD;
		accidentalNotes.add(note); // put this specific note in&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4mHh7EXEeeP95al6XTTTg" name="removeAccidental" specification="_Z1LnIrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4mHiLEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				accidentalNotes.remove(n);&#xD;
				// Check all notes, just to be safe&#xD;
			}&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4mukLEXEeeP95al6XTTTg" name="swapToken" specification="_Z1MOMbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4mukbEXEeeP95al6XTTTg" name="t" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4mukrEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>Token next = abcT.getNextToken();&#xD;
		abcT.putBack(t);&#xD;
		return next;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZqAR4LEXEeeP95al6XTTTg" name="popJumpTarget" visibility="private" method="_Z4k5Y7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z4_wKbEXEeeP95al6XTTTg">
              <body>Pull off the current jump target from the jump target stack. If the stack&#xD;
	 * is empty, return the proxy for the beginning of the phrase, as this is&#xD;
	 * the default jump target.&#xD;
	 * &#xD;
	 * @return The current jump target or the beginning of the phrase.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1Jx8LEXEeeP95al6XTTTg" type="_ZqYsYLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZqCHELEXEeeP95al6XTTTg" name="ABCParser" method="_Z4lgcrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_ZqCHErEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZqCHE7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z4_wK7EXEeeP95al6XTTTg">
              <body>Constructs a parser for the given ABC input file.   Does not actually run that parser yet.&#xD;
	 * Prints error message to System.err if there is a problem opening the given file.   The returned &#xD;
	 * parser will be null in the event of an error.&#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZqCHEbEXEeeP95al6XTTTg" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZqCHFLEXEeeP95al6XTTTg" type="_Zp_DwLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZqCuILEXEeeP95al6XTTTg" name="parse" method="_Z4lgdbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5AXMLEXEeeP95al6XTTTg">
              <body>&#xD;
	 * Run the parser and parse the entire file, returning an IPhrase object that represents the entire piece of music.&#xD;
	 * &#xD;
	 * @return An IPhrase object</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1KZALEXEeeP95al6XTTTg" type="_ZqpyILEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1Jx8bEXEeeP95al6XTTTg" name="pushJumpTarget" visibility="private" method="_Z4lgcLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z4_wKrEXEeeP95al6XTTTg">
              <body>Push the given jump target onto the stack so that it is now the current&#xD;
	 * jump target. This corresponds to the innermost nested repeat.&#xD;
	 * &#xD;
	 * @param target&#xD;
	 *            The new current jump target.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1Jx8rEXEeeP95al6XTTTg" name="target" type="_ZqYsYLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1KZAbEXEeeP95al6XTTTg" name="makeNote" visibility="private" method="_Z4mHgLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5AXMbEXEeeP95al6XTTTg">
              <body>Parse a Note from the given Token&#xD;
	 * &#xD;
	 * @param host&#xD;
	 *            The Note token&#xD;
	 * @return A Note object</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1KZArEXEeeP95al6XTTTg" name="host" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1LAELEXEeeP95al6XTTTg" type="_ZrEo4LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1LAEbEXEeeP95al6XTTTg" name="checkAccidentals" visibility="private" method="_Z4mHg7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5AXMrEXEeeP95al6XTTTg">
              <body>Checks to see if the given Note is in the set of accidentals Checks name&#xD;
	 * and octave but not duration or accidental&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            The note to check</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1LAErEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1LnILEXEeeP95al6XTTTg" name="addAccidental" visibility="private" method="_Z4mHhbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5AXM7EXEeeP95al6XTTTg">
              <body>Adds a note to the set of accidentals replaces any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the Note to add.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1LnIbEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1LnIrEXEeeP95al6XTTTg" name="removeAccidental" visibility="private" method="_Z4mHh7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5AXNLEXEeeP95al6XTTTg">
              <body>Removes a note from the set of accidentals Removes any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the note to remove</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1MOMLEXEeeP95al6XTTTg" name="note" type="_ZrEo4LEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1MOMbEXEeeP95al6XTTTg" name="swapToken" visibility="private" method="_Z4mukLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5AXNbEXEeeP95al6XTTTg">
              <body>Swap the given token for the next token in the tokenizer, returning the&#xD;
	 * next token. The given token will be the next token out of the tokenizer.&#xD;
	 * &#xD;
	 * @param t The token to be swapped into the tokenizer&#xD;
	 * @return the token that previously was next in the tokenizer.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1MOMrEXEeeP95al6XTTTg" name="t" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1MOM7EXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5gtgbEXEeeP95al6XTTTg" name="" memberEnd="_Z5gtgrEXEeeP95al6XTTTg _Z3uk0LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5gtgrEXEeeP95al6XTTTg" name="" type="_Zp_DwLEXEeeP95al6XTTTg" association="_Z5gtgbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5h7obEXEeeP95al6XTTTg" name="" memberEnd="_Z5h7orEXEeeP95al6XTTTg _Z3vL4bEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5h7orEXEeeP95al6XTTTg" name="" type="_Zp_DwLEXEeeP95al6XTTTg" association="_Z5h7obEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5iisbEXEeeP95al6XTTTg" name="" memberEnd="_Z5iisrEXEeeP95al6XTTTg _Z3vy8LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5iisrEXEeeP95al6XTTTg" name="" type="_Zp_DwLEXEeeP95al6XTTTg" association="_Z5iisbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5jJwbEXEeeP95al6XTTTg" name="" memberEnd="_Z5jJwrEXEeeP95al6XTTTg _Z3waA7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5jJwrEXEeeP95al6XTTTg" name="" type="_Zp_DwLEXEeeP95al6XTTTg" association="_Z5jJwbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5jw0bEXEeeP95al6XTTTg" name="" memberEnd="_Z5jw0rEXEeeP95al6XTTTg _Z3yPMbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5jw0rEXEeeP95al6XTTTg" name="" type="_Zp_DwLEXEeeP95al6XTTTg" association="_Z5jw0bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5kX4bEXEeeP95al6XTTTg" name="" memberEnd="_Z5kX4rEXEeeP95al6XTTTg _Z30rcbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5kX4rEXEeeP95al6XTTTg" name="" type="_Zp_DwLEXEeeP95al6XTTTg" association="_Z5kX4bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5lmALEXEeeP95al6XTTTg" name="" memberEnd="_Z5lmAbEXEeeP95al6XTTTg _Z31SgLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5lmAbEXEeeP95al6XTTTg" name="" type="_Zp_DwLEXEeeP95al6XTTTg" association="_Z5lmALEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZlzHUbEXEeeP95al6XTTTg" name="music">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZlzuYLEXEeeP95al6XTTTg" name="visitor">
          <packagedElement xmi:type="uml:Class" xmi:id="_ZrgGsLEXEeeP95al6XTTTg" name="playerAlgo">
            <generalization xmi:id="_Z14xwLEXEeeP95al6XTTTg" general="_ZqOUULEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_Z4A4sLEXEeeP95al6XTTTg" name="key_signature" visibility="private" type="_ZsrycbEXEeeP95al6XTTTg" association="_Z5sTsbEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_Z4A4srEXEeeP95al6XTTTg" name="sp" visibility="private" type="_ZrxzgLEXEeeP95al6XTTTg" association="_Z5s6wbEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4xGorEXEeeP95al6XTTTg" name="playerAlgo" specification="_ZrhU0LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z4xGo7EXEeeP95al6XTTTg" type="_ZrgGsLEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>String headerString = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
		for (int i = 0; i &lt; headerString.length(); i++) {
			this.addCmd(&quot;&quot; + headerString.charAt(i), new IPhraseVisitorCmd() {
				public Object apply(String id, IPhrase host, Object... params) {
					return params[1];				
				}
			});
		}
		
		
		this.addCmd(&quot;L&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				sp = (SequencePlayer2)params[0];
				double defaultLengthPerNote = ABCUtil.Singleton.parseFraction(head.getValue());
				double ticks = 64 * defaultLengthPerNote;
				sp.setTicksPerDefaultNote((int)ticks);
				return params[1];
			}
		});
		

		this.addCmd(&quot;K&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				key_signature = new KeySignature(head.getValue());
				return params[1];
			}
		});
		
		
		this.addCmd(&quot;Q&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				sp = (SequencePlayer2)params[0];
				double tempo = ABCUtil.Singleton.parseTempo(head.getValue(), 1.0 * sp.getTicksPerQuarterNote()/sp.getTicksPerDefaultNote());
				sp.setTempo((int)tempo);
				return params[1];
			}
		});
		
		
		this.addCmd(Chord.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Chord chord = (Chord)host;
				sp = (SequencePlayer2)params[0];
				int param = (int)params[1];
				for(Note temp_note: chord.getNotes()) {
					param = (int)temp_note.execute(playerAlgo.this, params);
				}
				return param;
			}
		});
		
		this.addCmd(Triplet.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Triplet triplet = (Triplet)host;
				sp = (SequencePlayer2)params[0];
				int param = (int)params[1];
				for(Note temp_note: triplet.getNotes()) {
					temp_note.setDuration(temp_note.getDuration() * 2.0 / 3);
					param = (int)temp_note.execute(playerAlgo.this, params);
				}
				return param;
			}
		});
		
		
		this.addCmd(Note.ID, new IPhraseVisitorCmd() {
			
			public Object apply(String id, IPhrase host, Object... params){
				sp = (SequencePlayer2)params[0];
				Note note = (Note)host;
				if(key_signature != null) {
					note = key_signature.adjust(note);
				}
				return sp.addNote(note, (int)params[1]);
			}
		});
		
		this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				NESeqList ne_list = (NESeqList)host;
				int param = (int) ne_list.getFirst().execute(playerAlgo.this, params);
				return ne_list.getRest().execute(playerAlgo.this, params[0], param);
			}				
		});

		this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				return params[1];
			}				
		});

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ZrhU0LEXEeeP95al6XTTTg" name="playerAlgo" method="_Z4xGorEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_ZrhU0bEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Zrh74LEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Zrh74bEXEeeP95al6XTTTg" type="_ZrgGsLEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ZrjKALEXEeeP95al6XTTTg" name="toStringAlgo">
            <generalization xmi:id="_Z15Y0LEXEeeP95al6XTTTg" general="_ZqOUULEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4xGpLEXEeeP95al6XTTTg" name="toStringAlgo" specification="_ZrkYILEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z4xGpbEXEeeP95al6XTTTg" type="_ZrjKALEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				NESeqList ne_list = (NESeqList) host;
				NESeqList.setToStringAlgo(toStringAlgo.this);
				return ne_list.getRest().execute(NESeqList.getToStringAlgo(), params[0]+&quot;,&quot;+ne_list.getFirst());
			}
		});
		
		
		this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				return params[0]+&quot;}&quot;;
			}
		});
		

		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ZrkYILEXEeeP95al6XTTTg" name="toStringAlgo" method="_Z4xGpLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_ZrkYIbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_ZrkYIrEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_ZrkYI7EXEeeP95al6XTTTg" type="_ZrjKALEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Z5sTsbEXEeeP95al6XTTTg" name="" memberEnd="_Z5sTsrEXEeeP95al6XTTTg _Z4A4sLEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_Z5sTsrEXEeeP95al6XTTTg" name="" type="_ZrgGsLEXEeeP95al6XTTTg" association="_Z5sTsbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Z5s6wbEXEeeP95al6XTTTg" name="" memberEnd="_Z5s6wrEXEeeP95al6XTTTg _Z4A4srEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_Z5s6wrEXEeeP95al6XTTTg" name="" type="_ZrgGsLEXEeeP95al6XTTTg" association="_Z5s6wbEXEeeP95al6XTTTg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqOUULEXEeeP95al6XTTTg" name="APhraseVisitor" isAbstract="true">
          <ownedComment xmi:id="_Z5AXNrEXEeeP95al6XTTTg">
            <body>Command-based implementation of IPhraseVisitor that uses IPhraseVisitorCmds stored in a hash table.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z32goLEXEeeP95al6XTTTg" name="defaultCmd" visibility="private" type="_Zqs1cLEXEeeP95al6XTTTg" association="_Z5mNEbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z33HsLEXEeeP95al6XTTTg" name="cmds" visibility="private" type="_Zqs1cLEXEeeP95al6XTTTg" association="_Z5m0IbEXEeeP95al6XTTTg">
            <qualifier xmi:id="_Z33uwLEXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z33HsbEXEeeP95al6XTTTg" value="new Hashtable&lt;String, IPhraseVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z1UKALEXEeeP95al6XTTTg" client="_ZqOUULEXEeeP95al6XTTTg" supplier="_ZqrnULEXEeeP95al6XTTTg" contract="_ZqrnULEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4muk7EXEeeP95al6XTTTg" name="APhraseVisitor" specification="_ZqPicLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4mulLEXEeeP95al6XTTTg" type="_ZqOUULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new IPhraseVisitorCmd() {&#xD;
			public Object apply(String idx, IPhrase host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;APhraseVisitor: Unknown index encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4nVoLEXEeeP95al6XTTTg" name="APhraseVisitor" specification="_Z1VYILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4nVobEXEeeP95al6XTTTg" name="defaultCmd" type="_Zqs1cLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4nVorEXEeeP95al6XTTTg" type="_ZqOUULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4nVo7EXEeeP95al6XTTTg" name="caseAt" specification="_Z25eYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4nVpLEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4nVpbEXEeeP95al6XTTTg" name="host" type="_ZqpyILEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4nVprEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4nVp7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4nVqLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4nVqbEXEeeP95al6XTTTg" name="addCmd" specification="_Z1WmQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4nVqrEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4nVq7EXEeeP95al6XTTTg" name="cmd" type="_Zqs1cLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZqPicLEXEeeP95al6XTTTg" name="APhraseVisitor" method="_Z4muk7EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_ZqPicbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZqPicrEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5AXN7EXEeeP95al6XTTTg">
              <body>Constructor that installs a default cmd that throws an IllegalArgumentException on any unknown host.</body>
            </ownedComment>
            <ownedComment xmi:id="_Z5AXOLEXEeeP95al6XTTTg">
              <body>Abstract extended visitor implementation that uses a dictionary of commands to associate commands with host IDs.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZqPic7EXEeeP95al6XTTTg" type="_ZqOUULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1VYILEXEeeP95al6XTTTg" name="APhraseVisitor" method="_Z4nVoLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z1VYIrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z1V_MLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5AXObEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to the supplied cmd.&#xD;
	 * @param defaultCmd   the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1VYIbEXEeeP95al6XTTTg" name="defaultCmd" type="_Zqs1cLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1V_MbEXEeeP95al6XTTTg" type="_ZqOUULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1WmQLEXEeeP95al6XTTTg" name="addCmd" method="_Z4nVqbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5A-QLEXEeeP95al6XTTTg">
              <body>Add the given command to the dictionary, associated with the given id value.&#xD;
	 * @param id The id of the host that will use this command&#xD;
	 * @param cmd The command that will be run when the host calls for it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1WmQbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z1WmQrEXEeeP95al6XTTTg" name="cmd" type="_Zqs1cLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z25eYLEXEeeP95al6XTTTg" name="caseAt" method="_Z4nVo7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z25eYbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z25eYrEXEeeP95al6XTTTg" name="host" type="_ZqpyILEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z25eY7EXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z26FcrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z26FcLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqVCALEXEeeP95al6XTTTg" name="Chord">
          <ownedComment xmi:id="_Z5A-QbEXEeeP95al6XTTTg">
            <body>A collection of notes that make up a Chord.  All of the notes should&#xD;
be played simultaneously.   The last note defines the length of all the notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5A-QrEXEeeP95al6XTTTg">
            <body>A collection of Notes all played at once</body>
          </ownedComment>
          <generalization xmi:id="_Z1aQoLEXEeeP95al6XTTTg" general="_ZrNLwLEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z33uwbEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z33uwrEXEeeP95al6XTTTg" value="&quot;Chord&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4n8sLEXEeeP95al6XTTTg" name="Chord" specification="_Z1YbcLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4n8sbEXEeeP95al6XTTTg" name="notes" type="_ZrEo4LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4n8srEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4n8s7EXEeeP95al6XTTTg" type="_ZqVCALEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4n8tLEXEeeP95al6XTTTg" name="execute" specification="_Z27TkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4n8tbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4n8trEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4n8t7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4n8uLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4ojwLEXEeeP95al6XTTTg" name="toString" specification="_ZqWQILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4ojwbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Chord(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZqWQILEXEeeP95al6XTTTg" name="toString" method="_Z4ojwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_ZqWQIbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1YbcLEXEeeP95al6XTTTg" name="Chord" method="_Z4n8sLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z1ZCgLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z1ZCgbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Z1YbcbEXEeeP95al6XTTTg" name="notes" type="_ZrEo4LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z1ZChLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z1ZCg7EXEeeP95al6XTTTg" type="_ZqVCALEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z27TkLEXEeeP95al6XTTTg" name="execute" method="_Z4n8tLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z27TkbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z27TkrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z276obEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z27Tk7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqYsYLEXEeeP95al6XTTTg" name="DecoratorSeqList">
          <ownedComment xmi:id="_Z5A-Q7EXEeeP95al6XTTTg">
            <body>An ISeqList that transparently routes the visitor execution to its decoree.  &#xD;
This class is primarily used to provide a placeholder when a the music should flow &#xD;
to a specific point in the sequence but that point has not yet been calculated, as occurs&#xD;
for instance, during the processing of repeats.    When that target point is finally calculated, &#xD;
the decoree can be set and the decorated target will behave identically to the target.&#xD;
This decorator can also be used to dynamically change the flow of the music by changing the target.  &#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5A-RLEXEeeP95al6XTTTg">
            <body>Decorated ISeqList used as a transparent proxy placeholder.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z34V0LEXEeeP95al6XTTTg" name="decoree" visibility="private" type="_ZquqoLEXEeeP95al6XTTTg" association="_Z5nbMbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z34V0bEXEeeP95al6XTTTg" value="MTSeqList.Singleton"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z1a3sLEXEeeP95al6XTTTg" client="_ZqYsYLEXEeeP95al6XTTTg" supplier="_ZquqoLEXEeeP95al6XTTTg" contract="_ZquqoLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4ojwrEXEeeP95al6XTTTg" name="DecoratorSeqList" specification="_Z1bewLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4ojw7EXEeeP95al6XTTTg" name="decoree" type="_ZquqoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4ojxLEXEeeP95al6XTTTg" type="_ZqYsYLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setDecoree(decoree);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4ojxbEXEeeP95al6XTTTg" name="setDecoree" specification="_Z1cF0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4ojxrEXEeeP95al6XTTTg" name="decoree" type="_ZquqoLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>this.decoree = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4pK0LEXEeeP95al6XTTTg" name="execute" specification="_Z29IwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4pK0bEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4pK0rEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4pK07EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4pK1LEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return decoree.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZqahkLEXEeeP95al6XTTTg" name="DecoratorSeqList">
            <eAnnotations xmi:id="_ZqbIoLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZqbIobEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ZqbIo7EXEeeP95al6XTTTg" type="_ZqYsYLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1bewLEXEeeP95al6XTTTg" name="DecoratorSeqList" method="_Z4ojwrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z1bewrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z1bew7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5A-RbEXEeeP95al6XTTTg">
              <body>Constructor used to set the decoree to a known value at construction time.&#xD;
	 * @param decoree The decoree phrase sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1bewbEXEeeP95al6XTTTg" name="decoree" type="_ZquqoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1bexLEXEeeP95al6XTTTg" type="_ZqYsYLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1cF0LEXEeeP95al6XTTTg" name="setDecoree" method="_Z4ojxbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5A-RrEXEeeP95al6XTTTg">
              <body>Setter methods used to set the decoree.&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1cF0bEXEeeP95al6XTTTg" name="decoree" type="_ZquqoLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z29IwLEXEeeP95al6XTTTg" name="execute" method="_Z4pK0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z29IwbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z29IwrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z29v0bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z29Iw7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqeL8LEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList">
          <ownedComment xmi:id="_Z5A-R7EXEeeP95al6XTTTg">
            <body>The class is used to implement &quot;Da Capo al fine&quot; or &quot;D.C. al fine&quot;, &#xD;
which is to repeat from the beginning up to the &quot;fine&quot; marker.&#xD;
&#xD;
this class assumes that only two target decorees are ever used.&#xD;
&#xD;
The is ToggleDecoratorSeqList that can be signaled to switch to the &#xD;
another target.   Be default, the target decoree (#0) remains the same even &#xD;
when it is accessed.  But after setFine() is called, the target decoree&#xD;
is switched to the #1 decoree (the &quot;fine&quot; target, usually an MTSeqList because&#xD;
it is the end of the piece).   After the #1 decoree is used, the target&#xD;
decoree is advanced to the next available decoree, which , for two decorees, &#xD;
would be back to the #0 decoree.  The class returns to default behavior then.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5A-SLEXEeeP95al6XTTTg">
            <body>ToggleDecoratorSeqList with controllable cycling</body>
          </ownedComment>
          <generalization xmi:id="_Z1fJILEXEeeP95al6XTTTg" general="_ZrQ2ILEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z34V07EXEeeP95al6XTTTg" name="isFine" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3484LEXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4pK1bEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" specification="_ZqezALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4pK1rEXEeeP95al6XTTTg" type="_ZqeL8LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4pK17EXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" specification="_Z1d7ALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4pK2LEXEeeP95al6XTTTg" name="decorees" type="_ZquqoLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4pK2bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4pK2rEXEeeP95al6XTTTg" type="_ZqeL8LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(decorees);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4px4LEXEeeP95al6XTTTg" name="setFine" specification="_ZqfaELEXEeeP95al6XTTTg">
            <language>java</language>
            <body>this.isFine = true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4px4bEXEeeP95al6XTTTg" name="execute" specification="_Z2-98LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4px4rEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4px47EXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4px5LEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4px5bEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (isFine) {&#xD;
			isFine = false;&#xD;
			this.setTargetToDecoree(1);&#xD;
			return super.execute(algo, params);&#xD;
		} else&#xD;
			return getTargetDecoree().execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4px5rEXEeeP95al6XTTTg" name="toString" specification="_ZqgBILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4px57EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZqezALEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" method="_Z4pK1bEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_ZqezAbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZqezArEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5A-SbEXEeeP95al6XTTTg">
              <body>Instantiates the class with two MTSeqList decorees.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZqezA7EXEeeP95al6XTTTg" type="_ZqeL8LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZqfaELEXEeeP95al6XTTTg" name="setFine" method="_Z4px4LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5A-SrEXEeeP95al6XTTTg">
              <body>Sets the system to use the &quot;fine&quot; decorator at the next execution.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_ZqgBILEXEeeP95al6XTTTg" name="toString" method="_Z4px5rEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_ZqgoMLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1d7ALEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" method="_Z4pK17EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z1d7ArEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z1d7A7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Z1d7AbEXEeeP95al6XTTTg" name="decorees" type="_ZquqoLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z1eiErEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z1eiEbEXEeeP95al6XTTTg" type="_ZqeL8LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z2-98LEXEeeP95al6XTTTg" name="execute" method="_Z4px4bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z2-98bEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z2-98rEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z2_lArEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2_lALEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqkSkLEXEeeP95al6XTTTg" name="Header">
          <ownedComment xmi:id="_Z5BlULEXEeeP95al6XTTTg">
            <body>An abc Header.  Headers are identified by a one character &quot;id&quot; and&#xD;
can have an arbitrary string value. &lt;br/>&#xD;
Note that this class represents many different *types* of headers, &#xD;
each with its own id value.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5BlUbEXEeeP95al6XTTTg">
            <body>A single Header class represents multiple, distinct header hosts.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z3484rEXEeeP95al6XTTTg" name="_id" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z35j8bEXEeeP95al6XTTTg" name="_value" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z1gXQLEXEeeP95al6XTTTg" client="_ZqkSkLEXEeeP95al6XTTTg" supplier="_ZqpyILEXEeeP95al6XTTTg" contract="_ZqpyILEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4qY8LEXEeeP95al6XTTTg" name="Header" specification="_Zqk5oLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4qY8bEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4qY8rEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4qY87EXEeeP95al6XTTTg" type="_ZqkSkLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>_id = id;&#xD;
		_value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4qY9LEXEeeP95al6XTTTg" name="execute" specification="_Z3AzILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4qY9bEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4qY9rEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4qY97EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4qY-LEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_id, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4qY-bEXEeeP95al6XTTTg" name="getID" specification="_ZqmHwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4qY-rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4rAALEXEeeP95al6XTTTg" name="getValue" specification="_Zqmu0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4rAAbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4rAArEXEeeP95al6XTTTg" name="toString" specification="_ZqnV4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4rAA7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id + &quot;:&quot; + _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Zqk5oLEXEeeP95al6XTTTg" name="Header" method="_Z4qY8LEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_ZqlgsrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Zqlgs7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5BlUrEXEeeP95al6XTTTg">
              <body>Create a header out of an id and value&#xD;
	 * &#xD;
	 * @param id    - one character corresponding to the abc header name&#xD;
	 * @param value - arbitrary string value of the header</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZqlgsLEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZqlgsbEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZqlgtLEXEeeP95al6XTTTg" type="_ZqkSkLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZqmHwLEXEeeP95al6XTTTg" name="getID" method="_Z4qY-bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5BlU7EXEeeP95al6XTTTg">
              <body>Accessor for the id.&#xD;
	 * @return the _id</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZqmHwbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Zqmu0LEXEeeP95al6XTTTg" name="getValue" method="_Z4rAALEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5BlVLEXEeeP95al6XTTTg">
              <body>Accessor for the text value of this header.&#xD;
	 * @return the _value</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zqmu0bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZqnV4LEXEeeP95al6XTTTg" name="toString" method="_Z4rAArEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5BlVbEXEeeP95al6XTTTg">
              <body>String representation of this header: &quot;id: text&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZqnV4bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3AzILEXEeeP95al6XTTTg" name="execute" method="_Z4qY9LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3AzIbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3BaMLEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3CBQbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3BaMbEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZqpLELEXEeeP95al6XTTTg" name="INote">
          <ownedComment xmi:id="_Z5BlVrEXEeeP95al6XTTTg">
            <body>Note interface for Notes and collections of Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5BlV7EXEeeP95al6XTTTg">
            <body>A generalized notion of a note</body>
          </ownedComment>
          <generalization xmi:id="_Z1iMcLEXEeeP95al6XTTTg" general="_ZqpyILEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZqpyILEXEeeP95al6XTTTg" name="IPhrase">
          <ownedComment xmi:id="_Z5BlWLEXEeeP95al6XTTTg">
            <body>Top level of a piece of abc music.  The generalized notion of a playable piece of music.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5CMYLEXEeeP95al6XTTTg">
            <body>Abstract Host&#xD;
Each concrete host calls its associated case on the visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_Z3DPYLEXEeeP95al6XTTTg" name="execute">
            <ownedParameter xmi:id="_Z3DPYbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3DPYrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3D2cbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3DPY7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZqrnULEXEeeP95al6XTTTg" name="IPhraseVisitor">
          <ownedComment xmi:id="_Z5CMYbEXEeeP95al6XTTTg">
            <body>Interface for a Phrase visitor.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5CMYrEXEeeP95al6XTTTg">
            <body>Abstract extended visitor.&#xD;
Supplies case behavior for every host.</body>
          </ownedComment>
          <ownedOperation xmi:id="_Z3D2c7EXEeeP95al6XTTTg" name="caseAt">
            <ownedParameter xmi:id="_Z3EdgLEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3EdgbEXEeeP95al6XTTTg" name="host" type="_ZqpyILEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3EdgrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3EdhbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3Edg7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Zqs1cLEXEeeP95al6XTTTg" name="IPhraseVisitorCmd">
          <ownedComment xmi:id="_Z5CMY7EXEeeP95al6XTTTg">
            <body>The command used by APhraseVisitor that is associated with a host or hosts.&#xD;
@author rixner</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5CMZLEXEeeP95al6XTTTg">
            <body>Abstract command used by APhraseVisitor.  Each command is associated with a particular host(s).</body>
          </ownedComment>
          <ownedOperation xmi:id="_Z3FEkbEXEeeP95al6XTTTg" name="apply">
            <ownedParameter xmi:id="_Z3FEkrEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3FEk7EXEeeP95al6XTTTg" name="host" type="_ZqpyILEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3FElLEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3FrobEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3FElbEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZquqoLEXEeeP95al6XTTTg" name="ISeqList">
          <ownedComment xmi:id="_Z5CMZbEXEeeP95al6XTTTg">
            <body>Interface for sequential lists of IPhrases.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5CMZrEXEeeP95al6XTTTg">
            <body>A list of IPhrases&#xD;
e.g. an ordered sequence of Notes.</body>
          </ownedComment>
          <generalization xmi:id="_Z1kBoLEXEeeP95al6XTTTg" general="_ZqpyILEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqvRsLEXEeeP95al6XTTTg" name="MTSeqList">
          <ownedComment xmi:id="_Z5CMZ7EXEeeP95al6XTTTg">
            <body>An empty sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5CMaLEXEeeP95al6XTTTg">
            <body>An empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z36LALEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z36LAbEXEeeP95al6XTTTg" value="&quot;MTSeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z36LArEXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_ZqvRsLEXEeeP95al6XTTTg" isReadOnly="true" association="_Z5oCQbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z36LA7EXEeeP95al6XTTTg" value="new MTSeqList()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z1kBobEXEeeP95al6XTTTg" client="_ZqvRsLEXEeeP95al6XTTTg" supplier="_ZquqoLEXEeeP95al6XTTTg" contract="_ZquqoLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4rnELEXEeeP95al6XTTTg" name="execute" specification="_Z3GSsLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4rnEbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4rnErEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4rnE7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4rnFLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4rnFbEXEeeP95al6XTTTg" name="toString" specification="_Zqy8ELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4rnFrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;{}&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Zqxt8LEXEeeP95al6XTTTg" name="MTSeqList" visibility="private">
            <eAnnotations xmi:id="_Zqxt8bEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Zqxt8rEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ZqyVAbEXEeeP95al6XTTTg" type="_ZqvRsLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Zqy8ELEXEeeP95al6XTTTg" name="toString" method="_Z4rnFbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Zq0KMLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3GSsLEXEeeP95al6XTTTg" name="execute" method="_Z4rnELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3GSsbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3GSsrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3G5wbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3GSs7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zq4boLEXEeeP95al6XTTTg" name="NESeqList">
          <ownedComment xmi:id="_Z5CMabEXEeeP95al6XTTTg">
            <body>A non-empty (&quot;cons&quot;) sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5CMarEXEeeP95al6XTTTg">
            <body>A non-empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z36yELEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z36yEbEXEeeP95al6XTTTg" value="&quot;NESeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z36yErEXEeeP95al6XTTTg" name="_first" visibility="private" type="_ZqpyILEXEeeP95al6XTTTg" association="_Z5pQYbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z36yFLEXEeeP95al6XTTTg" name="_rest" visibility="private" type="_ZquqoLEXEeeP95al6XTTTg" association="_Z5p3cbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z37ZIbEXEeeP95al6XTTTg" name="_toStringAlgo" visibility="private" isStatic="true" type="_ZqrnULEXEeeP95al6XTTTg" association="_Z5qegbEXEeeP95al6XTTTg"/>
          <interfaceRealization xmi:id="_Z1lPwLEXEeeP95al6XTTTg" client="_Zq4boLEXEeeP95al6XTTTg" supplier="_ZquqoLEXEeeP95al6XTTTg" contract="_ZquqoLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4rnF7EXEeeP95al6XTTTg" name="NESeqList" specification="_Z1l20LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4rnGLEXEeeP95al6XTTTg" name="first" type="_ZqpyILEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4rnGbEXEeeP95al6XTTTg" name="rest" type="_ZquqoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4rnGrEXEeeP95al6XTTTg" type="_Zq4boLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this._rest = rest;&#xD;
		this._first = first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4sOILEXEeeP95al6XTTTg" name="getFirst" specification="_Zq6Q0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4sOIbEXEeeP95al6XTTTg" type="_ZqpyILEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4sOIrEXEeeP95al6XTTTg" name="getRest" specification="_Zq634LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4sOI7EXEeeP95al6XTTTg" type="_ZquqoLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _rest;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4sOJLEXEeeP95al6XTTTg" name="execute" specification="_Z3Hg0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4sOJbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4sOJrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4sOJ7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4sOKLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4sOKbEXEeeP95al6XTTTg" name="setToStringAlgo" specification="_Z1nE8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4sOKrEXEeeP95al6XTTTg" name="stringAlgo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>_toStringAlgo = stringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4s1MLEXEeeP95al6XTTTg" name="getToStringAlgo" specification="_Zq7e8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4s1MbEXEeeP95al6XTTTg" type="_ZqrnULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _toStringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4s1MrEXEeeP95al6XTTTg" name="toString" specification="_Zq8GALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4s1M7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) _rest.execute(_toStringAlgo, &quot;{&quot; + _first.toString());&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Zq6Q0LEXEeeP95al6XTTTg" name="getFirst" method="_Z4sOILEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5CzcbEXEeeP95al6XTTTg">
              <body>Accessor method for the first element&#xD;
	 * @return the IPhrase that is the first element of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1md4rEXEeeP95al6XTTTg" type="_ZqpyILEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Zq634LEXEeeP95al6XTTTg" name="getRest" method="_Z4sOIrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5CzcrEXEeeP95al6XTTTg">
              <body>Accessor method for the rest of the lsit&#xD;
	 * @return the rest of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1md47EXEeeP95al6XTTTg" type="_ZquqoLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Zq7e8LEXEeeP95al6XTTTg" name="getToStringAlgo" isStatic="true" method="_Z4s1MLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5DagbEXEeeP95al6XTTTg">
              <body>Getter for the _toStringAlgo helper.  Only for use internally inside this package&#xD;
	 * so ToggleDecoratorSeqList and FineToggleDecoratorSeqList can use the same visitor.&#xD;
	 * @return the toStringAlgo helper visitor</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1nsALEXEeeP95al6XTTTg" type="_ZqrnULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Zq8GALEXEeeP95al6XTTTg" name="toString" method="_Z4s1MrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5DagrEXEeeP95al6XTTTg">
              <body>Run a visitor over the list to convert it to a String.  &#xD;
	 * Delegates to the rest of the list using the helper algo, with the accumulator &#xD;
	 * (params[0]) set to &quot;{&quot;+_first.toString().  &#xD;
	 * @return &quot;{a, b, c, d}&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_Zq8GAbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1l20LEXEeeP95al6XTTTg" name="NESeqList" method="_Z4rnF7EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z1l207EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z1md4LEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5CzcLEXEeeP95al6XTTTg">
              <body>Cons an IPhrase to a Sequence List.&#xD;
	 * @param first The first element of the sequence&#xD;
	 * @param rest The rest of the sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1l20bEXEeeP95al6XTTTg" name="first" type="_ZqpyILEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1l20rEXEeeP95al6XTTTg" name="rest" type="_ZquqoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1md4bEXEeeP95al6XTTTg" type="_Zq4boLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1nE8LEXEeeP95al6XTTTg" name="setToStringAlgo" isStatic="true" method="_Z4sOKbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5DagLEXEeeP95al6XTTTg">
              <body>Setter for the _toStringAlgo helper.  This non-typical method is provided solely &#xD;
	 * for the purpose of enabling the student to install their toStringAlgo into the &#xD;
	 * read-only provided code.&#xD;
	 * @param stringAlgo The helper algo to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1nE8bEXEeeP95al6XTTTg" name="stringAlgo" type="_ZqrnULEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3Hg0LEXEeeP95al6XTTTg" name="execute" method="_Z4sOJLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3Hg0bEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3IH4LEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3IH47EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3IH4bEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZrEo4LEXEeeP95al6XTTTg" name="Note">
          <ownedComment xmi:id="_Z5Dag7EXEeeP95al6XTTTg">
            <body>Basic class representing musical Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5DahLEXEeeP95al6XTTTg">
            <body>A playable note or rest.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z38AMbEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z38nQLEXEeeP95al6XTTTg" value="&quot;Note&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z38nQbEXEeeP95al6XTTTg" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z38nQrEXEeeP95al6XTTTg" value="'Z'"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z38nQ7EXEeeP95al6XTTTg" name="octave">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z38nRLEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z39OULEXEeeP95al6XTTTg" name="accidental" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z39OUbEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z39OUrEXEeeP95al6XTTTg" name="duration">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z39OU7EXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z39OVLEXEeeP95al6XTTTg" name="isNatural" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z39OVbEXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z1o6ILEXEeeP95al6XTTTg" client="_ZrEo4LEXEeeP95al6XTTTg" supplier="_ZqpLELEXEeeP95al6XTTTg" contract="_ZqpLELEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4tcQLEXEeeP95al6XTTTg" name="Note" specification="_ZrF3ALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4tcQbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4tcQrEXEeeP95al6XTTTg" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4tcQ7EXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4tcRLEXEeeP95al6XTTTg" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4tcRbEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4tcRrEXEeeP95al6XTTTg" type="_ZrEo4LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setName(name);&#xD;
		setOctave(octave);&#xD;
		setAccidental(accidental);&#xD;
		setDuration(duration);&#xD;
		setIsNatural(isNatural);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4tcR7EXEeeP95al6XTTTg" name="toString" specification="_ZrHFILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4tcSLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String s = &quot;(&quot;;&#xD;
		s += Character.toString(name);&#xD;
		int a = accidental;&#xD;
		if (isNatural) {&#xD;
			s += &quot;n&quot;;&#xD;
		}&#xD;
		while (a &lt; 0) {&#xD;
			s += &quot;b&quot;;&#xD;
			a++;&#xD;
		}&#xD;
		while (a > 0) {&#xD;
			s += &quot;#&quot;;&#xD;
			a--;&#xD;
		}&#xD;
		s += &quot;, &quot; + Integer.toString(octave) + &quot;, &quot;;&#xD;
		s += String.format(&quot;%3.2f&quot;, duration);&#xD;
		s += &quot;)&quot;;&#xD;
&#xD;
		return s;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4tcSbEXEeeP95al6XTTTg" name="execute" specification="_Z3J9ELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4tcSrEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4tcS7EXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4tcTLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4tcTbEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4tcTrEXEeeP95al6XTTTg" name="setName" specification="_ZrITQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4tcT7EXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>switch (name) {&#xD;
		case 'a':&#xD;
		case 'A':&#xD;
			this.name = 'A';&#xD;
			break;&#xD;
&#xD;
		case 'b':&#xD;
		case 'B':&#xD;
			this.name = 'B';&#xD;
			break;&#xD;
&#xD;
		case 'c':&#xD;
		case 'C':&#xD;
			this.name = 'C';&#xD;
			break;&#xD;
&#xD;
		case 'd':&#xD;
		case 'D':&#xD;
			this.name = 'D';&#xD;
			break;&#xD;
&#xD;
		case 'e':&#xD;
		case 'E':&#xD;
			this.name = 'E';&#xD;
			break;&#xD;
&#xD;
		case 'f':&#xD;
		case 'F':&#xD;
			this.name = 'F';&#xD;
			break;&#xD;
&#xD;
		case 'g':&#xD;
		case 'G':&#xD;
			this.name = 'G';&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			this.name = 'Z';&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4tcULEXEeeP95al6XTTTg" name="setAccidental" specification="_ZrI6ULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4tcUbEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.accidental = accidental;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4tcUrEXEeeP95al6XTTTg" name="getIsNatural" specification="_ZrI6UrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4tcU7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return isNatural;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4uDULEXEeeP95al6XTTTg" name="setIsNatural" specification="_ZrKIcLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4uDUbEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.isNatural = isNatural;&#xD;
		if (isNatural)&#xD;
			accidental = 0;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZrF3ALEXEeeP95al6XTTTg" name="Note" method="_Z4tcQLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_ZrGeFbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZrGeFrEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5DahbEXEeeP95al6XTTTg">
              <body>Constructor for the class&#xD;
	 * @param name  The name of the note&#xD;
	 * @param octave The octave of the note w.r.t. middle C.  Zero = same octave as middle C.&#xD;
	 * @param accidental accidental setting sharp &amp;gt; 0, flat &amp;lt; 0&#xD;
	 * @param duration duration of note&#xD;
	 * @param isNatural flag to override key signature.  True if note should be natural, overriding key signature.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrGeELEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZrGeEbEXEeeP95al6XTTTg" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZrGeErEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZrGeE7EXEeeP95al6XTTTg" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZrGeFLEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZrGeF7EXEeeP95al6XTTTg" type="_ZrEo4LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrHFILEXEeeP95al6XTTTg" name="toString" method="_Z4tcR7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5DahrEXEeeP95al6XTTTg">
              <body>Returns a string representation of the Note  &#xD;
	 * @return &quot;(name, octave, duration)&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrHFIbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrITQLEXEeeP95al6XTTTg" name="setName" method="_Z4tcTrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5Dah7EXEeeP95al6XTTTg">
              <body>Accessor to set the name of the note&#xD;
	 * @param name - the name to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrITQbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrI6ULEXEeeP95al6XTTTg" name="setAccidental" method="_Z4tcULEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5DaiLEXEeeP95al6XTTTg">
              <body>Accessor to set the accidental value&#xD;
	 * @param accidental - the accidental to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrI6UbEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrI6UrEXEeeP95al6XTTTg" name="getIsNatural" method="_Z4tcUrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5DaibEXEeeP95al6XTTTg">
              <body>Accessor for isNatural flag&#xD;
	 * @return isNatural flag setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrJhYLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrKIcLEXEeeP95al6XTTTg" name="setIsNatural" method="_Z4uDULEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5EBkLEXEeeP95al6XTTTg">
              <body>Settor for isNatural flag.  Accidentals will be set to zero if isNatural is true.&#xD;
	 * @param isNatural  New isNatural setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrKIcbEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3J9ELEXEeeP95al6XTTTg" name="execute" method="_Z4tcSbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3J9EbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3J9ErEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3KkIbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3J9E7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZrNLwLEXEeeP95al6XTTTg" name="NoteCollection" isAbstract="true">
          <ownedComment xmi:id="_Z5EBkbEXEeeP95al6XTTTg">
            <body>A collection of multiple notes</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5EBkrEXEeeP95al6XTTTg">
            <body>A collection of Notes</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z391YbEXEeeP95al6XTTTg" name="notes" visibility="protected" type="_ZrEo4LEXEeeP95al6XTTTg" association="_Z5rFkbEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z391YrEXEeeP95al6XTTTg" value="*"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z1qvULEXEeeP95al6XTTTg" client="_ZrNLwLEXEeeP95al6XTTTg" supplier="_ZqpLELEXEeeP95al6XTTTg" contract="_ZqpLELEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4uDUrEXEeeP95al6XTTTg" name="NoteCollection" specification="_Z1rWYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4uDU7EXEeeP95al6XTTTg" name="notes" type="_ZrEo4LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4uDVLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4uDVbEXEeeP95al6XTTTg" type="_ZrNLwLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.notes = notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4uDVrEXEeeP95al6XTTTg" name="getNotes" specification="_ZrOZ4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4uDV7EXEeeP95al6XTTTg" type="_ZrEo4LEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4uDWLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZrOZ4LEXEeeP95al6XTTTg" name="getNotes" method="_Z4uDVrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5EBk7EXEeeP95al6XTTTg">
              <body>Accessor for the array of notes in this collection&#xD;
	 * @return the array of notes</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrOZ4bEXEeeP95al6XTTTg" type="_ZrEo4LEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZrOZ4rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1rWYLEXEeeP95al6XTTTg" name="NoteCollection" method="_Z4uDUrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z1rWYrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z1rWY7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Z1rWYbEXEeeP95al6XTTTg" name="notes" type="_ZrEo4LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z1r9crEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z1r9cbEXEeeP95al6XTTTg" type="_ZrNLwLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZrQ2ILEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList">
          <ownedComment xmi:id="_Z5EBlLEXEeeP95al6XTTTg">
            <body>Multiple Decorator ISeqList where the active decoree (the &quot;target&quot;) is&#xD;
toggled (cycled, actually) through all the available decorees.   &#xD;
This is arguably a State Design Pattern where each decoree is &#xD;
considered to be another state of the system.&#xD;
This is used to implement repeats where the first time through, the notes are linked&#xD;
back to a repeat start (decoree #0) but the next time through, the next note is the one&#xD;
after the repeat (decoree #1).&#xD;
&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5EBlbEXEeeP95al6XTTTg">
            <body>Decorated ISeqList that transparently cycles through multiple targets (decorees)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z3-ccrEXEeeP95al6XTTTg" name="decorees" visibility="private" type="_ZquqoLEXEeeP95al6XTTTg" association="_Z5rsobEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3_DgLEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3_DgrEXEeeP95al6XTTTg" value="{ MTSeqList.Singleton, MTSeqList.Singleton }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z3_qkbEXEeeP95al6XTTTg" name="targetIdx" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z3_qkrEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z1skgLEXEeeP95al6XTTTg" client="_ZrQ2ILEXEeeP95al6XTTTg" supplier="_ZquqoLEXEeeP95al6XTTTg" contract="_ZquqoLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4uqYLEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList" specification="_Z1tLkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4uqYbEXEeeP95al6XTTTg" name="decorees" type="_ZquqoLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4uqYrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4uqY7EXEeeP95al6XTTTg" type="_ZrQ2ILEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setDecorees(decorees);&#xD;
		setTargetToDecoree(0);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4uqZLEXEeeP95al6XTTTg" name="setDecorees" specification="_Z1vAwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4uqZbEXEeeP95al6XTTTg" name="decorees" type="_ZquqoLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4uqZrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>this.decorees = decorees;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4vRcLEXEeeP95al6XTTTg" name="setDecoree" specification="_Z1vn07EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4vRcbEXEeeP95al6XTTTg" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4vRcrEXEeeP95al6XTTTg" name="decoree" type="_ZquqoLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>this.decorees[idx] = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4vRc7EXEeeP95al6XTTTg" name="setTargetToDecoree" specification="_ZrTSYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4vRdLEXEeeP95al6XTTTg" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.targetIdx = targetIdx;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4vRdbEXEeeP95al6XTTTg" name="getTargetDecoree" specification="_ZrTSYrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4vRdrEXEeeP95al6XTTTg" type="_ZquqoLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return decorees[targetIdx];&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4vRd7EXEeeP95al6XTTTg" name="execute" specification="_Z3MZULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4vReLEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4vRebEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4vRerEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4vRe7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>ISeqList target = decorees[targetIdx++];&#xD;
		if (targetIdx >= decorees.length)&#xD;
			targetIdx = 0; // This must be set before the delegate because it may be needed before the recursion returns.&#xD;
		return target.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4v4gLEXEeeP95al6XTTTg" name="toString" specification="_ZrT5cLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4v4gbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZrSEQLEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList">
            <eAnnotations xmi:id="_ZrSEQbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZrSEQrEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ZrSrULEXEeeP95al6XTTTg" type="_ZrQ2ILEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrTSYLEXEeeP95al6XTTTg" name="setTargetToDecoree" method="_Z4vRc7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5EBl7EXEeeP95al6XTTTg">
              <body>Used to explicitly set the target (active) decoree if needed.&#xD;
	 * @param targetIdx  the index of the target decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZrTSYbEXEeeP95al6XTTTg" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrTSYrEXEeeP95al6XTTTg" name="getTargetDecoree" method="_Z4vRdbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5EBmLEXEeeP95al6XTTTg">
              <body>Accessor for the current target (active) decoree&#xD;
	 * @return  The current target (active) decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1w18LEXEeeP95al6XTTTg" type="_ZquqoLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZrT5cLEXEeeP95al6XTTTg" name="toString" method="_Z4v4gLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_ZrUggLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1tLkLEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList" method="_Z4uqYLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z1tLkrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z1tLk7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Z1tLkbEXEeeP95al6XTTTg" name="decorees" type="_ZquqoLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z1tyobEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z1tyoLEXEeeP95al6XTTTg" type="_ZrQ2ILEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1vAwLEXEeeP95al6XTTTg" name="setDecorees" method="_Z4uqZLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z1vAwbEXEeeP95al6XTTTg" name="decorees" type="_ZquqoLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z1vn0bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1vn07EXEeeP95al6XTTTg" name="setDecoree" method="_Z4vRcLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5EBlrEXEeeP95al6XTTTg">
              <body>Setter methods used to set a particular decoree.   &#xD;
	 * The specified index must already exist.&#xD;
	 * @param idx The index of the decoree to replace&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z1vn1LEXEeeP95al6XTTTg" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z1wO4LEXEeeP95al6XTTTg" name="decoree" type="_ZquqoLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3MZULEXEeeP95al6XTTTg" name="execute" method="_Z4vRd7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3MZUbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3NAYLEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3NncLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3NAYbEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZrYx8LEXEeeP95al6XTTTg" name="Triplet">
          <ownedComment xmi:id="_Z5EBmbEXEeeP95al6XTTTg">
            <body>A musical triplet.  The three notes should be played with 2/3 of their&#xD;
indicated duration.</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5EBmrEXEeeP95al6XTTTg">
            <body>A set of 3 notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_Z1z5QLEXEeeP95al6XTTTg" general="_ZrNLwLEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4ARoLEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4ARobEXEeeP95al6XTTTg" value="&quot;Triplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4v4grEXEeeP95al6XTTTg" name="Triplet" specification="_Z1yEELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4v4g7EXEeeP95al6XTTTg" name="n1" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4v4hLEXEeeP95al6XTTTg" name="n2" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4v4hbEXEeeP95al6XTTTg" name="n3" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4v4hrEXEeeP95al6XTTTg" type="_ZrYx8LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(n1, n2, n3);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4v4h7EXEeeP95al6XTTTg" name="execute" specification="_Z3O1kLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4v4iLEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4v4ibEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4v4irEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4v4i7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4wfkLEXEeeP95al6XTTTg" name="toString" specification="_ZranILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4wfkbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Triplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZranILEXEeeP95al6XTTTg" name="toString" method="_Z4wfkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_ZranIbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z1yEELEXEeeP95al6XTTTg" name="Triplet" method="_Z4v4grEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z1zSMLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z1zSMbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Z1yrILEXEeeP95al6XTTTg" name="n1" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1yrIbEXEeeP95al6XTTTg" name="n2" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1yrIrEXEeeP95al6XTTTg" name="n3" type="_ZrEo4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z1zSMrEXEeeP95al6XTTTg" type="_ZrYx8LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3O1kLEXEeeP95al6XTTTg" name="execute" method="_Z4v4h7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3O1kbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3O1krEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3PcobEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3O1k7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZrdDYLEXEeeP95al6XTTTg" name="Tuplet">
          <ownedComment xmi:id="_Z5EooLEXEeeP95al6XTTTg">
            <body>Class that represents a tuplet, a series of notes played in a fraction of their normal total time.&#xD;
The exact fraction depends on the meter and the number of notes in the tuplet.&#xD;
A triplet is a specific type of tuplet.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_Z5EoobEXEeeP95al6XTTTg">
            <body>A arbitrary set of notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_Z128kLEXEeeP95al6XTTTg" general="_ZrNLwLEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4ARorEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4ARo7EXEeeP95al6XTTTg" value="&quot;Tuplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4wfkrEXEeeP95al6XTTTg" name="Tuplet" specification="_Z11ucLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4wfk7EXEeeP95al6XTTTg" name="notes" type="_ZrEo4LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4wflLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4wflbEXEeeP95al6XTTTg" type="_ZrdDYLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4wflrEXEeeP95al6XTTTg" name="execute" specification="_Z3QqwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4wfl7EXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z4wfmLEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4wfmbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z4wfmrEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4xGoLEXEeeP95al6XTTTg" name="toString" specification="_ZreRgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z4xGobEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Tuplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZreRgLEXEeeP95al6XTTTg" name="toString" method="_Z4xGoLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_ZreRgbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z11ucLEXEeeP95al6XTTTg" name="Tuplet" method="_Z4wfkrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z11ucrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z11uc7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Z11ucbEXEeeP95al6XTTTg" name="notes" type="_ZrEo4LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z12VgrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z12VgbEXEeeP95al6XTTTg" type="_ZrdDYLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3QqwLEXEeeP95al6XTTTg" name="execute" method="_Z4wflrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3QqwbEXEeeP95al6XTTTg" name="algo" type="_ZqrnULEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3QqwrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3RR0bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3Qqw7EXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5mNEbEXEeeP95al6XTTTg" name="" memberEnd="_Z5mNErEXEeeP95al6XTTTg _Z32goLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5mNErEXEeeP95al6XTTTg" name="" type="_ZqOUULEXEeeP95al6XTTTg" association="_Z5mNEbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5m0IbEXEeeP95al6XTTTg" name="" memberEnd="_Z5m0IrEXEeeP95al6XTTTg _Z33HsLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5m0IrEXEeeP95al6XTTTg" name="" type="_ZqOUULEXEeeP95al6XTTTg" association="_Z5m0IbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5nbMbEXEeeP95al6XTTTg" name="" memberEnd="_Z5nbMrEXEeeP95al6XTTTg _Z34V0LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5nbMrEXEeeP95al6XTTTg" name="" type="_ZqYsYLEXEeeP95al6XTTTg" association="_Z5nbMbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5oCQbEXEeeP95al6XTTTg" name="" memberEnd="_Z5oCQrEXEeeP95al6XTTTg _Z36LArEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5oCQrEXEeeP95al6XTTTg" name="" type="_ZqvRsLEXEeeP95al6XTTTg" association="_Z5oCQbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5pQYbEXEeeP95al6XTTTg" name="" memberEnd="_Z5pQYrEXEeeP95al6XTTTg _Z36yErEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5pQYrEXEeeP95al6XTTTg" name="" type="_Zq4boLEXEeeP95al6XTTTg" association="_Z5pQYbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5p3cbEXEeeP95al6XTTTg" name="" memberEnd="_Z5p3crEXEeeP95al6XTTTg _Z36yFLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5p3crEXEeeP95al6XTTTg" name="" type="_Zq4boLEXEeeP95al6XTTTg" association="_Z5p3cbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5qegbEXEeeP95al6XTTTg" name="" memberEnd="_Z5qegrEXEeeP95al6XTTTg _Z37ZIbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5qegrEXEeeP95al6XTTTg" name="" type="_Zq4boLEXEeeP95al6XTTTg" association="_Z5qegbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5rFkbEXEeeP95al6XTTTg" name="" memberEnd="_Z5rFkrEXEeeP95al6XTTTg _Z391YbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5rFkrEXEeeP95al6XTTTg" name="" type="_ZrNLwLEXEeeP95al6XTTTg" association="_Z5rFkbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5rsobEXEeeP95al6XTTTg" name="" memberEnd="_Z5rsorEXEeeP95al6XTTTg _Z3-ccrEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5rsorEXEeeP95al6XTTTg" name="" type="_ZrQ2ILEXEeeP95al6XTTTg" association="_Z5rsobEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Zl51AbEXEeeP95al6XTTTg" name="token">
        <packagedElement xmi:type="uml:Package" xmi:id="_Zl51ArEXEeeP95al6XTTTg" name="tokenizer">
          <packagedElement xmi:type="uml:Class" xmi:id="_ZsUmELEXEeeP95al6XTTTg" name="ABCTokenizer">
            <ownedComment xmi:id="_Z5HE57EXEeeP95al6XTTTg">
              <body>Tokenizer for the abc music language. getNextToken() returns next Token in&#xD;
stream. Does not recognize all possible language constructs and symbols&#xD;
(returned as &quot;?&quot; token).  Tokens are the atomic psemantic pieces of a language,&#xD;
such as Note, repeat start, measure, chord, etc.   The token ids (names) returned are: &lt;br/>&#xD;
 &lt;br/>&#xD;
 EOF - end of file&lt;br/>&#xD;
 &quot;|:&quot; - repeat start&lt;br/>&#xD;
 &quot;:|&quot; - repeat end&lt;br/>&#xD;
 &quot;|1&quot; - first repeat start&lt;br/>&#xD;
 &quot;[1&quot; - alternative first repeat start&lt;br/>&#xD;
 &quot;|2&quot; - second repeat start&lt;br/>&#xD;
 &quot;[2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;[|&quot; - thick-thin double bar line&lt;br/>&#xD;
 &quot;|]&quot; - thin-thick double bar line&lt;br/>&#xD;
 &quot;:|2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;||&quot; - double measure bar&lt;br/>&#xD;
 &quot;::&quot; - short hand for repeat end-start &quot;:||:&quot;&lt;br/>&#xD;
 &quot;|&quot; - Measure bar&lt;br/>&#xD;
 &quot;[&quot;) - Chord start&lt;br/>&#xD;
 &quot;]&quot; - Chord end&lt;br/>&#xD;
 &quot;-&quot; - tie&lt;br/>&#xD;
 &quot;&amp;lt;&quot; - the previous note  is dotted, the next note halved&lt;br/> &#xD;
 &quot;&amp;gt;&quot; - the previous note is halved, the next dotted&lt;br/>&#xD;
 &quot;{&quot; - Grace begin&lt;br/>&#xD;
 &quot;}&quot; - Grace end&lt;br/>&#xD;
 &quot;%&quot; - Comment&lt;br/>&#xD;
 &quot;[Header ID]&quot; - where [Header ID] is a single letter from {ABCDEFGHIKLMNOPQRSTWXZ} &lt;br/> &#xD;
 &quot;Note&quot; - a single note whose lexeme contains the name, accidentals, octave and duration&lt;br/>&#xD;
 &quot;Tuplet&quot; - the lexeme is the number of subsequent Notes comprise this tuplet. &lt;br/>&#xD;
 &quot;Quote&quot; - lexeme is the quoted text &lt;br/>&#xD;
 &quot;?&quot; - unknown language construct. &lt;br/>&#xD;
  &lt;br/>&#xD;
References: &lt;br/>&#xD;
&lt;a href =&#xD;
&quot;http://download.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html&quot;&#xD;
>java.util.regex.Pattern for regex guide&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://asciitable.com/&quot;>ASCII table for codes&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://abcnotation.com/abc2mtex/abc.txt&quot;>abc music standard 1.6&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_Z2LFobEXEeeP95al6XTTTg" general="_ZsgzULEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_Z4NF8bEXEeeP95al6XTTTg" name="keywords1" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_Z4NtAbEXEeeP95al6XTTTg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4NF8rEXEeeP95al6XTTTg" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Z4NtArEXEeeP95al6XTTTg" name="keywords2" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_Z4OUErEXEeeP95al6XTTTg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4OUELEXEeeP95al6XTTTg" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Z4O7ILEXEeeP95al6XTTTg" name="keywordsVector" visibility="private" type="_Z3c4ALEXEeeP95al6XTTTg" association="_Z5zBYbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4PiMLEXEeeP95al6XTTTg" value="new Vector&lt;Map&lt;String, String>>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Z4PiMrEXEeeP95al6XTTTg" name="tokFac" visibility="private" type="_ZsK1ELEXEeeP95al6XTTTg" association="_Z5zBZLEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4PiM7EXEeeP95al6XTTTg" value="TokenFactory.Singleton"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Z4QJQbEXEeeP95al6XTTTg" name="stack" visibility="private" type="_Z210ALEXEeeP95al6XTTTg" association="_Z5zocbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4QwUbEXEeeP95al6XTTTg" value="new Stack&lt;Token>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Z4RXYLEXEeeP95al6XTTTg" name="ACCIDENTALS" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4RXYbEXEeeP95al6XTTTg" value="&quot;_=^&quot;"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_Z2J3gLEXEeeP95al6XTTTg" client="_ZsUmELEXEeeP95al6XTTTg" supplier="_ZseXEbEXEeeP95al6XTTTg" contract="_ZseXEbEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z43NRrEXEeeP95al6XTTTg" name="ABCTokenizer" specification="_ZsWbQLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z43NR7EXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Z43NSLEXEeeP95al6XTTTg" type="_ZsUmELEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>super(inputFileName);&#xD;
&#xD;
		// note: &quot;\\7C&quot; => &quot;|&quot;, &quot;\\x5B&quot; => &quot;[&quot;, &quot;\\x5D&quot; => &quot;]&quot;&#xD;
		// &quot;\\x7B&quot; => &quot;{&quot;,  &quot;\\x7D&quot; => &quot;}&quot;&#xD;
&#xD;
		// load the regex->keyword mapping&#xD;
		keywords1.put(&quot;\\x7C:&quot;, &quot;|:&quot;); // repeat start&#xD;
		keywords1.put(&quot;:\\x7C&quot;, &quot;:|&quot;); // repeat end&#xD;
		keywords1.put(&quot;\\x7C1&quot;, &quot;|1&quot;); // first repeat start&#xD;
		keywords1.put(&quot;\\x5B1&quot;, &quot;[1&quot;); // alternative first repeat start&#xD;
		keywords1.put(&quot;\\x7C2&quot;, &quot;|2&quot;); // second repeat start&#xD;
		keywords1.put(&quot;\\x5B2&quot;, &quot;[2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x5B\\7C&quot;, &quot;[|&quot;); // thick-thin double bar line&#xD;
		keywords1.put(&quot;\\7C\\x5D&quot;, &quot;|]&quot;); // thin-thick double bar line&#xD;
		keywords1.put(&quot;:\\x7C2&quot;, &quot;:|2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x7C\\x7C&quot;, &quot;||&quot;); // double measure bar&#xD;
		keywords1.put(&quot;::&quot;, &quot;::&quot;); // short hand for repeat end-start &quot;:||:&quot;&#xD;
&#xD;
		// Should these be separated out into a different map because order of&#xD;
		// search is important?&#xD;
		keywords2.put(&quot;\\x7C&quot;, &quot;|&quot;); // Measure bar&#xD;
		keywords2.put(&quot;\\x5B&quot;, &quot;[&quot;); // Chord start&#xD;
		keywords2.put(&quot;\\x5D&quot;, &quot;]&quot;); // Chord end&#xD;
		keywords2.put(&quot;-&quot;, &quot;-&quot;); // tie&#xD;
		keywords2.put(&quot;>&quot;, &quot;>&quot;); // the previous note  is dotted, the next note halved &#xD;
		keywords2.put(&quot;&lt;&quot;, &quot;&lt;&quot;); // the previous note is halved, the next dotted&#xD;
		keywords2.put(&quot;\\x7B&quot;, &quot;{&quot;); // Grace begin&#xD;
		keywords2.put(&quot;\\x7D&quot;, &quot;}&quot;); // Grace end		&#xD;
&#xD;
		keywordsVector.add(keywords1);&#xD;
		keywordsVector.add(keywords2);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z43NSbEXEeeP95al6XTTTg" name="getNextToken" specification="_ZsXCULEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z43NSrEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z430ULEXEeeP95al6XTTTg" name="putBack" specification="_Z2KekbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z430UbEXEeeP95al6XTTTg" name="t" type="_ZsMqQLEXEeeP95al6XTTTg"/>
              <language>java</language>
              <body>stack.push(t);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z430UrEXEeeP95al6XTTTg" name="makeNextToken" specification="_ZsXpYLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z430U7EXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>String sTok = this.getNextStringToken();&#xD;
		if (null == sTok)&#xD;
			return tokFac.makeToken(&quot;EOF&quot;, &quot;EOF&quot;); // EOF returns as null&#xD;
		if (sTok.equals(&quot;\n&quot;))&#xD;
			return makeNextToken(); // discard bare LF's.&#xD;
&#xD;
		// search for first keywords, pushing extra tokens back into tokenizer's&#xD;
		// stack.&#xD;
		for (Map&lt;String, String> keywords : keywordsVector) {&#xD;
			for (String kw : keywords.keySet()) {&#xD;
				if (keywords.get(kw).equals(sTok))&#xD;
					return tokFac.makeToken(sTok, sTok);&#xD;
				String[] split = sTok.split(kw, -1);&#xD;
				if (split.length > 1) {&#xD;
&#xD;
					for (int i = split.length - 1; i > 0; i--) {&#xD;
						if (!split[i].equals(&quot;&quot;)) {&#xD;
							this.putStringBack(split[i]);&#xD;
						}&#xD;
						this.putStringBack(keywords.get(kw));&#xD;
					}&#xD;
					if (!split[0].equals(&quot;&quot;)) {&#xD;
						this.putStringBack(split[0]);&#xD;
					}&#xD;
					return makeNextToken();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find header tokens, which are the whole line.&#xD;
		int idx = sTok.indexOf(&quot;:&quot;);&#xD;
		if (1 == idx) {&#xD;
			String header = sTok;&#xD;
			String next = super.getNextStringToken();&#xD;
			while (!next.equals(&quot;\n&quot;)) {&#xD;
				header += &quot; &quot; + next;&#xD;
				next = this.getNextStringToken();&#xD;
			}&#xD;
			return tokFac&#xD;
					.makeToken(header.substring(0, 1), header.substring(2));&#xD;
		}&#xD;
&#xD;
		// Find comment, which is the rest of the line.&#xD;
		idx = sTok.indexOf(&quot;%&quot;);&#xD;
		if (-1 != idx) {&#xD;
			// Comment in line somewhere&#xD;
			if (0 == idx) { // comment is at beginning of line&#xD;
				String comment = sTok;&#xD;
				String next = super.getNextStringToken();&#xD;
				while (!next.equals(&quot;\n&quot;)) { // get the rest of the line&#xD;
					comment += next;&#xD;
					// get the next string token &#xD;
					next = this.getNextStringToken();&#xD;
				}&#xD;
				return tokFac.makeToken(&quot;%&quot;, comment.substring(1));&#xD;
			} else { // comment is in middle of the line&#xD;
				// push the entire comment, incl. the comment char, back into&#xD;
				// the tokenizer b/c it can't be dealt with yet.&#xD;
				this.putStringBack(sTok.substring(idx));&#xD;
				// push the tokens before the comment back into the tokenizer&#xD;
				// so that they can be then processed when pulled back out.&#xD;
				this.putStringBack(sTok.substring(0, idx));&#xD;
				return makeNextToken(); // Process whatever is in the tokenizer&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find tuplet&#xD;
		if ('(' == sTok.charAt(0)) {&#xD;
			// Tuplet found&#xD;
			int n = Integer.parseInt(sTok.substring(1, 2)); // get tuplet size&#xD;
			this.putStringBack(sTok.substring(2)); // push rest back into tokenizer&#xD;
			return tokFac.makeToken(&quot;Tuplet&quot;, &quot;&quot; + n);&#xD;
		}&#xD;
&#xD;
		if (Character.isLetter(sTok.charAt(0))&#xD;
				|| ACCIDENTALS.contains(sTok.subSequence(0, 1))) {&#xD;
			// Start of Note string found.&#xD;
			return tokFac.makeToken(&quot;Note&quot;, parseNote(sTok));&#xD;
		}&#xD;
&#xD;
		if ('\&quot;' == sTok.charAt(0)) {&#xD;
			// Quoted string found&#xD;
			return tokFac.makeToken(&quot;Quote&quot;, parseQuote(&quot;&quot;, sTok.substring(1)));&#xD;
		}&#xD;
&#xD;
		if (sTok.equals(&quot;\\&quot;)) {&#xD;
			// abc line break detected.  Ignore.&#xD;
			return makeNextToken();&#xD;
		}&#xD;
&#xD;
		// Unknown token&#xD;
		return tokFac.makeToken(&quot;?&quot;, sTok);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z430VLEXEeeP95al6XTTTg" name="parseNote" specification="_ZsYQcLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z430VbEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Z430VrEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>int i = 1;&#xD;
		// look for pre-note name characters&#xD;
		if (!Character.isLetter(sTok.charAt(0))) {&#xD;
			for (; i &lt; sTok.length(); i++) {&#xD;
				if (sTok.charAt(i) != sTok.charAt(0)) {&#xD;
					i++; // move to next char&#xD;
					break; // This assumes that this char is a letter which&#xD;
							// follows the accidentals&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (; i &lt; sTok.length(); i++) {&#xD;
			// look for non-post-note name characters.&#xD;
			if (!(Character.isDigit(sTok.charAt(i)) || &quot;,/'&quot;.contains(sTok&#xD;
					.subSequence(i, i + 1)))) {&#xD;
				putStringBack(sTok.substring(i)); // put the rest back in the&#xD;
													// tokenizer.&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		// i = end of note string&#xD;
		return sTok.substring(0, i);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z430V7EXEeeP95al6XTTTg" name="parseQuote" specification="_ZsY3gLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z430WLEXEeeP95al6XTTTg" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Z430WbEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Z430WrEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; sTok.length(); i++) {&#xD;
			if ('\&quot;' == sTok.charAt(i)) {&#xD;
				String rest = sTok.substring(i + 1);&#xD;
				if (!rest.equals(&quot;&quot;)) {&#xD;
					this.putStringBack(rest);&#xD;
				}&#xD;
				return acc;&#xD;
			} else {&#xD;
				acc += sTok.charAt(i);&#xD;
			}&#xD;
		}&#xD;
		acc += &quot; &quot;;&#xD;
		return parseQuote(acc, this.getNextStringToken());&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ZsWbQLEXEeeP95al6XTTTg" name="ABCTokenizer" method="_Z43NRrEXEeeP95al6XTTTg" raisedException="_Z2OI8bEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_ZsWbQrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_ZsWbQ7EXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_Z5HE6LEXEeeP95al6XTTTg">
                <body>Constructor for the class&#xD;
	 * @param inputFileName  File to tokenize&#xD;
	 * @throws FileNotFoundException  When input file could not be loaded.</body>
              </ownedComment>
              <ownedParameter xmi:id="_ZsWbQbEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ZsWbRLEXEeeP95al6XTTTg" type="_ZsUmELEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ZsXCULEXEeeP95al6XTTTg" name="getNextToken" method="_Z43NSbEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_Z5Hr8LEXEeeP95al6XTTTg">
                <body>Return the next token, either from the stream or the last token if it was&#xD;
	 * pushed back</body>
              </ownedComment>
              <ownedParameter xmi:id="_Z2KekLEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ZsXpYLEXEeeP95al6XTTTg" name="makeNextToken" visibility="private" method="_Z430UrEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_Z5Hr8rEXEeeP95al6XTTTg">
                <body>Parse the strings down from the getNextStringToken further, separating&#xD;
	 * out the abc keywords into tokens.&#xD;
	 * @return The next Token in the stream</body>
              </ownedComment>
              <ownedParameter xmi:id="_Z2LFoLEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ZsYQcLEXEeeP95al6XTTTg" name="parseNote" visibility="private" method="_Z430VLEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_Z5Hr87EXEeeP95al6XTTTg">
                <body>Returns the first note string in the given string.&#xD;
	 * &#xD;
	 * @param sTok  The string to parse&#xD;
	 * @return A String that is the first note in the given string</body>
              </ownedComment>
              <ownedParameter xmi:id="_ZsYQcbEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ZsYQcrEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_ZsY3gLEXEeeP95al6XTTTg" name="parseQuote" visibility="private" method="_Z430V7EXEeeP95al6XTTTg">
              <ownedComment xmi:id="_Z5Hr9LEXEeeP95al6XTTTg">
                <body>Returns the rest of a string, incl. spaces until the next double quote&#xD;
	 * @param acc  Accumulated result string&#xD;
	 * @param sTok the current string token&#xD;
	 * @return the full quoted string</body>
              </ownedComment>
              <ownedParameter xmi:id="_ZsZekLEXEeeP95al6XTTTg" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ZsZekbEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ZsZekrEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Z2KekbEXEeeP95al6XTTTg" name="putBack" method="_Z430ULEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_Z5Hr8bEXEeeP95al6XTTTg">
                <body>*	 Push token back into the stream&#xD;
	 * @param t the Token you need to put back in the stream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_Z2KekrEXEeeP95al6XTTTg" name="t" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ZsdI8LEXEeeP95al6XTTTg" name="IStringTokenizer">
            <ownedComment xmi:id="_Z5Hr9bEXEeeP95al6XTTTg">
              <body>Tokenizer that only returns string tokens.  This is a specialization of ITokenizer for strings.&#xD;
&#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_ZsdI8bEXEeeP95al6XTTTg" name="getNextStringToken" isAbstract="true">
              <ownedComment xmi:id="_Z5Hr9rEXEeeP95al6XTTTg">
                <body>Return the next token.&#xD;
	 * @return The next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_ZsdwALEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_ZsdwAbEXEeeP95al6XTTTg" name="putStringBack" isAbstract="true">
              <ownedComment xmi:id="_Z5Hr97EXEeeP95al6XTTTg">
                <body>Put the previously consumed token back into the token stream. Can only&#xD;
	 * put back one token.&#xD;
	 * @param t the token to push back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_ZseXELEXEeeP95al6XTTTg" name="t">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ZseXEbEXEeeP95al6XTTTg" name="ITokenizer" isAbstract="true">
            <ownedComment xmi:id="_Z5Hr-LEXEeeP95al6XTTTg">
              <body>Extract and return an appropriate Token from some given source.</body>
            </ownedComment>
            <ownedOperation xmi:id="_ZsflMLEXEeeP95al6XTTTg" name="getNextToken" isAbstract="true">
              <ownedComment xmi:id="_Z5Hr-bEXEeeP95al6XTTTg">
                <body>Return the next token.&#xD;
	 * @return the next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_Z2M60LEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Z2M60bEXEeeP95al6XTTTg" name="putBack" isAbstract="true">
              <ownedComment xmi:id="_Z5Hr-rEXEeeP95al6XTTTg">
                <body>Put the previously consumed token back into the token stream. &#xD;
	 * @param t the token to put back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_Z2M60rEXEeeP95al6XTTTg" name="t" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ZsgzULEXEeeP95al6XTTTg" name="StringTokenizer">
            <ownedComment xmi:id="_Z5Hr-7EXEeeP95al6XTTTg">
              <body>Special tokenizer that converts a stream of various types of tokens from  StreamTokenizer and converts them into a stream of strings. &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_Z4R-cLEXEeeP95al6XTTTg" name="stack" visibility="private" type="_Z210ALEXEeeP95al6XTTTg" association="_Z5zodLEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4SlgLEXEeeP95al6XTTTg" value="new Stack&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Z4SlgrEXEeeP95al6XTTTg" name="_st" visibility="protected" type="_Z2RzUbEXEeeP95al6XTTTg" association="_Z50PgbEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_Z4TMkbEXEeeP95al6XTTTg" name="_fileReader" visibility="protected" type="_Z2RMQbEXEeeP95al6XTTTg" association="_Z502kbEXEeeP95al6XTTTg"/>
            <interfaceRealization xmi:id="_Z2SaYbEXEeeP95al6XTTTg" client="_ZsgzULEXEeeP95al6XTTTg" supplier="_ZsdI8LEXEeeP95al6XTTTg" contract="_ZsdI8LEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z44bYLEXEeeP95al6XTTTg" name="StringTokenizer" specification="_ZsiBcLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z44bYbEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Z44bYrEXEeeP95al6XTTTg" type="_ZsgzULEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>// Create an input text file object:&#xD;
&#xD;
		//_st = new StreamTokenizer(new BufferedReader(url.openStream()));&#xD;
		//_fileReader = new FileReader(inputFileName);&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(inputFileName)&#xD;
					.openStream();&#xD;
&#xD;
			_fileReader = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			//_fileReader = new FileReader(file);&#xD;
		} catch (Exception e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			System.err.println(&quot;StringTokenizer error opening file: &quot; + e);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		// Create a Streamtokenizer to parse the input text file:&#xD;
		_st = new StreamTokenizer(_fileReader);&#xD;
&#xD;
		_st.eolIsSignificant(true);&#xD;
		_st.wordChars(33, 125);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z44bY7EXEeeP95al6XTTTg" name="getNextStringToken" specification="_ZsiogbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z44bZLEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextStringToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z45CcLEXEeeP95al6XTTTg" name="putStringBack" specification="_Zsj2orEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z45CcbEXEeeP95al6XTTTg" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>stack.push(str);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z45CcrEXEeeP95al6XTTTg" name="makeNextStringToken" specification="_ZslEwrEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Z45Cc7EXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {&#xD;
			int t = _st.nextToken();&#xD;
			if (StreamTokenizer.TT_EOL == t)&#xD;
				return &quot;\n&quot;;&#xD;
			if (StreamTokenizer.TT_EOF != t) {&#xD;
				switch (_st.ttype) {&#xD;
&#xD;
				case StreamTokenizer.TT_WORD: {&#xD;
					return _st.sval;&#xD;
				}&#xD;
&#xD;
				case StreamTokenizer.TT_NUMBER: {&#xD;
					// check if number is an integer&#xD;
					if (Math.floor(_st.nval) == _st.nval) {&#xD;
						return &quot;&quot; + (int) _st.nval;&#xD;
					} else {&#xD;
						return &quot;&quot; + _st.nval;&#xD;
					}&#xD;
				}&#xD;
&#xD;
				default:&#xD;
					throw new IllegalArgumentException(&#xD;
							&quot;Tokenizer1: Illegal token type = &quot; + _st.ttype);&#xD;
				}&#xD;
			} else {&#xD;
				_fileReader.close();&#xD;
				System.err.println(&quot;EOF Token&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.out.println(&quot;StringTokenizer.makeNextToken(): Exception = &quot;&#xD;
					+ e.getMessage());&#xD;
			return null;&#xD;
		}&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ZsiBcLEXEeeP95al6XTTTg" name="StringTokenizer" method="_Z44bYLEXEeeP95al6XTTTg" raisedException="_Z2OI8bEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_ZsiBcrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_ZsiBc7EXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_Z5ITALEXEeeP95al6XTTTg">
                <body>Initialize _st to read from a input Reader file with the given input file&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file&#xD;
	 * @throws FileNotFoundException When the input file could not be opened</body>
              </ownedComment>
              <ownedParameter xmi:id="_ZsiBcbEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_ZsiogLEXEeeP95al6XTTTg" type="_ZsgzULEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ZsiogbEXEeeP95al6XTTTg" name="getNextStringToken" method="_Z44bY7EXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_ZsjPkLEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Zsj2orEXEeeP95al6XTTTg" name="putStringBack" method="_Z45CcLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_Zsj2o7EXEeeP95al6XTTTg" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_ZslEwrEXEeeP95al6XTTTg" name="makeNextStringToken" visibility="private" method="_Z45CcrEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_Z5ITAbEXEeeP95al6XTTTg">
                <body>Returns the next string in the stream.  &#xD;
	 * Returns LF (&quot;\n&quot;) at end of line.  &#xD;
	 * Returns null for EOF or error&#xD;
	 * &#xD;
	 * @return A string token or null if EOF</body>
              </ownedComment>
              <ownedParameter xmi:id="_Zslr0LEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Z5zBYbEXEeeP95al6XTTTg" name="" memberEnd="_Z5zBYrEXEeeP95al6XTTTg _Z4O7ILEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_Z5zBYrEXEeeP95al6XTTTg" name="" type="_ZsUmELEXEeeP95al6XTTTg" association="_Z5zBYbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Z5zBZLEXEeeP95al6XTTTg" name="" memberEnd="_Z5zBZbEXEeeP95al6XTTTg _Z4PiMrEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_Z5zBZbEXEeeP95al6XTTTg" name="" type="_ZsUmELEXEeeP95al6XTTTg" association="_Z5zBZLEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Z5zocbEXEeeP95al6XTTTg" name="" memberEnd="_Z5zocrEXEeeP95al6XTTTg _Z4QJQbEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_Z5zocrEXEeeP95al6XTTTg" name="" type="_ZsUmELEXEeeP95al6XTTTg" association="_Z5zocbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Z5zodLEXEeeP95al6XTTTg" name="" memberEnd="_Z5zodbEXEeeP95al6XTTTg _Z4R-cLEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_Z5zodbEXEeeP95al6XTTTg" name="" type="_ZsgzULEXEeeP95al6XTTTg" association="_Z5zodLEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Z50PgbEXEeeP95al6XTTTg" name="" memberEnd="_Z50PgrEXEeeP95al6XTTTg _Z4SlgrEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_Z50PgrEXEeeP95al6XTTTg" name="" type="_ZsgzULEXEeeP95al6XTTTg" association="_Z50PgbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Z502kbEXEeeP95al6XTTTg" name="" memberEnd="_Z502krEXEeeP95al6XTTTg _Z4TMkbEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_Z502krEXEeeP95al6XTTTg" name="" type="_ZsgzULEXEeeP95al6XTTTg" association="_Z502kbEXEeeP95al6XTTTg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zr_18LEXEeeP95al6XTTTg" name="ATokVisitor" isAbstract="true">
          <ownedComment xmi:id="_Z5Gd1LEXEeeP95al6XTTTg">
            <body>A visitor to an Token that implements ITokVisitor using a dictionary of commands.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z4KCoLEXEeeP95al6XTTTg" name="defaultCmd" visibility="private" type="_ZsI_4LEXEeeP95al6XTTTg" association="_Z5xzQbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_Z4KpsbEXEeeP95al6XTTTg" name="cmds" visibility="private" type="_ZsI_4LEXEeeP95al6XTTTg" association="_Z5yaULEXEeeP95al6XTTTg">
            <qualifier xmi:id="_Z4LQwbEXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4KpsrEXEeeP95al6XTTTg" value="new Hashtable&lt;String, ITokVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z2Dw4LEXEeeP95al6XTTTg" client="_Zr_18LEXEeeP95al6XTTTg" supplier="_ZsHxwLEXEeeP95al6XTTTg" contract="_ZsHxwLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z40xBLEXEeeP95al6XTTTg" name="ATokVisitor" specification="_ZsC5QLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z40xBbEXEeeP95al6XTTTg" type="_Zr_18LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new ITokVisitorCmd() {&#xD;
			public Object apply(String idx, Token host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;ATokVisitor: Unknown token encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z41YELEXEeeP95al6XTTTg" name="ATokVisitor" specification="_Z2EX8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z41YEbEXEeeP95al6XTTTg" name="defaultCmd" type="_ZsI_4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z41YErEXEeeP95al6XTTTg" type="_Zr_18LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z41YE7EXEeeP95al6XTTTg" name="caseAt" specification="_Z3XYcLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z41YFLEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z41YFbEXEeeP95al6XTTTg" name="host" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z41YFrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z41YF7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z41YGLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z41_ILEXEeeP95al6XTTTg" name="addCmd" specification="_Z2E_ALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z41_IbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z41_IrEXEeeP95al6XTTTg" name="cmd" type="_ZsI_4LEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZsC5QLEXEeeP95al6XTTTg" name="ATokVisitor" method="_Z40xBLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_ZsDgULEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZsDgUbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5Gd1bEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to one that throws and IllegalArgumentException&quot; for any unknown tokens.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZsDgUrEXEeeP95al6XTTTg" type="_Zr_18LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z2EX8LEXEeeP95al6XTTTg" name="ATokVisitor" method="_Z41YELEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_Z2EX8rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Z2EX87EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5Gd1rEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to the given command.&#xD;
	 * @param defaultCmd the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z2EX8bEXEeeP95al6XTTTg" name="defaultCmd" type="_ZsI_4LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z2EX9LEXEeeP95al6XTTTg" type="_Zr_18LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z2E_ALEXEeeP95al6XTTTg" name="addCmd" method="_Z41_ILEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5Gd17EXEeeP95al6XTTTg">
              <body>Add a new cmd or replace an existing cmd associated with the given host id.&#xD;
	 * @param id the id of the host to associate with this visitor.&#xD;
	 * @param cmd The command to associate with the given key value.</body>
            </ownedComment>
            <ownedParameter xmi:id="_Z2E_AbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2FmELEXEeeP95al6XTTTg" name="cmd" type="_ZsI_4LEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3XYcLEXEeeP95al6XTTTg" name="caseAt" method="_Z41YE7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3XYcbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3XYcrEXEeeP95al6XTTTg" name="host" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3XYc7EXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3X_grEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3X_gLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZsHxwLEXEeeP95al6XTTTg" name="ITokVisitor">
          <ownedComment xmi:id="_Z5Gd2LEXEeeP95al6XTTTg">
            <body>Interface for a token visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_Z3YmkLEXEeeP95al6XTTTg" name="caseAt">
            <ownedParameter xmi:id="_Z3YmkbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3YmkrEXEeeP95al6XTTTg" name="host" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3Ymk7EXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3ZNorEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3ZNoLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZsI_4LEXEeeP95al6XTTTg" name="ITokVisitorCmd">
          <ownedComment xmi:id="_Z5Gd2bEXEeeP95al6XTTTg">
            <body>A command for use in ATokVisitors</body>
          </ownedComment>
          <ownedOperation xmi:id="_Z3abwLEXEeeP95al6XTTTg" name="apply">
            <ownedParameter xmi:id="_Z3abwbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3abwrEXEeeP95al6XTTTg" name="host" type="_ZsMqQLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3abw7EXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3bC0bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3abxLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZsK1ELEXEeeP95al6XTTTg" name="ITokenFactory">
          <ownedComment xmi:id="_Z5HE4LEXEeeP95al6XTTTg">
            <body>Abstract factory to produce tokens</body>
          </ownedComment>
          <ownedOperation xmi:id="_ZsLcILEXEeeP95al6XTTTg" name="makeToken">
            <ownedParameter xmi:id="_ZsLcIbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZsMDMLEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2HbQLEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZsMqQLEXEeeP95al6XTTTg" name="Token">
          <ownedComment xmi:id="_Z5HE4bEXEeeP95al6XTTTg">
            <body>Represents a token in the language.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z4L30LEXEeeP95al6XTTTg" name="_name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Z4L30rEXEeeP95al6XTTTg" name="_lexeme" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z41_I7EXEeeP95al6XTTTg" name="Token" specification="_ZsN4YLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z41_JLEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z41_JbEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z41_JrEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>_name = name;&#xD;
		_lexeme = lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z42mMLEXEeeP95al6XTTTg" name="execute" specification="_Z3bp4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z42mMbEXEeeP95al6XTTTg" name="algo" type="_ZsHxwLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z42mMrEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z42mM7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z42mNLEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_name, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z42mNbEXEeeP95al6XTTTg" name="getName" specification="_ZsOfcLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z42mNrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _name;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z42mN7EXEeeP95al6XTTTg" name="getLexeme" specification="_ZsPGgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z42mOLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z42mObEXEeeP95al6XTTTg" name="toString" specification="_ZsPGgrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z42mOrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;[&quot; + _name + &quot;] &quot; + _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZsN4YLEXEeeP95al6XTTTg" name="Token" method="_Z41_I7EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_ZsN4Y7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZsN4ZLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_Z5HE4rEXEeeP95al6XTTTg">
              <body>Token constructor.&#xD;
	 *&#xD;
	 * @param name The name associated with this token.  This is the id value when it executes its visitors.&#xD;
	 * @param lexeme _lexeme this token is representing.</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZsN4YbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZsN4YrEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZsN4ZbEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZsOfcLEXEeeP95al6XTTTg" name="getName" method="_Z42mNbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5HE47EXEeeP95al6XTTTg">
              <body>Accessor for the name of this token&#xD;
	 * @return The name of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZsOfcbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZsPGgLEXEeeP95al6XTTTg" name="getLexeme" method="_Z42mN7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5HE5LEXEeeP95al6XTTTg">
              <body>Accessor for the lexeme of this token&#xD;
	 * @return The lexeme of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZsPGgbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_ZsPGgrEXEeeP95al6XTTTg" name="toString" method="_Z42mObEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_Z5HE5bEXEeeP95al6XTTTg">
              <body>Return a string representation of the token: &quot;[name] lexeme&quot;&#xD;
	 *&#xD;
	 * @return string representation</body>
            </ownedComment>
            <ownedParameter xmi:id="_ZsPtkLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Z3bp4LEXEeeP95al6XTTTg" name="execute" method="_Z42mMLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z3bp4bEXEeeP95al6XTTTg" name="algo" type="_ZsHxwLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_Z3bp4rEXEeeP95al6XTTTg" name="params" type="_Z243ULEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z3cQ8rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z3cQ8LEXEeeP95al6XTTTg" type="_Z243ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZsQ7sLEXEeeP95al6XTTTg" name="TokenFactory">
          <ownedComment xmi:id="_Z5HE5rEXEeeP95al6XTTTg">
            <body>Concrete factory to create tokens</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Z4Me4bEXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_ZsQ7sLEXEeeP95al6XTTTg" isReadOnly="true" association="_Z5yaU7EXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4NF8LEXEeeP95al6XTTTg" value="new TokenFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Z2IpYLEXEeeP95al6XTTTg" client="_ZsQ7sLEXEeeP95al6XTTTg" supplier="_ZsK1ELEXEeeP95al6XTTTg" contract="_ZsK1ELEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z43NQLEXEeeP95al6XTTTg" name="makeToken" specification="_ZsTX8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_Z43NQbEXEeeP95al6XTTTg" name="name">
              <eAnnotations xmi:id="_Z43NQrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Z43NQ7EXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z43NRLEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z43NRbEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return new Token(name, lexeme);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_ZsRiwLEXEeeP95al6XTTTg" name="TokenFactory" visibility="private">
            <eAnnotations xmi:id="_ZsSJ0LEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_ZsSJ0bEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_ZsSw4bEXEeeP95al6XTTTg" type="_ZsQ7sLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ZsTX8LEXEeeP95al6XTTTg" name="makeToken" method="_Z43NQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_ZsTX8bEXEeeP95al6XTTTg" name="name">
              <eAnnotations xmi:id="_ZsT_ALEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_ZsT_AbEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZsTX8rEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Z2JQcLEXEeeP95al6XTTTg" type="_ZsMqQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5xzQbEXEeeP95al6XTTTg" name="" memberEnd="_Z5xzQrEXEeeP95al6XTTTg _Z4KCoLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5xzQrEXEeeP95al6XTTTg" name="" type="_Zr_18LEXEeeP95al6XTTTg" association="_Z5xzQbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5yaULEXEeeP95al6XTTTg" name="" memberEnd="_Z5yaUbEXEeeP95al6XTTTg _Z4KpsbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5yaUbEXEeeP95al6XTTTg" name="" type="_Zr_18LEXEeeP95al6XTTTg" association="_Z5yaULEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Z5yaU7EXEeeP95al6XTTTg" name="" memberEnd="_Z5yaVLEXEeeP95al6XTTTg _Z4Me4bEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_Z5yaVLEXEeeP95al6XTTTg" name="" type="_ZsQ7sLEXEeeP95al6XTTTg" association="_Z5yaU7EXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZluO07EXEeeP95al6XTTTg" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_Zsp9QLEXEeeP95al6XTTTg" name="IView2ModelControlAdapter">
        <ownedComment xmi:id="_Z5ITA7EXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_ZsqkULEXEeeP95al6XTTTg" name="loadFile">
          <ownedComment xmi:id="_Z5ITBLEXEeeP95al6XTTTg">
            <body>load the given file.&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_ZsqkUbEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ZsrLYLEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZsrLYbEXEeeP95al6XTTTg" name="parseFile">
          <ownedComment xmi:id="_Z5ITBbEXEeeP95al6XTTTg">
            <body>parse the given file.</body>
          </ownedComment>
          <ownedParameter xmi:id="_ZsrLYrEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZsrLY7EXEeeP95al6XTTTg" name="playFile">
          <ownedComment xmi:id="_Z5ITBrEXEeeP95al6XTTTg">
            <body>play the loaded file.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_ZsrycLEXEeeP95al6XTTTg" name="stopFile">
          <ownedComment xmi:id="_Z5ITB7EXEeeP95al6XTTTg">
            <body>stop the given file.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Zs8RILEXEeeP95al6XTTTg" name="MusicPlayerView">
        <generalization xmi:id="_Z3kMwLEXEeeP95al6XTTTg" general="_Z2dZgbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4YsIbEXEeeP95al6XTTTg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Z4YsIrEXEeeP95al6XTTTg" value="432253693325539503L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Z4ZTMLEXEeeP95al6XTTTg" name="contentPane" visibility="private" type="_Z2eAkbEXEeeP95al6XTTTg" association="_Z53S0bEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4ZTMrEXEeeP95al6XTTTg" name="txtFile" visibility="private" type="_Z2f1wbEXEeeP95al6XTTTg" association="_Z5354bEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4Z6QbEXEeeP95al6XTTTg" name="panelControls" visibility="private" type="_Z2eAkbEXEeeP95al6XTTTg" association="_Z54g8bEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4ahULEXEeeP95al6XTTTg" name="lblFile" visibility="private" type="_Z2fOsbEXEeeP95al6XTTTg" association="_Z55IAbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4ahUrEXEeeP95al6XTTTg" name="btnLoad" visibility="private" type="_Z2gc0bEXEeeP95al6XTTTg" association="_Z55vEbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4bIYbEXEeeP95al6XTTTg" name="btnParse" visibility="private" type="_Z2gc0bEXEeeP95al6XTTTg" association="_Z56WIbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4bvcLEXEeeP95al6XTTTg" name="comboBoxInstruments" visibility="private" type="_Z2hD4bEXEeeP95al6XTTTg" association="_Z569MbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4cWgbEXEeeP95al6XTTTg" name="btnPlay" visibility="private" type="_Z2gc0bEXEeeP95al6XTTTg" association="_Z57kQbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4c9kbEXEeeP95al6XTTTg" name="_iView2Model" visibility="private" type="_Zsp9QLEXEeeP95al6XTTTg" association="_Z58LUbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4c9k7EXEeeP95al6XTTTg" name="splitPane" visibility="private" type="_Z2hq8bEXEeeP95al6XTTTg" association="_Z58yYLEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4dkobEXEeeP95al6XTTTg" name="scrollPane_file" visibility="private" type="_Z2jgIbEXEeeP95al6XTTTg" association="_Z59ZcLEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4eLsbEXEeeP95al6XTTTg" name="scrollPane_parse" visibility="private" type="_Z2jgIbEXEeeP95al6XTTTg" association="_Z59Zc7EXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4eywLEXEeeP95al6XTTTg" name="textPane_file" visibility="private" type="_Z2lVUbEXEeeP95al6XTTTg" association="_Z5-AgbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4eywrEXEeeP95al6XTTTg" name="textPane_parse" visibility="private" type="_Z2lVUbEXEeeP95al6XTTTg" association="_Z5-nkbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z4fZ0bEXEeeP95al6XTTTg" name="btnStop" visibility="private" type="_Z2gc0bEXEeeP95al6XTTTg" association="_Z5_OobEXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z48FwLEXEeeP95al6XTTTg" name="MusicPlayerView" specification="_Z2nKgLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z48FwbEXEeeP95al6XTTTg" name="iView2Model" type="_Zsp9QLEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_Z48FwrEXEeeP95al6XTTTg" type="_Zs8RILEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>setMinimumSize(new Dimension(600, 0));&#xD;
		&#xD;
		_iView2Model = iView2Model;&#xD;
		init();		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z48Fw7EXEeeP95al6XTTTg" name="init" specification="_Zs-tYLEXEeeP95al6XTTTg">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		setBounds(100, 100, 667, 454);&#xD;
		contentPane = new JPanel();&#xD;
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));&#xD;
		contentPane.setLayout(new BorderLayout(0, 0));&#xD;
		setContentPane(contentPane);&#xD;
		&#xD;
		panelControls = new JPanel();&#xD;
		panelControls.setBackground(Color.LIGHT_GRAY);&#xD;
		panelControls.setToolTipText(&quot;Panel containing all the controls\r\n&quot;);&#xD;
		contentPane.add(panelControls, BorderLayout.NORTH);&#xD;
		&#xD;
		lblFile = new JLabel(&quot;File:&quot;);&#xD;
		lblFile.setToolTipText(&quot;File Descriptior&quot;);&#xD;
		panelControls.add(lblFile);&#xD;
		&#xD;
		txtFile = new JTextField();&#xD;
		txtFile.setToolTipText(&quot;File to load.&quot;);&#xD;
		txtFile.setText(&quot;File&quot;);&#xD;
		panelControls.add(txtFile);&#xD;
		txtFile.setColumns(10);&#xD;
		&#xD;
		btnLoad = new JButton(&quot;Load&quot;);&#xD;
		btnLoad.setToolTipText(&quot;Loads the indicated file\r\n&quot;);&#xD;
		panelControls.add(btnLoad);&#xD;
		btnLoad.addActionListener( new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				btnParse.setEnabled(true);&#xD;
				textPane_file.setText(_iView2Model.loadFile(txtFile.getText()));&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		btnParse = new JButton(&quot;Parse&quot;);&#xD;
		btnParse.setEnabled(false);&#xD;
&#xD;
		&#xD;
		btnParse.setToolTipText(&quot;Parses the selected file\r\n&quot;);&#xD;
		panelControls.add(btnParse);		&#xD;
		btnParse.addActionListener( new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				textPane_parse.setText(_iView2Model.parseFile());&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		comboBoxInstruments = new JComboBox&lt;TInst>();&#xD;
		comboBoxInstruments.setToolTipText(&quot;The avalible instruments to choose from - please pick one&quot;);&#xD;
		panelControls.add(comboBoxInstruments);&#xD;
		for(TInst i : getInstruments())&#xD;
			comboBoxInstruments.addItem(i);&#xD;
		&#xD;
		btnPlay = new JButton(&quot;Play&quot;);&#xD;
		btnPlay.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				_iView2Model.playFile();&#xD;
			}&#xD;
		});&#xD;
		btnPlay.setToolTipText(&quot;Plays the file, once it is loaded&quot;);&#xD;
		panelControls.add(btnPlay);&#xD;
		&#xD;
		btnStop = new JButton(&quot;Stop&quot;);&#xD;
		btnStop.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				_iView2Model.stopFile();&#xD;
			}&#xD;
		});&#xD;
		btnStop.setToolTipText(&quot;Stop playing the music&quot;);&#xD;
		panelControls.add(btnStop);&#xD;
		&#xD;
		splitPane = new JSplitPane();&#xD;
		splitPane.setResizeWeight(0.5);&#xD;
		splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);&#xD;
		contentPane.add(splitPane, BorderLayout.CENTER);&#xD;
		&#xD;
		scrollPane_file = new JScrollPane();&#xD;
		scrollPane_file.setViewportBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null), &quot;File Content&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, new Color(0, 0, 0)));&#xD;
		splitPane.setLeftComponent(scrollPane_file);&#xD;
		&#xD;
		textPane_file = new JTextPane();&#xD;
		scrollPane_file.setViewportView(textPane_file);&#xD;
		&#xD;
		scrollPane_parse = new JScrollPane();&#xD;
		scrollPane_parse.setViewportBorder(new TitledBorder(null, &quot;Parsed IPhrase Structure&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));&#xD;
		splitPane.setRightComponent(scrollPane_parse);&#xD;
		&#xD;
		textPane_parse = new JTextPane();&#xD;
		scrollPane_parse.setViewportView(textPane_parse);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z48FxLEXEeeP95al6XTTTg" name="getInstruments" specification="_Zs_UcLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z48FxbEXEeeP95al6XTTTg" type="_Z2cycbEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;TInst> instruments = new ArrayList&lt;TInst>();&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Piano 1&quot;, 0)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Bright Acoustic Piano&quot;, 1)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Harpsichord&quot;, 6)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Clavi&quot;, 7)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Music Box&quot;, 10)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Harmonica&quot;, 22)));&#xD;
		return instruments;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z48FxrEXEeeP95al6XTTTg" name="getSelectedInstrumentIndex" specification="_ZtBJoLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z48Fx7EXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>ABCInstrument i = (ABCInstrument) comboBoxInstruments.getSelectedItem();&#xD;
		return i.getValue();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z48s0LEXEeeP95al6XTTTg" name="start" specification="_ZtBJorEXEeeP95al6XTTTg">
          <language>java</language>
          <body>setVisible(true);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Zs-tYLEXEeeP95al6XTTTg" name="init" method="_Z48Fw7EXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z5JhIrEXEeeP95al6XTTTg">
            <body>initiates the frame.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Zs_UcLEXEeeP95al6XTTTg" name="getInstruments" method="_Z48FxLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z3jlsLEXEeeP95al6XTTTg" type="_Z2cycbEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ZtBJoLEXEeeP95al6XTTTg" name="getSelectedInstrumentIndex" method="_Z48FxrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z5JhJLEXEeeP95al6XTTTg">
            <body>returns the index of the selected instrument of the combo box</body>
          </ownedComment>
          <ownedParameter xmi:id="_ZtBJobEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZtBJorEXEeeP95al6XTTTg" name="start" method="_Z48s0LEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z5JhJbEXEeeP95al6XTTTg">
            <body>starts the view</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Z2nKgLEXEeeP95al6XTTTg" name="MusicPlayerView" method="_Z48FwLEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_Z2nKgrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Z2nKg7EXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_Z5JhIbEXEeeP95al6XTTTg">
            <body>Create the frame.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Z2nKgbEXEeeP95al6XTTTg" name="iView2Model" type="_Zsp9QLEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_Z2nKhLEXEeeP95al6XTTTg" type="_Zs8RILEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z53S0bEXEeeP95al6XTTTg" name="" memberEnd="_Z53S0rEXEeeP95al6XTTTg _Z4ZTMLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z53S0rEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z53S0bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5354bEXEeeP95al6XTTTg" name="" memberEnd="_Z5354rEXEeeP95al6XTTTg _Z4ZTMrEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5354rEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z5354bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z54g8bEXEeeP95al6XTTTg" name="" memberEnd="_Z54g8rEXEeeP95al6XTTTg _Z4Z6QbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z54g8rEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z54g8bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z55IAbEXEeeP95al6XTTTg" name="" memberEnd="_Z55IArEXEeeP95al6XTTTg _Z4ahULEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z55IArEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z55IAbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z55vEbEXEeeP95al6XTTTg" name="" memberEnd="_Z55vErEXEeeP95al6XTTTg _Z4ahUrEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z55vErEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z55vEbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z56WIbEXEeeP95al6XTTTg" name="" memberEnd="_Z56WIrEXEeeP95al6XTTTg _Z4bIYbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z56WIrEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z56WIbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z569MbEXEeeP95al6XTTTg" name="" memberEnd="_Z569MrEXEeeP95al6XTTTg _Z4bvcLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z569MrEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z569MbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z57kQbEXEeeP95al6XTTTg" name="" memberEnd="_Z57kQrEXEeeP95al6XTTTg _Z4cWgbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z57kQrEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z57kQbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z58LUbEXEeeP95al6XTTTg" name="" memberEnd="_Z58LUrEXEeeP95al6XTTTg _Z4c9kbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z58LUrEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z58LUbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z58yYLEXEeeP95al6XTTTg" name="" memberEnd="_Z58yYbEXEeeP95al6XTTTg _Z4c9k7EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z58yYbEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z58yYLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z59ZcLEXEeeP95al6XTTTg" name="" memberEnd="_Z59ZcbEXEeeP95al6XTTTg _Z4dkobEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z59ZcbEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z59ZcLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z59Zc7EXEeeP95al6XTTTg" name="" memberEnd="_Z59ZdLEXEeeP95al6XTTTg _Z4eLsbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z59ZdLEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z59Zc7EXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5-AgbEXEeeP95al6XTTTg" name="" memberEnd="_Z5-AgrEXEeeP95al6XTTTg _Z4eywLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5-AgrEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z5-AgbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5-nkbEXEeeP95al6XTTTg" name="" memberEnd="_Z5-nkrEXEeeP95al6XTTTg _Z4eywrEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5-nkrEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z5-nkbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5_OobEXEeeP95al6XTTTg" name="" memberEnd="_Z5_OorEXEeeP95al6XTTTg _Z4fZ0bEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5_OorEXEeeP95al6XTTTg" name="" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z5_OobEXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZlwEALEXEeeP95al6XTTTg" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_ZpkNALEXEeeP95al6XTTTg" name="MusicPlayerController">
        <ownedComment xmi:id="_Z4_JELEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
The Controller class</body>
        </ownedComment>
        <ownedAttribute xmi:id="_Z3q6cLEXEeeP95al6XTTTg" name="musicPlayerModel" visibility="private" type="_ZptW8LEXEeeP95al6XTTTg" association="_Z5dDIbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_Z3rhgLEXEeeP95al6XTTTg" name="musicPlayerView" visibility="private" type="_Zs8RILEXEeeP95al6XTTTg" association="_Z5dqMbEXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4idILEXEeeP95al6XTTTg" name="MusicPlayerController" specification="_ZpmpQLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z4idIbEXEeeP95al6XTTTg" type="_ZpkNALEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>// set the view field&#xD;
		musicPlayerView = new MusicPlayerView&lt;ABCInstrument>(new IView2ModelControlAdapter() {&#xD;
			public String loadFile(String file) {&#xD;
				return musicPlayerModel.loadFile(file);				&#xD;
			}&#xD;
			public String parseFile() {&#xD;
				return musicPlayerModel.parseFile();&#xD;
			}&#xD;
			public void playFile() {&#xD;
				musicPlayerModel.playFile(musicPlayerView.getSelectedInstrumentIndex());&#xD;
			}&#xD;
			public void stopFile() {&#xD;
				musicPlayerModel.stopFile();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		// set the model field&#xD;
		musicPlayerModel = new MusicPlayerModel(new IModel2ViewAdapter() {&#xD;
			public SequencePlayer2 getPlayer() {&#xD;
				return musicPlayerModel.getPlayer();&#xD;
			}&#xD;
			&#xD;
			&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4jEMLEXEeeP95al6XTTTg" name="start" specification="_ZpnQUbEXEeeP95al6XTTTg">
          <language>java</language>
          <body>musicPlayerModel.start(); // It is usually better to start the model first but not always.&#xD;
		musicPlayerView.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z4jEMbEXEeeP95al6XTTTg" name="main" specification="_Zpn3YLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_Z4jEMrEXEeeP95al6XTTTg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Z4jEM7EXEeeP95al6XTTTg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() { // Java specs say that the system must be constructed on the GUI event thread.&#xD;
			public void run() {&#xD;
				try {&#xD;
					MusicPlayerController controller = new MusicPlayerController(); // instantiate the system&#xD;
					controller.start(); // start the system&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ZpmpQLEXEeeP95al6XTTTg" name="MusicPlayerController" method="_Z4idILEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_ZpmpQbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ZpmpQrEXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_Z4_JEbEXEeeP95al6XTTTg">
            <body>Controller constructor builds the system</body>
          </ownedComment>
          <ownedParameter xmi:id="_ZpnQULEXEeeP95al6XTTTg" type="_ZpkNALEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ZpnQUbEXEeeP95al6XTTTg" name="start" method="_Z4jEMLEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z4_JErEXEeeP95al6XTTTg">
            <body>Start the system</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_Zpn3YLEXEeeP95al6XTTTg" name="main" isStatic="true" method="_Z4jEMbEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_Z4_wILEXEeeP95al6XTTTg">
            <body>Launch the application.&#xD;
	 * @param args Arguments given by the system or command line.</body>
          </ownedComment>
          <ownedParameter xmi:id="_Zpn3YbEXEeeP95al6XTTTg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZpoecLEXEeeP95al6XTTTg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5dDIbEXEeeP95al6XTTTg" name="" memberEnd="_Z5dDIrEXEeeP95al6XTTTg _Z3q6cLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5dDIrEXEeeP95al6XTTTg" name="" type="_ZpkNALEXEeeP95al6XTTTg" association="_Z5dDIbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Z5dqMbEXEeeP95al6XTTTg" name="" memberEnd="_Z5dqMrEXEeeP95al6XTTTg _Z3rhgLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_Z5dqMrEXEeeP95al6XTTTg" name="" type="_ZpkNALEXEeeP95al6XTTTg" association="_Z5dqMbEXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZnIkELEXEeeP95al6XTTTg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_ZnIkEbEXEeeP95al6XTTTg" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZnIkErEXEeeP95al6XTTTg" name="midi">
          <packagedElement xmi:type="uml:Class" xmi:id="_Z2XS4LEXEeeP95al6XTTTg" name="Instrument"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Z2X58bEXEeeP95al6XTTTg" name="MidiSystem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Z2ZIELEXEeeP95al6XTTTg" name="MidiUnavailableException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Z2ZvIbEXEeeP95al6XTTTg" name="Synthesizer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Z3R44LEXEeeP95al6XTTTg" name="Sequence"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Z3THALEXEeeP95al6XTTTg" name="Track"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Z3UVILEXEeeP95al6XTTTg" name="Sequencer"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZoHbgLEXEeeP95al6XTTTg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZoHbgbEXEeeP95al6XTTTg" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_Z2enobEXEeeP95al6XTTTg" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Z2i5EbEXEeeP95al6XTTTg" name="TitledBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Z2kHMbEXEeeP95al6XTTTg" name="EtchedBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2dZgbEXEeeP95al6XTTTg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2eAkbEXEeeP95al6XTTTg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2fOsbEXEeeP95al6XTTTg" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2f1wbEXEeeP95al6XTTTg" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2gc0bEXEeeP95al6XTTTg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2hD4bEXEeeP95al6XTTTg" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2hq8bEXEeeP95al6XTTTg" name="JSplitPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2jgIbEXEeeP95al6XTTTg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Z2lVUbEXEeeP95al6XTTTg" name="JTextPane"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_YyDWMLEXEeeP95al6XTTTg">
      <eAnnotations xmi:id="_YyDWMbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_YyD9QLEXEeeP95al6XTTTg" base_Package="_YtAeILEXEeeP95al6XTTTg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zp3vALEXEeeP95al6XTTTg" base_Element="_Zp3H8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqbIorEXEeeP95al6XTTTg" base_Element="_ZqahkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqgoMbEXEeeP95al6XTTTg" base_Element="_ZqgBILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Zqh2ULEXEeeP95al6XTTTg" base_Element="_ZqgBILEXEeeP95al6XTTTg">
    <annotations xmi:id="_Zqh2UbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqyVALEXEeeP95al6XTTTg" base_Element="_Zqxt8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_ZrPA8LEXEeeP95al6XTTTg" base_Element="_ZrOZ4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrSEQ7EXEeeP95al6XTTTg" base_Element="_ZrSEQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrUggbEXEeeP95al6XTTTg" base_Element="_ZrT5cLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrVHkLEXEeeP95al6XTTTg" base_Element="_ZrT5cLEXEeeP95al6XTTTg">
    <annotations xmi:id="_ZrVHkbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZsSw4LEXEeeP95al6XTTTg" base_Element="_ZsRiwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zse-ILEXEeeP95al6XTTTg" base_Element="_ZseXEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:StyledElement xmi:id="_ZsflMbEXEeeP95al6XTTTg" base_Element="_ZsflMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZsjPkbEXEeeP95al6XTTTg" base_Element="_ZsiogbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Zsj2oLEXEeeP95al6XTTTg" base_Element="_ZsiogbEXEeeP95al6XTTTg">
    <annotations xmi:id="_Zsj2obEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZskdsLEXEeeP95al6XTTTg" base_Element="_Zsj2orEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_ZslEwLEXEeeP95al6XTTTg" base_Element="_Zsj2orEXEeeP95al6XTTTg">
    <annotations xmi:id="_ZslEwbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zs4mwrEXEeeP95al6XTTTg" base_Element="_Zs3_sLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Zs7DAbEXEeeP95al6XTTTg" base_Element="_Zs6b87EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Zs84MLEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_Zs8RILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Zs_7gLEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_Zs_UcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zs_7gbEXEeeP95al6XTTTg" base_Element="_Zs_UcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_ZtAikLEXEeeP95al6XTTTg" base_Element="_Zs_UcLEXEeeP95al6XTTTg">
    <annotations xmi:id="_ZtAikbEXEeeP95al6XTTTg" name="SuppressWarnings">
      <annotationParameters xmi:id="_ZtAikrEXEeeP95al6XTTTg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Z5JhI7EXEeeP95al6XTTTg" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Z1ESYLEXEeeP95al6XTTTg" base_Element="_Z1DEQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z1GuoLEXEeeP95al6XTTTg" base_Element="_Z1GHkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z1PRgLEXEeeP95al6XTTTg" base_Element="_Z1OqcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z1P4kLEXEeeP95al6XTTTg" base_Element="_Z1PRgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z1ZCgrEXEeeP95al6XTTTg" base_Element="_Z1YbcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z1ZpkLEXEeeP95al6XTTTg" base_Element="_Z1YbcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z1eiELEXEeeP95al6XTTTg" base_Element="_Z1d7ALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z1eiE7EXEeeP95al6XTTTg" base_Element="_Z1d7AbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z1r9cLEXEeeP95al6XTTTg" base_Element="_Z1rWYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z1r9c7EXEeeP95al6XTTTg" base_Element="_Z1rWYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z1tLlLEXEeeP95al6XTTTg" base_Element="_Z1tLkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z1tyorEXEeeP95al6XTTTg" base_Element="_Z1tLkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z1vn0LEXEeeP95al6XTTTg" base_Element="_Z1vAwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z1vn0rEXEeeP95al6XTTTg" base_Element="_Z1vAwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z12VgLEXEeeP95al6XTTTg" base_Element="_Z11ucLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z12Vg7EXEeeP95al6XTTTg" dimensions="1" base_Element="_Z11ucbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:StyledElement xmi:id="_Z2M607EXEeeP95al6XTTTg" base_Element="_Z2M60bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2OI8LEXEeeP95al6XTTTg" base_Element="_Z2Nh4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2OwALEXEeeP95al6XTTTg" base_Element="_Z2OI8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2PXELEXEeeP95al6XTTTg" base_Element="_Z2OwAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2P-ILEXEeeP95al6XTTTg" base_Element="_Z2PXEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2RMQLEXEeeP95al6XTTTg" base_Element="_Z2QlMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2RzULEXEeeP95al6XTTTg" base_Element="_Z2RMQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2SaYLEXEeeP95al6XTTTg" base_Element="_Z2RzUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2X58LEXEeeP95al6XTTTg" base_Element="_Z2XS4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2YhALEXEeeP95al6XTTTg" base_Element="_Z2X58bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2ZvILEXEeeP95al6XTTTg" base_Element="_Z2ZIELEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2aWMLEXEeeP95al6XTTTg" base_Element="_Z2ZvIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2bkULEXEeeP95al6XTTTg" base_Element="_Z2a9QLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2cLYLEXEeeP95al6XTTTg" base_Element="_Z2bkUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2cycLEXEeeP95al6XTTTg" base_Element="_Z2cLYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2dZgLEXEeeP95al6XTTTg" base_Element="_Z2cycbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2eAkLEXEeeP95al6XTTTg" base_Element="_Z2dZgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2enoLEXEeeP95al6XTTTg" base_Element="_Z2eAkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2fOsLEXEeeP95al6XTTTg" base_Element="_Z2enobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2f1wLEXEeeP95al6XTTTg" base_Element="_Z2fOsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2gc0LEXEeeP95al6XTTTg" base_Element="_Z2f1wbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2hD4LEXEeeP95al6XTTTg" base_Element="_Z2gc0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2hq8LEXEeeP95al6XTTTg" base_Element="_Z2hD4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2iSALEXEeeP95al6XTTTg" base_Element="_Z2hq8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2i5ELEXEeeP95al6XTTTg" base_Element="_Z2iSAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2jgILEXEeeP95al6XTTTg" base_Element="_Z2i5EbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2kHMLEXEeeP95al6XTTTg" base_Element="_Z2jgIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2kuQLEXEeeP95al6XTTTg" base_Element="_Z2kHMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2lVULEXEeeP95al6XTTTg" base_Element="_Z2kuQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z2l8YLEXEeeP95al6XTTTg" base_Element="_Z2lVUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z22bELEXEeeP95al6XTTTg" base_Element="_Z210ALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z243UbEXEeeP95al6XTTTg" base_Element="_Z243ULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z26FcbEXEeeP95al6XTTTg" base_Element="_Z25eYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z26Fc7EXEeeP95al6XTTTg" base_Element="_Z25eY7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z276oLEXEeeP95al6XTTTg" base_Element="_Z27TkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z276orEXEeeP95al6XTTTg" base_Element="_Z27TkrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z28hsLEXEeeP95al6XTTTg" base_Element="_Z27TkLEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z28hsbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z29v0LEXEeeP95al6XTTTg" base_Element="_Z29IwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z29v0rEXEeeP95al6XTTTg" base_Element="_Z29IwrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z2-W4LEXEeeP95al6XTTTg" base_Element="_Z29IwLEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z2-W4bEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z2_lAbEXEeeP95al6XTTTg" base_Element="_Z2-98LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z2_lA7EXEeeP95al6XTTTg" base_Element="_Z2-98rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z3AMELEXEeeP95al6XTTTg" base_Element="_Z2-98LEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z3AMEbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3CBQLEXEeeP95al6XTTTg" base_Element="_Z3AzILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3CBQrEXEeeP95al6XTTTg" dimensions="1" base_Element="_Z3BaMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z3CoULEXEeeP95al6XTTTg" base_Element="_Z3AzILEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z3CoUbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3D2cLEXEeeP95al6XTTTg" base_Element="_Z3DPYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3D2crEXEeeP95al6XTTTg" base_Element="_Z3DPYrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3EdhLEXEeeP95al6XTTTg" base_Element="_Z3D2c7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3FEkLEXEeeP95al6XTTTg" base_Element="_Z3EdgrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3FroLEXEeeP95al6XTTTg" base_Element="_Z3FEkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3FrorEXEeeP95al6XTTTg" base_Element="_Z3FElLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3G5wLEXEeeP95al6XTTTg" base_Element="_Z3GSsLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3G5wrEXEeeP95al6XTTTg" base_Element="_Z3GSsrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z3G5w7EXEeeP95al6XTTTg" base_Element="_Z3GSsLEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z3G5xLEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3IH4rEXEeeP95al6XTTTg" base_Element="_Z3Hg0LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3Iu8LEXEeeP95al6XTTTg" base_Element="_Z3IH4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z3Iu8bEXEeeP95al6XTTTg" base_Element="_Z3Hg0LEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z3Iu8rEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3KkILEXEeeP95al6XTTTg" base_Element="_Z3J9ELEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3KkIrEXEeeP95al6XTTTg" base_Element="_Z3J9ErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z3KkI7EXEeeP95al6XTTTg" base_Element="_Z3J9ELEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z3KkJLEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3NAYrEXEeeP95al6XTTTg" base_Element="_Z3MZULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3NncbEXEeeP95al6XTTTg" base_Element="_Z3NAYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z3NncrEXEeeP95al6XTTTg" base_Element="_Z3MZULEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z3Nnc7EXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3PcoLEXEeeP95al6XTTTg" base_Element="_Z3O1kLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3PcorEXEeeP95al6XTTTg" base_Element="_Z3O1krEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z3QDsLEXEeeP95al6XTTTg" base_Element="_Z3O1kLEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z3QDsbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3RR0LEXEeeP95al6XTTTg" base_Element="_Z3QqwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3RR0rEXEeeP95al6XTTTg" base_Element="_Z3QqwrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_Z3RR07EXEeeP95al6XTTTg" base_Element="_Z3QqwLEXEeeP95al6XTTTg">
    <annotations xmi:id="_Z3RR1LEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Z3Sf8LEXEeeP95al6XTTTg" base_Element="_Z3R44LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z3TuELEXEeeP95al6XTTTg" base_Element="_Z3THALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z3U8MLEXEeeP95al6XTTTg" base_Element="_Z3UVILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3X_gbEXEeeP95al6XTTTg" base_Element="_Z3XYcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3X_g7EXEeeP95al6XTTTg" base_Element="_Z3XYc7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3ZNobEXEeeP95al6XTTTg" base_Element="_Z3YmkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3ZNo7EXEeeP95al6XTTTg" base_Element="_Z3Ymk7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3bC0LEXEeeP95al6XTTTg" base_Element="_Z3abwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3bC0rEXEeeP95al6XTTTg" base_Element="_Z3abw7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3cQ8bEXEeeP95al6XTTTg" base_Element="_Z3bp4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3cQ87EXEeeP95al6XTTTg" base_Element="_Z3bp4rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z3dfELEXEeeP95al6XTTTg" base_Element="_Z3c4ALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z3hwgLEXEeeP95al6XTTTg" base_Element="_Z3hJcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3q6cbEXEeeP95al6XTTTg" base_Element="_Z3q6cLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Z3sIkLEXEeeP95al6XTTTg" genericsValue="ABCInstrument" base_Element="_Z3rhgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3sIkbEXEeeP95al6XTTTg" base_Element="_Z3rhgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3svorEXEeeP95al6XTTTg" base_Element="_Z3svobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3tWsbEXEeeP95al6XTTTg" base_Element="_Z3tWsLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3t9wLEXEeeP95al6XTTTg" base_Element="_Z3tWsrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3t9wrEXEeeP95al6XTTTg" base_Element="_Z3t9wbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3vL4LEXEeeP95al6XTTTg" base_Element="_Z3uk0LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3vL47EXEeeP95al6XTTTg" base_Element="_Z3vL4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Z3waALEXEeeP95al6XTTTg" genericsValue="DecoratorSeqList" base_Element="_Z3vy8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3waArEXEeeP95al6XTTTg" base_Element="_Z3vy8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Z3xoILEXEeeP95al6XTTTg" genericsValue="DecoratorSeqList" base_Element="_Z3waA7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3yPMLEXEeeP95al6XTTTg" base_Element="_Z3waA7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3y2QLEXEeeP95al6XTTTg" base_Element="_Z3yPMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3y2Q7EXEeeP95al6XTTTg" base_Element="_Z3y2QbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3zdUrEXEeeP95al6XTTTg" base_Element="_Z3zdULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z30EYLEXEeeP95al6XTTTg" base_Element="_Z3zdU7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z30rcLEXEeeP95al6XTTTg" base_Element="_Z30EYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z30rc7EXEeeP95al6XTTTg" base_Element="_Z30rcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z315kLEXEeeP95al6XTTTg" base_Element="_Z31SgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z32gobEXEeeP95al6XTTTg" base_Element="_Z32goLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z33HsrEXEeeP95al6XTTTg" base_Element="_Z33HsLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z34V0rEXEeeP95al6XTTTg" base_Element="_Z34V0LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3484bEXEeeP95al6XTTTg" base_Element="_Z34V07EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z35j8LEXEeeP95al6XTTTg" base_Element="_Z3484rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z35j8rEXEeeP95al6XTTTg" base_Element="_Z35j8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z36yE7EXEeeP95al6XTTTg" base_Element="_Z36yErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z37ZILEXEeeP95al6XTTTg" base_Element="_Z36yFLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z38AMLEXEeeP95al6XTTTg" base_Element="_Z37ZIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z391YLEXEeeP95al6XTTTg" base_Element="_Z39OVLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3-ccLEXEeeP95al6XTTTg" dimensions="1" base_Element="_Z391YbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3-ccbEXEeeP95al6XTTTg" base_Element="_Z391YbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z3_DgbEXEeeP95al6XTTTg" dimensions="1" base_Element="_Z3-ccrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3_qkLEXEeeP95al6XTTTg" base_Element="_Z3-ccrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z3_qk7EXEeeP95al6XTTTg" base_Element="_Z3_qkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4A4sbEXEeeP95al6XTTTg" base_Element="_Z4A4sLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4BfwLEXEeeP95al6XTTTg" base_Element="_Z4A4srEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4CG0LEXEeeP95al6XTTTg" base_Element="_Z4Bfw7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4CG0rEXEeeP95al6XTTTg" base_Element="_Z4CG0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4Ct4LEXEeeP95al6XTTTg" base_Element="_Z4CG07EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4Ct4rEXEeeP95al6XTTTg" base_Element="_Z4Ct4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4DU8LEXEeeP95al6XTTTg" base_Element="_Z4Ct47EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4DU8rEXEeeP95al6XTTTg" base_Element="_Z4DU8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4D8AbEXEeeP95al6XTTTg" base_Element="_Z4D8ALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4EjELEXEeeP95al6XTTTg" base_Element="_Z4D8ArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z4FKIrEXEeeP95al6XTTTg" base_Element="_Z4FKILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4G_ULEXEeeP95al6XTTTg" base_Element="_Z4GYQrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4G_UrEXEeeP95al6XTTTg" base_Element="_Z4G_UbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4HmYLEXEeeP95al6XTTTg" base_Element="_Z4G_U7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4INcLEXEeeP95al6XTTTg" base_Element="_Z4HmYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4INcrEXEeeP95al6XTTTg" base_Element="_Z4INcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4I0gLEXEeeP95al6XTTTg" base_Element="_Z4INc7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z4Jbk7EXEeeP95al6XTTTg" base_Element="_Z4I0gbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4KpsLEXEeeP95al6XTTTg" base_Element="_Z4KCoLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4LQwLEXEeeP95al6XTTTg" base_Element="_Z4KpsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4L30bEXEeeP95al6XTTTg" base_Element="_Z4L30LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4Me4LEXEeeP95al6XTTTg" base_Element="_Z4L30rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4NtALEXEeeP95al6XTTTg" base_Element="_Z4NF8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4OUEbEXEeeP95al6XTTTg" base_Element="_Z4NtArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Z4O7IbEXEeeP95al6XTTTg" genericsValue="Map&lt;String, String>" base_Element="_Z4O7ILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4PiMbEXEeeP95al6XTTTg" base_Element="_Z4O7ILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4QJQLEXEeeP95al6XTTTg" base_Element="_Z4PiMrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Z4QwULEXEeeP95al6XTTTg" genericsValue="Token" base_Element="_Z4QJQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4QwUrEXEeeP95al6XTTTg" base_Element="_Z4QJQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Z4R-cbEXEeeP95al6XTTTg" genericsValue="String" base_Element="_Z4R-cLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4SlgbEXEeeP95al6XTTTg" base_Element="_Z4R-cLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4TMkLEXEeeP95al6XTTTg" base_Element="_Z4SlgrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4TMkrEXEeeP95al6XTTTg" base_Element="_Z4TMkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z4UasrEXEeeP95al6XTTTg" base_Element="_Z4UasLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z4VBwbEXEeeP95al6XTTTg" base_Element="_Z4UatLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4Vo0LEXEeeP95al6XTTTg" base_Element="_Z4VBw7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4Vo0rEXEeeP95al6XTTTg" base_Element="_Z4Vo0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4WP4rEXEeeP95al6XTTTg" base_Element="_Z4WP4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z4W28bEXEeeP95al6XTTTg" base_Element="_Z4WP5LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4W287EXEeeP95al6XTTTg" base_Element="_Z4WP5LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_Z4XeAbEXEeeP95al6XTTTg" base_Element="_Z4W29LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4XeA7EXEeeP95al6XTTTg" base_Element="_Z4W29LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4ZTMbEXEeeP95al6XTTTg" base_Element="_Z4ZTMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4Z6QLEXEeeP95al6XTTTg" base_Element="_Z4ZTMrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4Z6QrEXEeeP95al6XTTTg" base_Element="_Z4Z6QbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4ahUbEXEeeP95al6XTTTg" base_Element="_Z4ahULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4bIYLEXEeeP95al6XTTTg" base_Element="_Z4ahUrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4bIYrEXEeeP95al6XTTTg" base_Element="_Z4bIYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_Z4bvcbEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_Z4bvcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4cWgLEXEeeP95al6XTTTg" base_Element="_Z4bvcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4c9kLEXEeeP95al6XTTTg" base_Element="_Z4cWgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4c9krEXEeeP95al6XTTTg" base_Element="_Z4c9kbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4dkoLEXEeeP95al6XTTTg" base_Element="_Z4c9k7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4eLsLEXEeeP95al6XTTTg" base_Element="_Z4dkobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4eLsrEXEeeP95al6XTTTg" base_Element="_Z4eLsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4eywbEXEeeP95al6XTTTg" base_Element="_Z4eywLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4fZ0LEXEeeP95al6XTTTg" base_Element="_Z4eywrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Z4fZ0rEXEeeP95al6XTTTg" base_Element="_Z4fZ0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5am4LEXEeeP95al6XTTTg" base_Element="_Z5Z_0LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5bN8LEXEeeP95al6XTTTg" base_Element="_Z5am4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5ccELEXEeeP95al6XTTTg" base_Element="_Z5b1ALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5dDILEXEeeP95al6XTTTg" base_Element="_Z5ccEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5dqMLEXEeeP95al6XTTTg" base_Element="_Z5dDIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5eRQLEXEeeP95al6XTTTg" base_Element="_Z5dqMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5e4ULEXEeeP95al6XTTTg" base_Element="_Z5eRQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5ffYLEXEeeP95al6XTTTg" base_Element="_Z5e4UbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5gGcLEXEeeP95al6XTTTg" base_Element="_Z5ffYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5gtgLEXEeeP95al6XTTTg" base_Element="_Z5gGcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5h7oLEXEeeP95al6XTTTg" base_Element="_Z5gtgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5iisLEXEeeP95al6XTTTg" base_Element="_Z5h7obEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5jJwLEXEeeP95al6XTTTg" base_Element="_Z5iisbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5jw0LEXEeeP95al6XTTTg" base_Element="_Z5jJwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5kX4LEXEeeP95al6XTTTg" base_Element="_Z5jw0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5k-8LEXEeeP95al6XTTTg" base_Element="_Z5kX4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5mNELEXEeeP95al6XTTTg" base_Element="_Z5lmALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5m0ILEXEeeP95al6XTTTg" base_Element="_Z5mNEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5nbMLEXEeeP95al6XTTTg" base_Element="_Z5m0IbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5oCQLEXEeeP95al6XTTTg" base_Element="_Z5nbMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5pQYLEXEeeP95al6XTTTg" base_Element="_Z5oCQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5p3cLEXEeeP95al6XTTTg" base_Element="_Z5pQYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5qegLEXEeeP95al6XTTTg" base_Element="_Z5p3cbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5rFkLEXEeeP95al6XTTTg" base_Element="_Z5qegbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5rsoLEXEeeP95al6XTTTg" base_Element="_Z5rFkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5sTsLEXEeeP95al6XTTTg" base_Element="_Z5rsobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5s6wLEXEeeP95al6XTTTg" base_Element="_Z5sTsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5th0LEXEeeP95al6XTTTg" base_Element="_Z5s6wbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5uI4rEXEeeP95al6XTTTg" base_Element="_Z5uI4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5vXALEXEeeP95al6XTTTg" base_Element="_Z5uv8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5v-ELEXEeeP95al6XTTTg" base_Element="_Z5vXAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5wlILEXEeeP95al6XTTTg" base_Element="_Z5v-EbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5xMMLEXEeeP95al6XTTTg" base_Element="_Z5wlIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5xzQLEXEeeP95al6XTTTg" base_Element="_Z5xMMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5xzQ7EXEeeP95al6XTTTg" base_Element="_Z5xzQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5yaUrEXEeeP95al6XTTTg" base_Element="_Z5yaULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5zBYLEXEeeP95al6XTTTg" base_Element="_Z5yaU7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5zBY7EXEeeP95al6XTTTg" base_Element="_Z5zBYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5zocLEXEeeP95al6XTTTg" base_Element="_Z5zBZLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5zoc7EXEeeP95al6XTTTg" base_Element="_Z5zocbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z50PgLEXEeeP95al6XTTTg" base_Element="_Z5zodLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z502kLEXEeeP95al6XTTTg" base_Element="_Z50PgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z51doLEXEeeP95al6XTTTg" base_Element="_Z502kbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z52EsLEXEeeP95al6XTTTg" base_Element="_Z51dobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z52rwLEXEeeP95al6XTTTg" base_Element="_Z52EsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z53S0LEXEeeP95al6XTTTg" base_Element="_Z52rwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5354LEXEeeP95al6XTTTg" base_Element="_Z53S0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z54g8LEXEeeP95al6XTTTg" base_Element="_Z5354bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z55IALEXEeeP95al6XTTTg" base_Element="_Z54g8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z55vELEXEeeP95al6XTTTg" base_Element="_Z55IAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z56WILEXEeeP95al6XTTTg" base_Element="_Z55vEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z569MLEXEeeP95al6XTTTg" base_Element="_Z56WIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z57kQLEXEeeP95al6XTTTg" base_Element="_Z569MbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z58LULEXEeeP95al6XTTTg" base_Element="_Z57kQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z58LU7EXEeeP95al6XTTTg" base_Element="_Z58LUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z58yYrEXEeeP95al6XTTTg" base_Element="_Z58yYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z59ZcrEXEeeP95al6XTTTg" base_Element="_Z59ZcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5-AgLEXEeeP95al6XTTTg" base_Element="_Z59Zc7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5-nkLEXEeeP95al6XTTTg" base_Element="_Z5-AgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5_OoLEXEeeP95al6XTTTg" base_Element="_Z5-nkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_Z5_1sLEXEeeP95al6XTTTg" base_Element="_Z5_OobEXEeeP95al6XTTTg"/>
</xmi:XMI>
