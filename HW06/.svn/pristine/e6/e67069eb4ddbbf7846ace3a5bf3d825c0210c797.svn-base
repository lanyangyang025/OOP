<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_fZxRELEXEeeP95al6XTTTg" name="MusicView">
    <eAnnotations xmi:id="_feIzsLEXEeeP95al6XTTTg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_feIzsbEXEeeP95al6XTTTg" source="codegen">
        <details xmi:id="_feIzsrEXEeeP95al6XTTTg" key="codegenDirectory" value="/HW06/src"/>
        <details xmi:id="_gg0_wLEXEeeP95al6XTTTg" key="AssociatedSourceCode" value="/HW06/src/controller/MusicPlayerController.java;2283594585/1;/HW06/src/model/IModel2ViewAdapter.java;3803546862/1;/HW06/src/model/MusicPlayerModel.java;793601/1;/HW06/src/provided/abcParser/ABCParser.java;3153405954/1;/HW06/src/provided/music/APhraseVisitor.java;1010602946/1;/HW06/src/provided/music/Chord.java;1971309365/1;/HW06/src/provided/music/DecoratorSeqList.java;2350535095/1;/HW06/src/provided/music/FineToggleDecoratorSeqList.java;2903020233/1;/HW06/src/provided/music/Header.java;855643762/1;/HW06/src/provided/music/INote.java;507512117/1;/HW06/src/provided/music/IPhrase.java;1122806289/1;/HW06/src/provided/music/IPhraseVisitor.java;2583970647/1;/HW06/src/provided/music/IPhraseVisitorCmd.java;3144788355/1;/HW06/src/provided/music/ISeqList.java;1752096597/1;/HW06/src/provided/music/MTSeqList.java;797718925/1;/HW06/src/provided/music/NESeqList.java;240802844/1;/HW06/src/provided/music/Note.java;141424783/1;/HW06/src/provided/music/NoteCollection.java;2061496451/1;/HW06/src/provided/music/ToggleDecoratorSeqList.java;3430233739/1;/HW06/src/provided/music/Triplet.java;163966482/1;/HW06/src/provided/music/Tuplet.java;799272193/1;/HW06/src/provided/music/visitor/playerAlgo.java;2604221261/1;/HW06/src/provided/music/visitor/toStringAlgo.java;3630904698/1;/HW06/src/provided/player/ISequencePlayerStatus.java;2951061270/1;/HW06/src/provided/player/SequencePlayer.java;1814505560/1;/HW06/src/provided/player/SequencePlayer2.java;1631007379/1;/HW06/src/provided/token/ATokVisitor.java;2901257995/1;/HW06/src/provided/token/ITokVisitor.java;275599564/1;/HW06/src/provided/token/ITokVisitorCmd.java;4098180758/1;/HW06/src/provided/token/ITokenFactory.java;1037223879/1;/HW06/src/provided/token/Token.java;2670746935/1;/HW06/src/provided/token/TokenFactory.java;1190700287/1;/HW06/src/provided/token/tokenizer/ABCTokenizer.java;2224825631/1;/HW06/src/provided/token/tokenizer/IStringTokenizer.java;2530580852/1;/HW06/src/provided/token/tokenizer/ITokenizer.java;1031763823/1;/HW06/src/provided/token/tokenizer/StringTokenizer.java;3408517212/1;/HW06/src/provided/util/ABCInstrument.java;1182473716/1;/HW06/src/provided/util/KeySignature.java;3543793777/1;/HW06/src/provided/util/ABCUtil.java;817699883/1;/HW06/src/view/IView2ModelControlAdapter.java;3162454401/1;/HW06/src/view/MusicPlayerView.java;1357472571/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_gMFe0LEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_gMGF4LEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_gMGF4bEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_gMGF4rEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_gMGF47EXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_gMGF5LEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_gMGF5bEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_gMGF5rEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_gMGF57EXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_gMGs8LEXEeeP95al6XTTTg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_gMHUALEXEeeP95al6XTTTg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_gNE9ULEXEeeP95al6XTTTg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_gTJJEbEXEeeP95al6XTTTg" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gTJwILEXEeeP95al6XTTTg" name="ActionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gSfBwLEXEeeP95al6XTTTg" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTIiALEXEeeP95al6XTTTg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTMzc7EXEeeP95al6XTTTg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTPPsLEXEeeP95al6XTTTg" name="Color"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gMOBsLEXEeeP95al6XTTTg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_gSj6QLEXEeeP95al6XTTTg" name="Hashtable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gSkhUbEXEeeP95al6XTTTg" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTKXMLEXEeeP95al6XTTTg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTbc8LEXEeeP95al6XTTTg" name="Stack"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gT-PgLEXEeeP95al6XTTTg" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gM3h8LEXEeeP95al6XTTTg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_gS-J8LEXEeeP95al6XTTTg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gS-xALEXEeeP95al6XTTTg" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gS_YELEXEeeP95al6XTTTg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gS__IbEXEeeP95al6XTTTg" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTAmMLEXEeeP95al6XTTTg" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTAmMrEXEeeP95al6XTTTg" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTBNQbEXEeeP95al6XTTTg" name="StreamTokenizer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gTdSILEXEeeP95al6XTTTg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_gTdSIbEXEeeP95al6XTTTg" name="Object"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_gUAEsLEXEeeP95al6XTTTg" name="Character"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gMHUAbEXEeeP95al6XTTTg" name="model">
      <packagedElement xmi:type="uml:Interface" xmi:id="_gNyvALEXEeeP95al6XTTTg" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_gVB_dLEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
the IModel2ViewAdapter interface.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gNzWELEXEeeP95al6XTTTg" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_gNyvALEXEeeP95al6XTTTg" isReadOnly="true" association="_gVOzwLEXEeeP95al6XTTTg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gNzWEbEXEeeP95al6XTTTg" value="new IModel2ViewAdapter() {&#xD;&#xA;&#x9;&#x9;public SequencePlayer2 getPlayer() {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gNzWErEXEeeP95al6XTTTg" name="player" type="_gOpqoLEXEeeP95al6XTTTg" isReadOnly="true" association="_gVPa0bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gNz9ILEXEeeP95al6XTTTg" name="MusicPlayerModel">
        <ownedComment xmi:id="_gVB_dbEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
the ball world model class</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gUHZcrEXEeeP95al6XTTTg" name="player" type="_gOpqoLEXEeeP95al6XTTTg" isReadOnly="true" association="_gVSeILEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUHZc7EXEeeP95al6XTTTg" name="_iModel2View" visibility="private" type="_gNyvALEXEeeP95al6XTTTg" association="_gVSeI7EXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUIAgbEXEeeP95al6XTTTg" name="fileName" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gUIAg7EXEeeP95al6XTTTg" name="phrase" visibility="private" type="_gOPa8LEXEeeP95al6XTTTg" association="_gVTFMbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUInkbEXEeeP95al6XTTTg" name="make_playable" visibility="private" type="_gOqRsLEXEeeP95al6XTTTg" association="_gVTsQbEXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUvrkLEXEeeP95al6XTTTg" name="MusicPlayerModel" specification="_gSg28LEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gUvrkbEXEeeP95al6XTTTg" name="iModel2View" type="_gNyvALEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_gUvrkrEXEeeP95al6XTTTg" type="_gNz9ILEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>_iModel2View = iModel2View;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUvrk7EXEeeP95al6XTTTg" name="loadFile" specification="_gN1yUbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gUvrlLEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gUvrlbEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.fileName = &quot;/songs/&quot; + filename + &quot;.abc&quot;;&#xD;
	    return ABCUtil.Singleton.getFileContents(this.fileName);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUvrlrEXEeeP95al6XTTTg" name="parseFile" specification="_gN2ZYbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gUvrl7EXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>NESeqList.setToStringAlgo(new toStringAlgo());&#xD;
	    phrase = new ABCParser(this.fileName).parse();&#xD;
	    return phrase.toString();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUvrmLEXEeeP95al6XTTTg" name="playFile" specification="_gN2ZY7EXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gUvrmbEXEeeP95al6XTTTg" name="instrument">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>player = new SequencePlayer2(16, instrument);&#xD;
//		phrase = new Chord(new Note('G', 0, 0, 1.0, false), new Note('A', 0, 0, 1.0, false));&#xD;
//		phrase = new Triplet(new Note('G', 0, 0, 1.0, true), new Note('A', 0, 0, 1.0, false), new Note('C', 0, 0, 1.0, false));&#xD;
//		phrase = new Note('G', 0, 0, 1.0, false);&#xD;
		&#xD;
		player.setTicksPerDefaultNote(16);&#xD;
		player.setTempo(120);   &#xD;
&#xD;
		phrase.execute(new playerAlgo(), player, 1);&#xD;
		if(make_playable != null) {&#xD;
			make_playable.stop();&#xD;
		}&#xD;
		make_playable = player.makePlayable(ISequencePlayerStatus.NULL);&#xD;
		&#xD;
		make_playable.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUvrmrEXEeeP95al6XTTTg" name="stopFile" specification="_gN3AcbEXEeeP95al6XTTTg">
          <language>java</language>
          <body>make_playable.stop();	&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gN1LQLEXEeeP95al6XTTTg" name="start"/>
        <ownedOperation xmi:id="_gN1yUbEXEeeP95al6XTTTg" name="loadFile" method="_gUvrk7EXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVB_d7EXEeeP95al6XTTTg">
            <body>loads the given file.&#xD;
	 * @param filename the given file to load</body>
          </ownedComment>
          <ownedParameter xmi:id="_gN1yUrEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gN2ZYLEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gN2ZYbEXEeeP95al6XTTTg" name="parseFile" method="_gUvrlrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVB_eLEXEeeP95al6XTTTg">
            <body>parses the given file.&#xD;
	 * @param filename the given file to parse</body>
          </ownedComment>
          <ownedParameter xmi:id="_gN2ZYrEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gN2ZY7EXEeeP95al6XTTTg" name="playFile" method="_gUvrmLEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVB_ebEXEeeP95al6XTTTg">
            <body>plays the given file.&#xD;
	 * @param filename the given file to play</body>
          </ownedComment>
          <ownedParameter xmi:id="_gN3AcLEXEeeP95al6XTTTg" name="instrument">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gN3AcbEXEeeP95al6XTTTg" name="stopFile" method="_gUvrmrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVB_erEXEeeP95al6XTTTg">
            <body>stops the given file.&#xD;
	 * @param filename the given file to stop</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gSg28LEXEeeP95al6XTTTg" name="MusicPlayerModel" method="_gUvrkLEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_gSg28rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gSg287EXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gVB_drEXEeeP95al6XTTTg">
            <body>initiates the frame.&#xD;
	 * @param iModel2View the IModel2ViewAdapter that will be used throughout the instance</body>
          </ownedComment>
          <ownedParameter xmi:id="_gSg28bEXEeeP95al6XTTTg" name="iModel2View" type="_gNyvALEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_gSg29LEXEeeP95al6XTTTg" type="_gNz9ILEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gVOzwLEXEeeP95al6XTTTg" name="" memberEnd="_gVOzwbEXEeeP95al6XTTTg _gNzWELEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gVOzwbEXEeeP95al6XTTTg" name="" type="_gNyvALEXEeeP95al6XTTTg" association="_gVOzwLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gVPa0bEXEeeP95al6XTTTg" name="" memberEnd="_gVPa0rEXEeeP95al6XTTTg _gNzWErEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gVPa0rEXEeeP95al6XTTTg" name="" type="_gNyvALEXEeeP95al6XTTTg" association="_gVPa0bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gVSeILEXEeeP95al6XTTTg" name="" memberEnd="_gVSeIbEXEeeP95al6XTTTg _gUHZcrEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gVSeIbEXEeeP95al6XTTTg" name="" type="_gNz9ILEXEeeP95al6XTTTg" association="_gVSeILEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gVSeI7EXEeeP95al6XTTTg" name="" memberEnd="_gVSeJLEXEeeP95al6XTTTg _gUHZc7EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gVSeJLEXEeeP95al6XTTTg" name="" type="_gNz9ILEXEeeP95al6XTTTg" association="_gVSeI7EXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gVTFMbEXEeeP95al6XTTTg" name="" memberEnd="_gVTFMrEXEeeP95al6XTTTg _gUIAg7EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gVTFMrEXEeeP95al6XTTTg" name="" type="_gNz9ILEXEeeP95al6XTTTg" association="_gVTFMbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gVTsQbEXEeeP95al6XTTTg" name="" memberEnd="_gVTsQrEXEeeP95al6XTTTg _gUInkbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gVTsQrEXEeeP95al6XTTTg" name="" type="_gNz9ILEXEeeP95al6XTTTg" association="_gVTsQbEXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gMH7ELEXEeeP95al6XTTTg" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_gMH7EbEXEeeP95al6XTTTg" name="player">
        <packagedElement xmi:type="uml:Package" xmi:id="_gMK-YbEXEeeP95al6XTTTg" name="SequencePlayer2">
          <packagedElement xmi:type="uml:Interface" xmi:id="_gSgP4LEXEeeP95al6XTTTg" name="IPlayable"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gOkyJLEXEeeP95al6XTTTg" name="ISequencePlayerStatus">
          <ownedComment xmi:id="_gVFCw7EXEeeP95al6XTTTg">
            <body>Command that is used to notify a user that a track has stopped playing.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gOlZMbEXEeeP95al6XTTTg" name="NULL" isLeaf="true" isStatic="true" type="_gOkyJLEXEeeP95al6XTTTg" isReadOnly="true" association="_gVQB4bEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gOlZMrEXEeeP95al6XTTTg" value="new ISequencePlayerStatus() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Prints &quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot; to console.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void finished() {&#xD;&#xA;&#x9;&#x9;&#x9;System.out&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_gOlZMLEXEeeP95al6XTTTg" name="finished">
            <ownedComment xmi:id="_gVFCxLEXEeeP95al6XTTTg">
              <body>Called when a track stops playing.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOmAQLEXEeeP95al6XTTTg" name="SequencePlayer">
          <ownedComment xmi:id="_gVFCxbEXEeeP95al6XTTTg">
            <body>Sequence Player to create and play MIDI music sequences.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUXRELEXEeeP95al6XTTTg" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUXREbEXEeeP95al6XTTTg" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUXRErEXEeeP95al6XTTTg" name="_sequence" visibility="private" type="_gT0egrEXEeeP95al6XTTTg" association="_gVujAbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUXRFLEXEeeP95al6XTTTg" name="_track" visibility="private" type="_gT1soLEXEeeP95al6XTTTg" association="_gVvKEbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUX4IbEXEeeP95al6XTTTg" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUX4I7EXEeeP95al6XTTTg" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUYfMbEXEeeP95al6XTTTg" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUYfM7EXEeeP95al6XTTTg" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUZGQbEXEeeP95al6XTTTg" name="_sequencer" visibility="private" type="_gT2TsbEXEeeP95al6XTTTg" association="_gVvxIbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUZGQ7EXEeeP95al6XTTTg" name="_synthesizer" visibility="private" type="_gTHT4bEXEeeP95al6XTTTg" association="_gVwYMbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUZtUbEXEeeP95al6XTTTg" name="_offsets" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUZtUrEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUZtVLEXEeeP95al6XTTTg" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU4OcLEXEeeP95al6XTTTg" name="SequencePlayer" specification="_gOmnULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU4OcbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU4OcrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU4Oc7EXEeeP95al6XTTTg" type="_gOmAQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU4OdLEXEeeP95al6XTTTg" name="init" specification="_gOmnVrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU4OdbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU4OdrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU4Od7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_sequencer = null;&#xD;
		_synthesizer = null;&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
			_sequencer = MidiSystem.getSequencer();&#xD;
			_synthesizer = MidiSystem.getSynthesizer();&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out&#xD;
					.println(&quot;MIDI Unavailable, SequencePlayer not initialized.&quot;);&#xD;
			return false;&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU4OeLEXEeeP95al6XTTTg" name="addNote" specification="_gS1AAbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU4OebEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU4OerEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU4Oe7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU41gLEXEeeP95al6XTTTg" name="addNote" specification="_gS1nE7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU41gbEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU41grEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU41g7EXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU41hLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU41hbEXEeeP95al6XTTTg" name="play" specification="_gS1nGLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU41hrEXEeeP95al6XTTTg" name="statusCmd" type="_gOkyJLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gU41h7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gU41iLEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out.println(&quot;Finished Playing&quot;);&#xD;
						stop();&#xD;
						statusCmd.finished();&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
&#xD;
			// And start playing now.&#xD;
			_sequencer.start();&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU41ibEXEeeP95al6XTTTg" name="stop" specification="_gOnOY7EXEeeP95al6XTTTg">
            <language>java</language>
            <body>_sequencer.close();&#xD;
		_synthesizer.close();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU41irEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" specification="_gOnOZLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU41i7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU41jLEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" specification="_gOn1cbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU41jbEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU41jrEXEeeP95al6XTTTg" name="getTempo" specification="_gOn1c7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU41j7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU5ckLEXEeeP95al6XTTTg" name="setTempo" specification="_gOn1dbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU5ckbEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU5ckrEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" specification="_gOocgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU5ck7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOmnULEXEeeP95al6XTTTg" name="SequencePlayer" method="_gU4OcLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gOmnU7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOmnVLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVFCxrEXEeeP95al6XTTTg">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOmnUbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOmnUrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOmnVbEXEeeP95al6XTTTg" type="_gOmAQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOmnVrEXEeeP95al6XTTTg" name="init" method="_gU4OdLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFCx7EXEeeP95al6XTTTg">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOnOYLEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOnOYbEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOnOYrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOnOY7EXEeeP95al6XTTTg" name="stop" method="_gU41ibEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFCy7EXEeeP95al6XTTTg">
              <body>Stop playing music and close resources.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_gOnOZLEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" method="_gU41irEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFCzLEXEeeP95al6XTTTg">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOn1cLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOn1cbEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" method="_gU41jLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFp0LEXEeeP95al6XTTTg">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOn1crEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOn1c7EXEeeP95al6XTTTg" name="getTempo" method="_gU41jrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFp0bEXEeeP95al6XTTTg">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOn1dLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOn1dbEXEeeP95al6XTTTg" name="setTempo" method="_gU5ckLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFp0rEXEeeP95al6XTTTg">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOn1drEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOocgLEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" method="_gU5ckrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFp07EXEeeP95al6XTTTg">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOocgbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gS1AAbEXEeeP95al6XTTTg" name="addNote" method="_gU4OeLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFCyLEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_gS1nELEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gS1nEbEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS1nErEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gS1nE7EXEeeP95al6XTTTg" name="addNote" method="_gU41gLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFCybEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_gS1nFLEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gS1nFbEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS1nFrEXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS1nF7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gS1nGLEXEeeP95al6XTTTg" name="play" method="_gU41hbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFCyrEXEeeP95al6XTTTg">
              <body>Play the created Sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gS1nGbEXEeeP95al6XTTTg" name="statusCmd" type="_gOkyJLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gS2OILEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gS2OIbEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOpqoLEXEeeP95al6XTTTg" name="SequencePlayer2">
          <ownedComment xmi:id="_gVFp1LEXEeeP95al6XTTTg">
            <body>Sequence Player to create and play MIDI music sequences.&#xD;
Differs from SequencePlayer because it has no play() method.   Instead, this class has &#xD;
a factory method that creates an SequencePlayer2.IPlayable object that can be individually &#xD;
and asynchronously started and stopped.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUaUYLEXEeeP95al6XTTTg" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUaUYbEXEeeP95al6XTTTg" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUa7cLEXEeeP95al6XTTTg" name="_sequence" visibility="private" type="_gT0egrEXEeeP95al6XTTTg" association="_gVw_QbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUa7crEXEeeP95al6XTTTg" name="_track" visibility="private" type="_gT1soLEXEeeP95al6XTTTg" association="_gVxmULEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUbigLEXEeeP95al6XTTTg" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUbigrEXEeeP95al6XTTTg" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUcJkLEXEeeP95al6XTTTg" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUcJkrEXEeeP95al6XTTTg" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUcwoLEXEeeP95al6XTTTg" name="_offsets" isLeaf="true" isStatic="true" isReadOnly="true">
            <eAnnotations xmi:id="_gUcwobEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gUcworEXEeeP95al6XTTTg" key="ConstantWithGetter"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUcwo7EXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUcwpbEXEeeP95al6XTTTg" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU5clLEXEeeP95al6XTTTg" name="SequencePlayer2" specification="_gOrf0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU5clbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU5clrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU5cl7EXEeeP95al6XTTTg" type="_gOpqoLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU5cmLEXEeeP95al6XTTTg" name="init" specification="_gOrf1rEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU5cmbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU5cmrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU5cm7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6DoLEXEeeP95al6XTTTg" name="addNote" specification="_gS3cQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6DobEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU6DorEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU6Do7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6DpLEXEeeP95al6XTTTg" name="addNote" specification="_gS4DULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6DpbEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU6DprEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU6Dp7EXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU6DqLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6DqbEXEeeP95al6XTTTg" name="makePlayable" specification="_gS4DVbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6DqrEXEeeP95al6XTTTg" name="statusCmd" type="_gOkyJLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gU6Dq7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gU6DrLEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_gU6DrbEXEeeP95al6XTTTg" type="_gOqRsLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			final Sequencer _sequencer = MidiSystem.getSequencer(); // MIDI Sequencer object&#xD;
			final Synthesizer _synthesizer = MidiSystem.getSynthesizer(); // MIDI synthesizer object&#xD;
&#xD;
			final IPlayable playable = new IPlayable() {&#xD;
&#xD;
				@Override&#xD;
				public void start() {&#xD;
					_sequencer.start();&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public void stop() {&#xD;
					_sequencer.close();&#xD;
					_synthesizer.close();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out&#xD;
								.println(&quot;SequencePlayer2.play(): End of Track&quot;);&#xD;
						playable.stop();&#xD;
						statusCmd.finished();&#xD;
					} else&#xD;
						System.out.println(&quot;Message type received: &quot;&#xD;
								+ m.getType());&#xD;
				}&#xD;
			});&#xD;
&#xD;
			return playable;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		return IPlayable.NULL;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6DrrEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" specification="_gOst8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6Dr7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6DsLEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" specification="_gOtVALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6DsbEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6qsLEXEeeP95al6XTTTg" name="getTempo" specification="_gOtVArEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6qsbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6qsrEXEeeP95al6XTTTg" name="setTempo" specification="_gOt8ELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6qs7EXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6qtLEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" specification="_gOt8ErEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6qtbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOrf0LEXEeeP95al6XTTTg" name="SequencePlayer2" method="_gU5clLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gOrf07EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOrf1LEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVFp2LEXEeeP95al6XTTTg">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOrf0bEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOrf0rEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOrf1bEXEeeP95al6XTTTg" type="_gOpqoLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOrf1rEXEeeP95al6XTTTg" name="init" method="_gU5cmLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFp2bEXEeeP95al6XTTTg">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOsG4LEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOsG4bEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOsG4rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOst8LEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" method="_gU6DrrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVGQ4rEXEeeP95al6XTTTg">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOst8bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOtVALEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" method="_gU6DsLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVGQ47EXEeeP95al6XTTTg">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOtVAbEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOtVArEXEeeP95al6XTTTg" name="getTempo" method="_gU6qsLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVGQ5LEXEeeP95al6XTTTg">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOtVA7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOt8ELEXEeeP95al6XTTTg" name="setTempo" method="_gU6qsrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVGQ5bEXEeeP95al6XTTTg">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOt8EbEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOt8ErEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" method="_gU6qtLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVGQ5rEXEeeP95al6XTTTg">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOt8E7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gS3cQLEXEeeP95al6XTTTg" name="addNote" method="_gU6DoLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVFp2rEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_gS3cQbEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gS3cQrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS3cQ7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gS4DULEXEeeP95al6XTTTg" name="addNote" method="_gU6DpLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVGQ4LEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_gS4DUbEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gS4DUrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS4DU7EXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS4DVLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gS4DVbEXEeeP95al6XTTTg" name="makePlayable" method="_gU6DqbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVGQ4bEXEeeP95al6XTTTg">
              <body>Factory method for an IPlayable object that can play the currently programmed music sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.&#xD;
	 * @return An IPlayable object associated with the currently programmed music sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gS4DVrEXEeeP95al6XTTTg" name="statusCmd" type="_gOkyJLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gS4DWLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gS4DWbEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_gS4DV7EXEeeP95al6XTTTg" type="_gOqRsLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Interface" xmi:id="_gOqRsLEXEeeP95al6XTTTg" name="IPlayable">
            <eAnnotations xmi:id="_gOqRsbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOqRsrEXEeeP95al6XTTTg" key="static"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVFp1bEXEeeP95al6XTTTg">
              <body>Interface  that represents a playable entity.&#xD;
	 * @author swong&#xD;
	 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_gOq4wbEXEeeP95al6XTTTg" name="NULL" isLeaf="true" isStatic="true" type="_gOqRsLEXEeeP95al6XTTTg" isReadOnly="true" association="_gVQo8bEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_gOq4wrEXEeeP95al6XTTTg" value="new IPlayable() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void start() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void stop() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_gOqRs7EXEeeP95al6XTTTg" name="start">
              <ownedComment xmi:id="_gVFp1rEXEeeP95al6XTTTg">
                <body>Starts the sequencer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_gOq4wLEXEeeP95al6XTTTg" name="stop">
              <ownedComment xmi:id="_gVFp17EXEeeP95al6XTTTg">
                <body>Stops the sequencer and synthesizer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVQB4bEXEeeP95al6XTTTg" name="" memberEnd="_gVQB4rEXEeeP95al6XTTTg _gOlZMbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVQB4rEXEeeP95al6XTTTg" name="" type="_gOkyJLEXEeeP95al6XTTTg" association="_gVQB4bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVQo8bEXEeeP95al6XTTTg" name="" memberEnd="_gVQo8rEXEeeP95al6XTTTg _gOq4wbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVQo8rEXEeeP95al6XTTTg" name="" type="_gOqRsLEXEeeP95al6XTTTg" association="_gVQo8bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVujAbEXEeeP95al6XTTTg" name="" memberEnd="_gVujArEXEeeP95al6XTTTg _gUXRErEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVujArEXEeeP95al6XTTTg" name="" type="_gOmAQLEXEeeP95al6XTTTg" association="_gVujAbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVvKEbEXEeeP95al6XTTTg" name="" memberEnd="_gVvKErEXEeeP95al6XTTTg _gUXRFLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVvKErEXEeeP95al6XTTTg" name="" type="_gOmAQLEXEeeP95al6XTTTg" association="_gVvKEbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVvxIbEXEeeP95al6XTTTg" name="" memberEnd="_gVvxIrEXEeeP95al6XTTTg _gUZGQbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVvxIrEXEeeP95al6XTTTg" name="" type="_gOmAQLEXEeeP95al6XTTTg" association="_gVvxIbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVwYMbEXEeeP95al6XTTTg" name="" memberEnd="_gVwYMrEXEeeP95al6XTTTg _gUZGQ7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVwYMrEXEeeP95al6XTTTg" name="" type="_gOmAQLEXEeeP95al6XTTTg" association="_gVwYMbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVw_QbEXEeeP95al6XTTTg" name="" memberEnd="_gVw_QrEXEeeP95al6XTTTg _gUa7cLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVw_QrEXEeeP95al6XTTTg" name="" type="_gOpqoLEXEeeP95al6XTTTg" association="_gVw_QbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVxmULEXEeeP95al6XTTTg" name="" memberEnd="_gVxmUbEXEeeP95al6XTTTg _gUa7crEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVxmUbEXEeeP95al6XTTTg" name="" type="_gOpqoLEXEeeP95al6XTTTg" association="_gVxmULEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gMH7E7EXEeeP95al6XTTTg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_gPD6ULEXEeeP95al6XTTTg" name="ABCInstrument">
          <ownedComment xmi:id="_gVHfBLEXEeeP95al6XTTTg">
            <body>Represents an instrument as a name and an integer value&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUkFYbEXEeeP95al6XTTTg" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUkscLEXEeeP95al6XTTTg" name="value" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU9uArEXEeeP95al6XTTTg" name="ABCInstrument" specification="_gPEhYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU9uA7EXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU9uBLEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU9uBbEXEeeP95al6XTTTg" type="_gPD6ULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.name = name;&#xD;
		this.value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU9uBrEXEeeP95al6XTTTg" name="toString" specification="_gPFIc7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU9uB7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return name + &quot;: &quot; + value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gPEhYLEXEeeP95al6XTTTg" name="ABCInstrument" method="_gU9uArEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gPFIcLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gPFIcbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gPEhYbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gPEhYrEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gPFIcrEXEeeP95al6XTTTg" type="_gPD6ULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gPFIc7EXEeeP95al6XTTTg" name="toString" method="_gU9uBrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gPFIdLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPFvgLEXEeeP95al6XTTTg" name="KeySignature">
          <ownedComment xmi:id="_gVHfBbEXEeeP95al6XTTTg">
            <body>Utility class to simplify dealing with key signatures &lt;br/>&#xD;
Usage:&lt;br/>&#xD;
KeySignature keySig = new KeySignature(aKey); // aKey is a string representing a key, e.g. &quot;C&quot;, &quot;Bb&quot;, &quot;Am&quot;&lt;br/>&#xD;
Note adjustedNote = keySig.adjust(originalNote); // returns the Note object, adjusted so that it matches the key,&#xD;
e.g for key of &quot;D&quot;, an &quot;F&quot; --&amp;gt; &quot;F#&quot;.&lt;br/></body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUkscbEXEeeP95al6XTTTg" name="_major" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUkscrEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUksdLEXEeeP95al6XTTTg" value="{ 0, 2, 2, 1, 2, 2, 2 //, 1&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUlTgLEXEeeP95al6XTTTg" name="_minor" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUlTgbEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUlTg7EXEeeP95al6XTTTg" value="{ // Half steps in a Minor key&#xD;&#xA;&#x9;0, 2, 1, 2, 2, 1, 2 //, 2&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUl6k7EXEeeP95al6XTTTg" name="keymap" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <qualifier xmi:id="_gUmhobEXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUl6lLEXEeeP95al6XTTTg" value="new Hashtable&lt;Character, Integer>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUmhorEXEeeP95al6XTTTg" name="notes" visibility="private" type="_gPGWkLEXEeeP95al6XTTTg" association="_gV3s8bEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUmho7EXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUmhpbEXEeeP95al6XTTTg" value="{ new KeyNote('A', 0), new KeyNote('A', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('B', 0), new KeyNote('C', 0), new KeyNote('C', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('D', 0), new KeyNote('D', 1), new KeyNote('E', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 0), new KeyNote('F', 1), new KeyNote('G', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUnIsbEXEeeP95al6XTTTg" name="fs_dsm" visibility="private" type="_gPGWkLEXEeeP95al6XTTTg" association="_gV4UAbEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUnIsrEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUnItLEXEeeP95al6XTTTg" value="{ new KeyNote('A', 1), new KeyNote('B', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('C', 1), new KeyNote('D', 1), new KeyNote('E', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 1), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-VELEXEeeP95al6XTTTg" name="KeySignature" specification="_gPHksLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-VEbEXEeeP95al6XTTTg" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU-VErEXEeeP95al6XTTTg" type="_gPFvgLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>// Get rid of spurious &quot;maj&quot; at the end, if it's there&#xD;
		if (key.endsWith(&quot;maj&quot;)) {&#xD;
			key = key.replace(&quot;maj&quot;, &quot;&quot;);&#xD;
		}&#xD;
&#xD;
		// Special case keys with 6 sharps&#xD;
		if ((key == &quot;F#&quot;) || (key == &quot;D#m&quot;)) {&#xD;
			for (KeyNote n : fs_dsm) {&#xD;
				keymap.put(n.letter, n.accidental);&#xD;
			}&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		char keynote = key.charAt(0);&#xD;
		int cur = -1;&#xD;
&#xD;
		for (int i = 0; i &lt; notes.length; i++) {&#xD;
			if (notes[i].letter == keynote) {&#xD;
				cur = i;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			System.out.println(&quot;Invalid key: &quot; + key);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		int[] steps = _major;&#xD;
&#xD;
		int idx = 1;&#xD;
		while (idx &lt; key.length()) {&#xD;
			switch (key.charAt(idx)) {&#xD;
			case '#':&#xD;
				cur += 1;&#xD;
				break;&#xD;
&#xD;
			case 'b':&#xD;
				cur -= 1;&#xD;
				break;&#xD;
&#xD;
			case 'm':&#xD;
				steps = _minor;&#xD;
				break;&#xD;
&#xD;
			default:&#xD;
				System.out.println(&quot;Invalid key: &quot; + key);&#xD;
				return;&#xD;
			}&#xD;
			idx++;&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			cur = notes.length - 1;&#xD;
		}&#xD;
&#xD;
		for (int i : steps) {&#xD;
			cur += i;&#xD;
			if (cur >= notes.length) {&#xD;
				cur -= notes.length;&#xD;
			}&#xD;
			KeyNote n = notes[cur];&#xD;
			insert(n);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-VE7EXEeeP95al6XTTTg" name="convertflat" specification="_gPHktbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-VFLEXEeeP95al6XTTTg" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU-VFbEXEeeP95al6XTTTg" type="_gPGWkLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>char next = (char) (n + 1);&#xD;
		if (next == 'H') {&#xD;
			next = 'A';&#xD;
		}&#xD;
		return new KeyNote(next, -1);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-VFrEXEeeP95al6XTTTg" name="insert" specification="_gTDpgbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-VF7EXEeeP95al6XTTTg" name="n" type="_gPGWkLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>if (!keymap.containsKey(n.letter)) {&#xD;
			keymap.put(n.letter, n.accidental);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if (n.accidental == 1) {&#xD;
			// Move sharp up to next flat&#xD;
			insert(convertflat(n.letter));&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if ((n.accidental == 0) || (n.accidental == -1)) {&#xD;
			// Conflict, move higher note up to next flat&#xD;
			int a = keymap.get(n.letter);&#xD;
			a = Math.min(a, n.accidental);&#xD;
			insert(convertflat(n.letter));&#xD;
			keymap.put(n.letter, a);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		// Shouldn't get here&#xD;
		System.out.println(&quot;Should not reach here.&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-VGLEXEeeP95al6XTTTg" name="map" specification="_gUArwbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-VGbEXEeeP95al6XTTTg" name="note" type="_gUAEsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU-VGrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (keymap.containsKey(note)) {&#xD;
			return (int) keymap.get(note);&#xD;
		} else {&#xD;
			return 0;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-VG7EXEeeP95al6XTTTg" name="adjust" specification="_gTEQkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-VHLEXEeeP95al6XTTTg" name="n" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU-VHbEXEeeP95al6XTTTg" type="_gOWvsLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (n.getAccidental() != 0 &amp;&amp; !n.getIsNatural()) {&#xD;
			return n; // Accidentals set and is not natural&#xD;
		} else if (n.getIsNatural()) {&#xD;
			return n; // override key signature&#xD;
		} else {&#xD;
			// normal key signature mapping applies&#xD;
			int accidental = map(n.getName());&#xD;
			if (accidental == 0) {&#xD;
				return n; // nothing to change&#xD;
			}&#xD;
			return new Note(n.getName(), n.getOctave(), accidental,&#xD;
					n.getDuration(), false); // must be false isNatural&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-VHrEXEeeP95al6XTTTg" name="printmap" specification="_gPILwLEXEeeP95al6XTTTg">
            <language>java</language>
            <body>System.out.println(keymap);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gPHksLEXEeeP95al6XTTTg" name="KeySignature" method="_gU-VELEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gPHksrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gPHks7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVHfCLEXEeeP95al6XTTTg">
              <body>Generate a &quot;Key&quot; object that enables easy access to the key signature.&#xD;
	 * &#xD;
	 * @param key        - String indicating key (i.e., &quot;C&quot; or &quot;D#m&quot;)</body>
            </ownedComment>
            <ownedParameter xmi:id="_gPHksbEXEeeP95al6XTTTg" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gPHktLEXEeeP95al6XTTTg" type="_gPFvgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gPHktbEXEeeP95al6XTTTg" name="convertflat" visibility="private" method="_gU-VE7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVHfCbEXEeeP95al6XTTTg">
              <body>Helper method to convert a note to its equivalent flat version.&#xD;
	 * &#xD;
	 * @param n  - note letter&#xD;
	 * @return   - equivalent flat version of note n</body>
            </ownedComment>
            <ownedParameter xmi:id="_gPHktrEXEeeP95al6XTTTg" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTDpgLEXEeeP95al6XTTTg" type="_gPGWkLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gPILwLEXEeeP95al6XTTTg" name="printmap" method="_gU-VHrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVHfDbEXEeeP95al6XTTTg">
              <body>Print the mapping for this key signature</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_gTDpgbEXEeeP95al6XTTTg" name="insert" visibility="private" method="_gU-VFrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVHfCrEXEeeP95al6XTTTg">
              <body>Helper method to insert the given note into the keymap.&#xD;
	 * &#xD;
	 * @param n  - note to add to the map</body>
            </ownedComment>
            <ownedParameter xmi:id="_gTDpgrEXEeeP95al6XTTTg" name="n" type="_gPGWkLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gTEQkLEXEeeP95al6XTTTg" name="adjust" method="_gU-VG7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVHfDLEXEeeP95al6XTTTg">
              <body>Takes a note and returns the properly transposed note in this key signature&#xD;
	 *&#xD;
	 * @param n - note to be adjusted&#xD;
	 * @return A new, adjusted Note</body>
            </ownedComment>
            <ownedParameter xmi:id="_gTEQkbEXEeeP95al6XTTTg" name="n" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTEQkrEXEeeP95al6XTTTg" type="_gOWvsLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gUArwbEXEeeP95al6XTTTg" name="map" visibility="private" method="_gU-VGLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVHfC7EXEeeP95al6XTTTg">
              <body>Takes a note (with no accidentals) and returns the accidental for this&#xD;
	 * key signature.&#xD;
	 * &#xD;
	 * @param  note - in [A, B, C, D, E, F, G]&#xD;
	 * @return accidental for the note in this key signature [-1, 0, 1]</body>
            </ownedComment>
            <ownedParameter xmi:id="_gUArwrEXEeeP95al6XTTTg" name="note" type="_gUAEsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUArw7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_gPGWkLEXEeeP95al6XTTTg" name="KeyNote" visibility="private">
            <ownedComment xmi:id="_gVHfBrEXEeeP95al6XTTTg">
              <body>Utility class to keep track of the position of notes</body>
            </ownedComment>
            <ownedAttribute xmi:id="_gUlThLEXEeeP95al6XTTTg" name="letter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_gUl6kbEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU9uCLEXEeeP95al6XTTTg" name="KeyNote" specification="_gPGWkbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU9uCbEXEeeP95al6XTTTg" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gU9uCrEXEeeP95al6XTTTg" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gU9uC7EXEeeP95al6XTTTg" type="_gPGWkLEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>this.letter = letter;&#xD;
			this.accidental = accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU9uDLEXEeeP95al6XTTTg" name="toString" specification="_gPG9orEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU9uDbEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;&quot; + letter + accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_gPGWkbEXEeeP95al6XTTTg" name="KeyNote" visibility="package" method="_gU9uCLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gPGWlLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gPG9oLEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_gVHfB7EXEeeP95al6XTTTg">
                <body>Constructor for the class&#xD;
		 * @param letter  The letter of the note&#xD;
		 * @param accidental  Whether or not the note is accidental:  -1 = flat, 0 = natural, +1 = sharp</body>
              </ownedComment>
              <ownedParameter xmi:id="_gPGWkrEXEeeP95al6XTTTg" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gPGWk7EXEeeP95al6XTTTg" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gPG9obEXEeeP95al6XTTTg" type="_gPGWkLEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_gPG9orEXEeeP95al6XTTTg" name="toString" method="_gU9uDLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gPG9o7EXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPKA8LEXEeeP95al6XTTTg" name="ABCUtil">
          <ownedComment xmi:id="_gVHfDrEXEeeP95al6XTTTg">
            <body>Singleton utility class that has methods for parsing,&#xD;
reading file content and getting the list of instruments.&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUnvwLEXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_gPKA8LEXEeeP95al6XTTTg" isReadOnly="true" association="_gV47EbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUnvwbEXEeeP95al6XTTTg" value="new ABCUtil()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-8ILEXEeeP95al6XTTTg" name="parseFraction" specification="_gPLPErEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-8IbEXEeeP95al6XTTTg" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU-8IrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] vals = frac.split(&quot;/&quot;);&#xD;
		if (vals.length != 2) {&#xD;
			throw new NumberFormatException(frac + &quot; is not a fraction.&quot;);&#xD;
		}&#xD;
		double num = Double.parseDouble(vals[0]);&#xD;
		double denom = Double.parseDouble(vals[1]);&#xD;
		return num / denom;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-8I7EXEeeP95al6XTTTg" name="parseTempo" specification="_gPL2ILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-8JLEXEeeP95al6XTTTg" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU-8JbEXEeeP95al6XTTTg" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU-8JrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String els[] = tempo.split(&quot;=&quot;);&#xD;
		double bpm = 0;&#xD;
		if (1 == els.length) {&#xD;
			bpm = Double.parseDouble(els[0]) / defaultNotesPerQuarterNote;&#xD;
		} else {&#xD;
			double note = parseFraction(els[0]);&#xD;
			bpm = Double.parseDouble(els[1]) / (0.25 / note);&#xD;
		}&#xD;
		return bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-8J7EXEeeP95al6XTTTg" name="getFileContents" specification="_gPL2JLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-8KLEXEeeP95al6XTTTg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU-8KbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String fileContents = &quot;&quot;;&#xD;
&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(filename).openStream();&#xD;
&#xD;
			BufferedReader input = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			try {&#xD;
				// use buffering, reading one line at a time&#xD;
				// FileReader always assumes default&#xD;
				// encoding is OK!&#xD;
&#xD;
				String line = null; // not declared within while loop&#xD;
&#xD;
				/*&#xD;
				 * readLine is a bit quirky : it returns the&#xD;
				 * content of a line MINUS the newline. it&#xD;
				 * returns null only for the END of the&#xD;
				 * stream. it returns an empty String if two&#xD;
				 * newlines appear in a row.&#xD;
				 */&#xD;
				while ((line = input.readLine()) != null) {&#xD;
					fileContents += line + &quot;\n&quot;;&#xD;
				}&#xD;
			} finally {&#xD;
				input.close();&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			return &quot;Error loading file: &quot; + filename + &quot;\n&quot; + e + &quot;\n&quot;;&#xD;
		}&#xD;
&#xD;
		return fileContents;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU-8KrEXEeeP95al6XTTTg" name="getInstruments" specification="_gPL2J7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU-8K7EXEeeP95al6XTTTg" type="_gPD6ULEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU-8LLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			Synthesizer synth = MidiSystem.getSynthesizer();&#xD;
			synth.open();&#xD;
			Instrument[] instruments = synth.getAvailableInstruments();&#xD;
			ABCInstrument[] result = new ABCInstrument[instruments.length];&#xD;
			for (int i = 0; i &lt; instruments.length; i++) {&#xD;
				result[i] = new ABCInstrument(instruments[i].getName(),&#xD;
						instruments[i].getPatch().getProgram());&#xD;
			}&#xD;
&#xD;
			synth.close();&#xD;
			return result;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.err.println(&quot;ABCUtil.getInstruments: &quot; + e);&#xD;
			return null;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gPKoALEXEeeP95al6XTTTg" name="ABCUtil" visibility="private">
            <eAnnotations xmi:id="_gPKoAbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gPKoArEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gPLPEbEXEeeP95al6XTTTg" type="_gPKA8LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gPLPErEXEeeP95al6XTTTg" name="parseFraction" method="_gU-8ILEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVHfD7EXEeeP95al6XTTTg">
              <body>Return the evaluation of a string &quot;a/b&quot;.&#xD;
	 * &#xD;
	 * @param frac - a string containing a fraction&#xD;
	 * @return     - the result of evaluating the fraction</body>
            </ownedComment>
            <ownedParameter xmi:id="_gPLPE7EXEeeP95al6XTTTg" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gPLPFLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gPL2ILEXEeeP95al6XTTTg" name="parseTempo" method="_gU-8I7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVIGELEXEeeP95al6XTTTg">
              <body>Return the tempo given by the input string.  The returned value is in the &#xD;
	 * units of quarter notes per minute.&#xD;
	 * &#xD;
	 * Accepts &quot;bpm&quot; (beats per default note) or &quot;a/b=bpm&quot; (beats per a/b note).&#xD;
	 * &#xD;
	 * @param tempo                      - tempo represented as a string&#xD;
	 * @param defaultNotesPerQuarterNote - default notes per quarter note &#xD;
	 * @return                           - the tempo indicated by the string</body>
            </ownedComment>
            <ownedParameter xmi:id="_gPL2IbEXEeeP95al6XTTTg" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gPL2IrEXEeeP95al6XTTTg" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gPL2I7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gPL2JLEXEeeP95al6XTTTg" name="getFileContents" method="_gU-8J7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVIGEbEXEeeP95al6XTTTg">
              <body>Returns the contents of a text file, e.g. an abc file, as a single string.&#xD;
	 * @param filename the name of the file with respect to the default package, where &quot;/&quot; refers to the default package, e.g. a file in the &quot;data&quot; package would &quot;/data/myfile.abc&quot;&#xD;
	 * @return the contents of the file</body>
            </ownedComment>
            <ownedParameter xmi:id="_gPL2JbEXEeeP95al6XTTTg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gPL2JrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gPL2J7EXEeeP95al6XTTTg" name="getInstruments" method="_gU-8KrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVIGErEXEeeP95al6XTTTg">
              <body>Get an array of all the available instruments as ABCInstruments &#xD;
	 * where the instrument's value is the MIDI instrument number&#xD;
	 * &#xD;
	 * @return an array of ABCInstruments</body>
            </ownedComment>
            <ownedParameter xmi:id="_gPMdMLEXEeeP95al6XTTTg" type="_gPD6ULEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gPMdMbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gV3s8bEXEeeP95al6XTTTg" name="" memberEnd="_gV3s8rEXEeeP95al6XTTTg _gUmhorEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gV3s8rEXEeeP95al6XTTTg" name="" type="_gPFvgLEXEeeP95al6XTTTg" association="_gV3s8bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gV4UAbEXEeeP95al6XTTTg" name="" memberEnd="_gV4UArEXEeeP95al6XTTTg _gUnIsbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gV4UArEXEeeP95al6XTTTg" name="" type="_gPFvgLEXEeeP95al6XTTTg" association="_gV4UAbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gV47EbEXEeeP95al6XTTTg" name="" memberEnd="_gV47ErEXEeeP95al6XTTTg _gUnvwLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gV47ErEXEeeP95al6XTTTg" name="" type="_gPKA8LEXEeeP95al6XTTTg" association="_gV47EbEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gMKXULEXEeeP95al6XTTTg" name="abcParser">
        <packagedElement xmi:type="uml:Class" xmi:id="_gN41oLEXEeeP95al6XTTTg" name="ABCParser">
          <ownedComment xmi:id="_gVCmgLEXEeeP95al6XTTTg">
            <body>Parses an abc file into IPhrase music structures&lt;br/>&#xD;
&#xD;
Usage: &lt;br/>&#xD;
ABCParser parser = new ABCParser(&quot;/data/aMusicFile.abc&quot;); &lt;br/>&#xD;
IPhrase phrase = parser.parse(); &lt;br/>&#xD;
&#xD;
Cases handled:&lt;br/>&#xD;
- single notes with and without accidentals and naturals with regards to measures&lt;br/>&#xD;
- chords&lt;br/>&#xD;
- dotted notes&lt;br/>&#xD;
- grace notes&lt;br/>&#xD;
- repeats, including first and second repeats.&lt;br/>&#xD;
- triplets &lt;br/>&#xD;
- tuplets&lt;br/>&#xD;
- all headers&lt;br/>&#xD;
- quoted text&lt;br/>&#xD;
- D.C. al fine&lt;br/>&#xD;
- EOF (End Of File)&lt;br/>&#xD;
&lt;br/>&#xD;
All other cases ignored.&#xD;
&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUInk7EXEeeP95al6XTTTg" name="abcT" visibility="private" type="_gO5iQLEXEeeP95al6XTTTg" association="_gVUTUbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUJOobEXEeeP95al6XTTTg" name="beginningTarget" visibility="private" type="_gOHfILEXEeeP95al6XTTTg" association="_gVU6YLEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUJOorEXEeeP95al6XTTTg" value="new DecoratorSeqList()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUJOpLEXEeeP95al6XTTTg" name="jumpTargetStack" visibility="private" type="_gTbc8LEXEeeP95al6XTTTg" association="_gVU6Y7EXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUJ1sbEXEeeP95al6XTTTg" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUJ1s7EXEeeP95al6XTTTg" name="jumpSecondRepeatStack" visibility="private" type="_gTbc8LEXEeeP95al6XTTTg" association="_gVVhcbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUKcwbEXEeeP95al6XTTTg" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUKcw7EXEeeP95al6XTTTg" name="makeSeqListAlgo" visibility="private" type="_gOvKMLEXEeeP95al6XTTTg" association="_gVnOQbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gULD0LEXEeeP95al6XTTTg" value="new ATokVisitor(new ITokVisitorCmd() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Default behavior is to ignore any unrecognized tokens by merely proceeding to the next one.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unhandled Token: &quot; + host);&#xD;&#xA;&#x9;&#x9;&#x9;return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}) {&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gULD0rEXEeeP95al6XTTTg" name="isGrace" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gULD07EXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gULD1bEXEeeP95al6XTTTg" name="grace_multiplier" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gULD1rEXEeeP95al6XTTTg" value="0.2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gULq4bEXEeeP95al6XTTTg" name="graceDuration" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gULq4rEXEeeP95al6XTTTg" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gULq5LEXEeeP95al6XTTTg" name="dottedCorrection" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gULq5bEXEeeP95al6XTTTg" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUMR8bEXEeeP95al6XTTTg" name="checkNextNoteAlgo" visibility="private" type="_gOvKMLEXEeeP95al6XTTTg" association="_gVn1ULEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUMR8rEXEeeP95al6XTTTg" value="new ATokVisitor(&#xD;&#xA;&#x9;&#x9;&#x9;new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No dotted modification detected.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;abcT.putBack(host); // put token back to be reprocessed&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// later&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = 0.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return params[0]; // return duration unchanged.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;}) {&#xD;&#xA;&#x9;&#x9;// Initializer block for internal visitor&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;&lt;&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is halved, the next dotted&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0] / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;>&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is dotted, the next note halved&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = -duration / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;duration -= dottedCorrection;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUM5ALEXEeeP95al6XTTTg" name="accidentalNotes" visibility="private" type="_gOWvsLEXEeeP95al6XTTTg" association="_gVn1U7EXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUM5AbEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUM5ArEXEeeP95al6XTTTg" value="new HashSet&lt;Note>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUwSoLEXEeeP95al6XTTTg" name="popJumpTarget" specification="_gN6q0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUwSobEXEeeP95al6XTTTg" type="_gOHfILEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (jumpTargetStack.isEmpty())&#xD;
			return beginningTarget;&#xD;
		else&#xD;
			return jumpTargetStack.pop();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUwSorEXEeeP95al6XTTTg" name="pushJumpTarget" specification="_gSheAbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUwSo7EXEeeP95al6XTTTg" name="target" type="_gOHfILEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>jumpTargetStack.push(target);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUwSpLEXEeeP95al6XTTTg" name="ABCParser" specification="_gN7R4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUwSpbEXEeeP95al6XTTTg" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUwSprEXEeeP95al6XTTTg" type="_gN41oLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			abcT = new ABCTokenizer(inputFileName);&#xD;
&#xD;
			// ------ EOF -----------------------------------------------------&#xD;
			ITokVisitorCmd eofCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					return MTSeqList.Singleton;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Note -----------------------------------------------------&#xD;
			ITokVisitorCmd noteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note note = makeNote(host);&#xD;
					System.out.println(&quot;Note parsed: &quot; + note);&#xD;
&#xD;
					return new NESeqList(note, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Header-------------------------------------------&#xD;
			// Same command for all headers&#xD;
			ITokVisitorCmd headerCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Header header = new Header(id, host.getLexeme());&#xD;
					System.out.println(&quot;Header parsed: &quot; + header);&#xD;
					return new NESeqList(header, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Chord----------------------------------------------&#xD;
			ITokVisitorCmd chordStartCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeChordAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.chordCmd: Non-Note token encountered:&quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Note note = makeNote(host);&#xD;
								System.out&#xD;
										.println(&quot;Chord parsed Note: &quot; + note);&#xD;
								((Vector&lt;Note>) params[0]).add(note);&#xD;
								return abcT.getNextToken().execute(&#xD;
										makeChordAlgo, params);&#xD;
							}&#xD;
						});&#xD;
&#xD;
						this.addCmd(&quot;]&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Vector&lt;Note> vNotes = (Vector&lt;Note>) params[0];&#xD;
								Note[] result = new Note[vNotes.size()];&#xD;
								for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
									result[i] = vNotes.get(i);&#xD;
								return result;&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeChordAlgo, new Vector&lt;Note>());&#xD;
					Chord chord = new Chord(notes);&#xD;
					System.out.println(&quot;Chord parsed: &quot; + chord);&#xD;
					return new NESeqList(chord, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note Start---------------------------------------&#xD;
			ITokVisitorCmd graceStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace Start parsed.&quot;);&#xD;
					isGrace = true; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note End--------------------------------------------&#xD;
			ITokVisitorCmd graceEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace End parsed.&quot;);&#xD;
					isGrace = false; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Tuplet----------------------------------------------&#xD;
			ITokVisitorCmd tupletCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeTupletAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.tupletCmd: Non-Note token encountered: &quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								int count = (Integer) params[0];&#xD;
								Vector&lt;Note> vNotes = ((Vector&lt;Note>) params[1]);&#xD;
&#xD;
								Note note = makeNote(host);&#xD;
								System.out.println(&quot;Tuplet parsed Note: &quot;&#xD;
										+ note + &quot; count = &quot; + count);&#xD;
								vNotes.add(note);&#xD;
&#xD;
								if (1 == count) {&#xD;
									Note[] result = new Note[vNotes.size()];&#xD;
									for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
										result[i] = vNotes.get(i);&#xD;
									return result;&#xD;
								} else {&#xD;
									return abcT.getNextToken().execute(&#xD;
											makeTupletAlgo, --count, vNotes);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					int nNotes = Integer.parseInt(host.getLexeme());&#xD;
&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeTupletAlgo, nNotes, new Vector&lt;Note>());&#xD;
&#xD;
					NoteCollection result;&#xD;
&#xD;
					if (3 == nNotes) {&#xD;
						result = new Triplet(notes[0], notes[1], notes[2]);&#xD;
					} else {&#xD;
						result = new Tuplet(notes);&#xD;
					}&#xD;
					System.out.println(&quot;Tuplet parsed: &quot; + result);&#xD;
					return new NESeqList(result, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Measure bar --------------------------------------------&#xD;
			ITokVisitorCmd measureBarCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					accidentalNotes.clear(); // clear any accidentals&#xD;
					System.out&#xD;
							.println(&quot;Measure bar parsed.  Accidental Notes cleared.&quot;);&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat Start -----------------------------------------&#xD;
			ITokVisitorCmd repeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList repeatStart = new DecoratorSeqList();&#xD;
					pushJumpTarget(repeatStart);&#xD;
					System.out.println(&quot;Repeat Start parsed&quot;);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					repeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat End -----------------------------------------&#xD;
			ITokVisitorCmd repeatEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					ISeqList jumpTarget = popJumpTarget();&#xD;
					System.out.println(&quot;Repeat End parsed&quot;);&#xD;
					if (jumpSecondRepeatStack.isEmpty()) {&#xD;
						return new ToggleDecoratorSeqList(jumpTarget,&#xD;
								(ISeqList) abcT.getNextToken().execute(&#xD;
										makeSeqListAlgo, params));&#xD;
					} else {&#xD;
						abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
						return jumpTarget;&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ First Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd firstRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = new DecoratorSeqList();&#xD;
					jumpSecondRepeatStack.push(secondRepeatStart);&#xD;
					System.out&#xD;
							.println(&quot;First Repeat Start parsed.  ID = &quot; + id);&#xD;
					return new ToggleDecoratorSeqList((ISeqList) abcT&#xD;
							.getNextToken().execute(makeSeqListAlgo, params),&#xD;
							secondRepeatStart);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Second Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd secondRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out.println(&quot;Second Repeat Start parsed.  ID = &quot;&#xD;
							+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Alt. Second Repeat Start Repeat --------------------------&#xD;
			/**&#xD;
			 * This covers the &quot;:|2&quot; token which includes the repeat.&#xD;
			 */&#xD;
			ITokVisitorCmd secondRepeatStartAltCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out&#xD;
							.println(&quot;Second Repeat Start Alt. parsed.  ID = &quot;&#xD;
									+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return popJumpTarget();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Quote processing --------------------------&#xD;
			ITokVisitorCmd quoteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				FineToggleDecoratorSeqList fineToggle = new FineToggleDecoratorSeqList();&#xD;
&#xD;
				boolean isSwapped = false;&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					if (host.getLexeme().equals(&quot;_fine&quot;)) {&#xD;
&#xD;
						System.out.println(&quot;\&quot;_fine\&quot; parsed&quot;);&#xD;
						fineToggle.setDecoree(0, (ISeqList) abcT.getNextToken()&#xD;
								.execute(makeSeqListAlgo, params));&#xD;
						return fineToggle;&#xD;
					} else if (host.getLexeme().equals(&quot;_D.C al Fine&quot;)) {&#xD;
						if (isSwapped) {&#xD;
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed&quot;);&#xD;
							return new ISeqList() {&#xD;
&#xD;
								@Override&#xD;
								public Object execute(IPhraseVisitor algo,&#xD;
										Object... params) {&#xD;
									fineToggle.setFine();&#xD;
									return beginningTarget&#xD;
											.execute(algo, params);&#xD;
								}&#xD;
							};&#xD;
						} else {&#xD;
							isSwapped = true;&#xD;
							System.out&#xD;
									.println(&quot;\&quot;_D.C al Fine\&quot; parsed, but swapped for next token.&quot;);&#xD;
							return swapToken(host).execute(makeSeqListAlgo,&#xD;
									params);&#xD;
						}&#xD;
					} else {&#xD;
						System.out.println(&quot;Quote parsed - ignored&quot;);&#xD;
						return abcT.getNextToken().execute(makeSeqListAlgo,&#xD;
								params);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ---- Add Commands to Visitor------------------------------&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;EOF&quot;, eofCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Note&quot;, noteCmd);&#xD;
&#xD;
			String headers = &quot;ABCDEFGHIKLMNOPQRSTWXZ&quot;;&#xD;
			for (int i = 0; i &lt; headers.length(); i++) {&#xD;
				makeSeqListAlgo.addCmd(&quot;&quot; + headers.charAt(i), headerCmd);&#xD;
			}&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;[&quot;, chordStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;{&quot;, graceStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;}&quot;, graceEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Tuplet&quot;, tupletCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|&quot;, measureBarCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|:&quot;, repeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|&quot;, repeatEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|2&quot;, secondRepeatStartAltCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Quote&quot;, quoteCmd);&#xD;
		} catch (Exception e) {&#xD;
			System.err.println(&quot;ABCParser constructor exception: &quot; + e);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUwSp7EXEeeP95al6XTTTg" name="parse" specification="_gN748LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUwSqLEXEeeP95al6XTTTg" type="_gOPa8LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>ISeqList beginning = (ISeqList) abcT.getNextToken().execute(&#xD;
				makeSeqListAlgo, MTSeqList.Singleton);&#xD;
		beginningTarget.setDecoree(beginning);&#xD;
		return beginning;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUwSqbEXEeeP95al6XTTTg" name="makeNote" specification="_gSiFErEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUwSqrEXEeeP95al6XTTTg" name="host" type="_gO0pw7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUwSq7EXEeeP95al6XTTTg" type="_gOWvsLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>char name = 'C';&#xD;
		int octave = 0;&#xD;
		int accidental = 0;&#xD;
		double duration = 1.0;&#xD;
		boolean isNatural = false;&#xD;
&#xD;
		String lex = host.getLexeme();&#xD;
&#xD;
		// get accidental value&#xD;
		int i = 0;&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isLetter(lex.charAt(i))) {&#xD;
				break;&#xD;
			}&#xD;
			if (lex.charAt(i) == '^') {&#xD;
				accidental += +1;&#xD;
			} else if (lex.charAt(i) == '_') {&#xD;
				accidental += -1;&#xD;
			} else if (lex.charAt(i) == '=') {&#xD;
				isNatural = true;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (Character.isLowerCase(lex.charAt(i))) {&#xD;
			octave++;&#xD;
		}&#xD;
		name = Character.toUpperCase(lex.charAt(i));&#xD;
		i++;&#xD;
&#xD;
		// get octave value&#xD;
&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isDigit(lex.charAt(i)) || '/' == lex.charAt(i)) {&#xD;
				break;&#xD;
			}&#xD;
			if ('\'' == lex.charAt(i))&#xD;
				octave += +1;&#xD;
			else if (',' == lex.charAt(i))&#xD;
				octave += -1;&#xD;
		}&#xD;
&#xD;
		if (i &lt; lex.length()) {&#xD;
			if (Character.isDigit(lex.charAt(i))) {&#xD;
				int idx = lex.substring(i).indexOf('/');&#xD;
				if (-1 == idx) {&#xD;
					duration = Double.parseDouble(lex.substring(i));&#xD;
				} else if (lex.length() > i + idx + 1) {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx))&#xD;
							/ Double.parseDouble(lex.substring(i + idx + 1));&#xD;
				} else {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx)) / 2.0;&#xD;
				}&#xD;
			} else {&#xD;
				i++;&#xD;
				if (i &lt; lex.length()) {&#xD;
					duration /= Double.parseDouble(lex.substring(i));&#xD;
				} else {&#xD;
					duration /= 2.0; // Slash w/o number is divide by two.&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (isGrace) {&#xD;
			duration *= grace_multiplier;&#xD;
			graceDuration += duration; // sum the duration of the grace notes&#xD;
		} else if (graceDuration > 0.0) {&#xD;
			// Correct the length of the current note to get it back on beat.&#xD;
			duration -= graceDuration;&#xD;
			graceDuration = 0.0;&#xD;
		}&#xD;
&#xD;
		if (dottedCorrection != 0.0) {&#xD;
			duration += dottedCorrection;&#xD;
			dottedCorrection = 0.0;&#xD;
		}&#xD;
&#xD;
		duration = (Double) abcT.getNextToken().execute(checkNextNoteAlgo,&#xD;
				duration);&#xD;
&#xD;
		Note note = new Note(name, octave, accidental, duration, isNatural);&#xD;
&#xD;
		if (!isNatural) // naturals always override prior accidentals in measure&#xD;
			checkAccidentals(note);&#xD;
		return note;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUw5sLEXEeeP95al6XTTTg" name="checkAccidentals" specification="_gSisILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUw5sbEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				System.out&#xD;
						.println(note&#xD;
								+ &quot; found in accidentals.  Overriding accidentals and isNatural to &quot;&#xD;
								+ n);&#xD;
				note.setAccidental(n.getAccidental());&#xD;
				note.setIsNatural(n.getIsNatural()); // this will override&#xD;
														// accidentals if true&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		if (note.getAccidental() != 0 || note.getIsNatural()) {&#xD;
			addAccidental(note);&#xD;
		}&#xD;
		return;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUw5srEXEeeP95al6XTTTg" name="addAccidental" specification="_gSisIrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUw5s7EXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>removeAccidental(note); // remove anything like this note&#xD;
		accidentalNotes.add(note); // put this specific note in&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUw5tLEXEeeP95al6XTTTg" name="removeAccidental" specification="_gSisJLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUw5tbEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				accidentalNotes.remove(n);&#xD;
				// Check all notes, just to be safe&#xD;
			}&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUw5trEXEeeP95al6XTTTg" name="swapToken" specification="_gSisJrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUw5t7EXEeeP95al6XTTTg" name="t" type="_gO0pw7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUw5uLEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>Token next = abcT.getNextToken();&#xD;
		abcT.putBack(t);&#xD;
		return next;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gN6q0LEXEeeP95al6XTTTg" name="popJumpTarget" visibility="private" method="_gUwSoLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmgbEXEeeP95al6XTTTg">
              <body>Pull off the current jump target from the jump target stack. If the stack&#xD;
	 * is empty, return the proxy for the beginning of the phrase, as this is&#xD;
	 * the default jump target.&#xD;
	 * &#xD;
	 * @return The current jump target or the beginning of the phrase.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSheALEXEeeP95al6XTTTg" type="_gOHfILEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gN7R4LEXEeeP95al6XTTTg" name="ABCParser" method="_gUwSpLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gN7R4rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gN7R47EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVCmg7EXEeeP95al6XTTTg">
              <body>Constructs a parser for the given ABC input file.   Does not actually run that parser yet.&#xD;
	 * Prints error message to System.err if there is a problem opening the given file.   The returned &#xD;
	 * parser will be null in the event of an error.&#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file</body>
            </ownedComment>
            <ownedParameter xmi:id="_gN7R4bEXEeeP95al6XTTTg" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gN7R5LEXEeeP95al6XTTTg" type="_gN41oLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gN748LEXEeeP95al6XTTTg" name="parse" method="_gUwSp7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmhLEXEeeP95al6XTTTg">
              <body>&#xD;
	 * Run the parser and parse the entire file, returning an IPhrase object that represents the entire piece of music.&#xD;
	 * &#xD;
	 * @return An IPhrase object</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSiFEbEXEeeP95al6XTTTg" type="_gOPa8LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSheAbEXEeeP95al6XTTTg" name="pushJumpTarget" visibility="private" method="_gUwSorEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmgrEXEeeP95al6XTTTg">
              <body>Push the given jump target onto the stack so that it is now the current&#xD;
	 * jump target. This corresponds to the innermost nested repeat.&#xD;
	 * &#xD;
	 * @param target&#xD;
	 *            The new current jump target.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSiFELEXEeeP95al6XTTTg" name="target" type="_gOHfILEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSiFErEXEeeP95al6XTTTg" name="makeNote" visibility="private" method="_gUwSqbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmhbEXEeeP95al6XTTTg">
              <body>Parse a Note from the given Token&#xD;
	 * &#xD;
	 * @param host&#xD;
	 *            The Note token&#xD;
	 * @return A Note object</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSiFE7EXEeeP95al6XTTTg" name="host" type="_gO0pw7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSiFFLEXEeeP95al6XTTTg" type="_gOWvsLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSisILEXEeeP95al6XTTTg" name="checkAccidentals" visibility="private" method="_gUw5sLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmhrEXEeeP95al6XTTTg">
              <body>Checks to see if the given Note is in the set of accidentals Checks name&#xD;
	 * and octave but not duration or accidental&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            The note to check</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSisIbEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSisIrEXEeeP95al6XTTTg" name="addAccidental" visibility="private" method="_gUw5srEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmh7EXEeeP95al6XTTTg">
              <body>Adds a note to the set of accidentals replaces any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the Note to add.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSisI7EXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSisJLEXEeeP95al6XTTTg" name="removeAccidental" visibility="private" method="_gUw5tLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmiLEXEeeP95al6XTTTg">
              <body>Removes a note from the set of accidentals Removes any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the note to remove</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSisJbEXEeeP95al6XTTTg" name="note" type="_gOWvsLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSisJrEXEeeP95al6XTTTg" name="swapToken" visibility="private" method="_gUw5trEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmibEXEeeP95al6XTTTg">
              <body>Swap the given token for the next token in the tokenizer, returning the&#xD;
	 * next token. The given token will be the next token out of the tokenizer.&#xD;
	 * &#xD;
	 * @param t The token to be swapped into the tokenizer&#xD;
	 * @return the token that previously was next in the tokenizer.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSisJ7EXEeeP95al6XTTTg" name="t" type="_gO0pw7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSjTMLEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVUTUbEXEeeP95al6XTTTg" name="" memberEnd="_gVUTUrEXEeeP95al6XTTTg _gUInk7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVUTUrEXEeeP95al6XTTTg" name="" type="_gN41oLEXEeeP95al6XTTTg" association="_gVUTUbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVU6YLEXEeeP95al6XTTTg" name="" memberEnd="_gVU6YbEXEeeP95al6XTTTg _gUJOobEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVU6YbEXEeeP95al6XTTTg" name="" type="_gN41oLEXEeeP95al6XTTTg" association="_gVU6YLEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVU6Y7EXEeeP95al6XTTTg" name="" memberEnd="_gVU6ZLEXEeeP95al6XTTTg _gUJOpLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVU6ZLEXEeeP95al6XTTTg" name="" type="_gN41oLEXEeeP95al6XTTTg" association="_gVU6Y7EXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVVhcbEXEeeP95al6XTTTg" name="" memberEnd="_gVVhcrEXEeeP95al6XTTTg _gUJ1s7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVVhcrEXEeeP95al6XTTTg" name="" type="_gN41oLEXEeeP95al6XTTTg" association="_gVVhcbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVnOQbEXEeeP95al6XTTTg" name="" memberEnd="_gVnOQrEXEeeP95al6XTTTg _gUKcw7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVnOQrEXEeeP95al6XTTTg" name="" type="_gN41oLEXEeeP95al6XTTTg" association="_gVnOQbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVn1ULEXEeeP95al6XTTTg" name="" memberEnd="_gVn1UbEXEeeP95al6XTTTg _gUMR8bEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVn1UbEXEeeP95al6XTTTg" name="" type="_gN41oLEXEeeP95al6XTTTg" association="_gVn1ULEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVn1U7EXEeeP95al6XTTTg" name="" memberEnd="_gVn1VLEXEeeP95al6XTTTg _gUM5ALEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVn1VLEXEeeP95al6XTTTg" name="" type="_gN41oLEXEeeP95al6XTTTg" association="_gVn1U7EXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gMKXUbEXEeeP95al6XTTTg" name="music">
        <packagedElement xmi:type="uml:Package" xmi:id="_gMK-YLEXEeeP95al6XTTTg" name="visitor">
          <packagedElement xmi:type="uml:Class" xmi:id="_gOi88LEXEeeP95al6XTTTg" name="playerAlgo">
            <generalization xmi:id="_gS0Y8LEXEeeP95al6XTTTg" general="_gOBYgLEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_gUWC87EXEeeP95al6XTTTg" name="key_signature" visibility="private" type="_gPFvgLEXEeeP95al6XTTTg" association="_gVt78LEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_gUWqAbEXEeeP95al6XTTTg" name="sp" visibility="private" type="_gOpqoLEXEeeP95al6XTTTg" association="_gVt787EXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU3nZ7EXEeeP95al6XTTTg" name="playerAlgo" specification="_gOjkALEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU3naLEXEeeP95al6XTTTg" type="_gOi88LEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>String headerString = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
		for (int i = 0; i &lt; headerString.length(); i++) {
			this.addCmd(&quot;&quot; + headerString.charAt(i), new IPhraseVisitorCmd() {
				public Object apply(String id, IPhrase host, Object... params) {
					return params[1];				
				}
			});
		}
		
		
		this.addCmd(&quot;L&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				sp = (SequencePlayer2)params[0];
				double defaultLengthPerNote = ABCUtil.Singleton.parseFraction(head.getValue());
				double ticks = 64 * defaultLengthPerNote;
				sp.setTicksPerDefaultNote((int)ticks);
				return params[1];
			}
		});
		

		this.addCmd(&quot;K&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				key_signature = new KeySignature(head.getValue());
				return params[1];
			}
		});
		
		
		this.addCmd(&quot;Q&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				sp = (SequencePlayer2)params[0];
				double tempo = ABCUtil.Singleton.parseTempo(head.getValue(), 1.0 * sp.getTicksPerQuarterNote()/sp.getTicksPerDefaultNote());
				sp.setTempo((int)tempo);
				return params[1];
			}
		});
		
		
		this.addCmd(Chord.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Chord chord = (Chord)host;
				sp = (SequencePlayer2)params[0];
				int param = (int)params[1];
				for(Note temp_note: chord.getNotes()) {
					param = (int)temp_note.execute(playerAlgo.this, params);
				}
				return param;
			}
		});
		
		this.addCmd(Triplet.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Triplet triplet = (Triplet)host;
				sp = (SequencePlayer2)params[0];
				int param = (int)params[1];
				for(Note temp_note: triplet.getNotes()) {
					temp_note.setDuration(temp_note.getDuration() * 2.0 / 3);
					param = (int)temp_note.execute(playerAlgo.this, params);
				}
				return param;
			}
		});
		
		
		this.addCmd(Note.ID, new IPhraseVisitorCmd() {
			
			public Object apply(String id, IPhrase host, Object... params){
				sp = (SequencePlayer2)params[0];
				Note note = (Note)host;
				if(key_signature != null) {
					note = key_signature.adjust(note);
				}
				return sp.addNote(note, (int)params[1]);
			}
		});
		
		this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				NESeqList ne_list = (NESeqList)host;
				int param = (int) ne_list.getFirst().execute(playerAlgo.this, params);
				return ne_list.getRest().execute(playerAlgo.this, params[0], param);
			}				
		});

		this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				return params[1];
			}				
		});

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_gOjkALEXEeeP95al6XTTTg" name="playerAlgo" method="_gU3nZ7EXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gOjkAbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gOjkArEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_gOjkA7EXEeeP95al6XTTTg" type="_gOi88LEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_gOkLELEXEeeP95al6XTTTg" name="toStringAlgo">
            <generalization xmi:id="_gS1AALEXEeeP95al6XTTTg" general="_gOBYgLEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU3nabEXEeeP95al6XTTTg" name="toStringAlgo" specification="_gOkyILEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU3narEXEeeP95al6XTTTg" type="_gOkLELEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				NESeqList ne_list = (NESeqList) host;
				NESeqList.setToStringAlgo(toStringAlgo.this);
				return ne_list.getRest().execute(NESeqList.getToStringAlgo(), params[0]+&quot;,&quot;+ne_list.getFirst());
			}
		});
		
		
		this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				return params[0]+&quot;}&quot;;
			}
		});
		

		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_gOkyILEXEeeP95al6XTTTg" name="toStringAlgo" method="_gU3nabEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gOkyIbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gOkyIrEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_gOkyI7EXEeeP95al6XTTTg" type="_gOkLELEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_gVt78LEXEeeP95al6XTTTg" name="" memberEnd="_gVt78bEXEeeP95al6XTTTg _gUWC87EXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_gVt78bEXEeeP95al6XTTTg" name="" type="_gOi88LEXEeeP95al6XTTTg" association="_gVt78LEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_gVt787EXEeeP95al6XTTTg" name="" memberEnd="_gVt79LEXEeeP95al6XTTTg _gUWqAbEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_gVt79LEXEeeP95al6XTTTg" name="" type="_gOi88LEXEeeP95al6XTTTg" association="_gVt787EXEeeP95al6XTTTg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOBYgLEXEeeP95al6XTTTg" name="APhraseVisitor" isAbstract="true">
          <ownedComment xmi:id="_gVCmirEXEeeP95al6XTTTg">
            <body>Command-based implementation of IPhraseVisitor that uses IPhraseVisitorCmds stored in a hash table.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUNgELEXEeeP95al6XTTTg" name="defaultCmd" visibility="private" type="_gORQILEXEeeP95al6XTTTg" association="_gVocYbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUNgErEXEeeP95al6XTTTg" name="cmds" visibility="private" type="_gORQILEXEeeP95al6XTTTg" association="_gVpqgLEXEeeP95al6XTTTg">
            <qualifier xmi:id="_gUOHIrEXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUOHILEXEeeP95al6XTTTg" value="new Hashtable&lt;String, IPhraseVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gSkhU7EXEeeP95al6XTTTg" client="_gOBYgLEXEeeP95al6XTTTg" supplier="_gOQCALEXEeeP95al6XTTTg" contract="_gOQCALEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUw5ubEXEeeP95al6XTTTg" name="APhraseVisitor" specification="_gOCmoLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUw5urEXEeeP95al6XTTTg" type="_gOBYgLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new IPhraseVisitorCmd() {&#xD;
			public Object apply(String idx, IPhrase host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;APhraseVisitor: Unknown index encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUxgwLEXEeeP95al6XTTTg" name="APhraseVisitor" specification="_gSlIYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUxgwbEXEeeP95al6XTTTg" name="defaultCmd" type="_gORQILEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUxgwrEXEeeP95al6XTTTg" type="_gOBYgLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUxgw7EXEeeP95al6XTTTg" name="caseAt" specification="_gTd5MLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUxgxLEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUxgxbEXEeeP95al6XTTTg" name="host" type="_gOPa8LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUxgxrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUxgx7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUxgyLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUxgybEXEeeP95al6XTTTg" name="addCmd" specification="_gSlvcLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUxgyrEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUxgy7EXEeeP95al6XTTTg" name="cmd" type="_gORQILEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOCmoLEXEeeP95al6XTTTg" name="APhraseVisitor" method="_gUw5ubEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gOCmobEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOCmorEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVCmi7EXEeeP95al6XTTTg">
              <body>Constructor that installs a default cmd that throws an IllegalArgumentException on any unknown host.</body>
            </ownedComment>
            <ownedComment xmi:id="_gVCmjLEXEeeP95al6XTTTg">
              <body>Abstract extended visitor implementation that uses a dictionary of commands to associate commands with host IDs.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOCmo7EXEeeP95al6XTTTg" type="_gOBYgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSlIYLEXEeeP95al6XTTTg" name="APhraseVisitor" method="_gUxgwLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSlIYrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSlIY7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVCmjbEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to the supplied cmd.&#xD;
	 * @param defaultCmd   the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSlIYbEXEeeP95al6XTTTg" name="defaultCmd" type="_gORQILEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSlIZLEXEeeP95al6XTTTg" type="_gOBYgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSlvcLEXEeeP95al6XTTTg" name="addCmd" method="_gUxgybEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVCmjrEXEeeP95al6XTTTg">
              <body>Add the given command to the dictionary, associated with the given id value.&#xD;
	 * @param id The id of the host that will use this command&#xD;
	 * @param cmd The command that will be run when the host calls for it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSlvcbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSlvcrEXEeeP95al6XTTTg" name="cmd" type="_gORQILEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gTd5MLEXEeeP95al6XTTTg" name="caseAt" method="_gUxgw7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTd5MbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTd5MrEXEeeP95al6XTTTg" name="host" type="_gOPa8LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTd5M7EXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTegQrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTegQLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOFC4LEXEeeP95al6XTTTg" name="Chord">
          <ownedComment xmi:id="_gVCmj7EXEeeP95al6XTTTg">
            <body>A collection of notes that make up a Chord.  All of the notes should&#xD;
be played simultaneously.   The last note defines the length of all the notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVDNkLEXEeeP95al6XTTTg">
            <body>A collection of Notes all played at once</body>
          </ownedComment>
          <generalization xmi:id="_gSm9lLEXEeeP95al6XTTTg" general="_gOaaELEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUOuMLEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUOuMbEXEeeP95al6XTTTg" value="&quot;Chord&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUxgzLEXEeeP95al6XTTTg" name="Chord" specification="_gSmWgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUxgzbEXEeeP95al6XTTTg" name="notes" type="_gOWvsLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUxgzrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUxgz7EXEeeP95al6XTTTg" type="_gOFC4LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyH0LEXEeeP95al6XTTTg" name="execute" specification="_gTfuYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyH0bEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUyH0rEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUyH07EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUyH1LEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyH1bEXEeeP95al6XTTTg" name="toString" specification="_gOFp8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyH1rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Chord(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOFp8LEXEeeP95al6XTTTg" name="toString" method="_gUyH1bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gOGRALEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gSmWgLEXEeeP95al6XTTTg" name="Chord" method="_gUxgzLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSmWgrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSmWg7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gSmWgbEXEeeP95al6XTTTg" name="notes" type="_gOWvsLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSm9krEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSm9kbEXEeeP95al6XTTTg" type="_gOFC4LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gTfuYLEXEeeP95al6XTTTg" name="execute" method="_gUyH0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTfuYbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTfuYrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTgVcrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTgVcLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOHfILEXEeeP95al6XTTTg" name="DecoratorSeqList">
          <ownedComment xmi:id="_gVDNkbEXEeeP95al6XTTTg">
            <body>An ISeqList that transparently routes the visitor execution to its decoree.  &#xD;
This class is primarily used to provide a placeholder when a the music should flow &#xD;
to a specific point in the sequence but that point has not yet been calculated, as occurs&#xD;
for instance, during the processing of repeats.    When that target point is finally calculated, &#xD;
the decoree can be set and the decorated target will behave identically to the target.&#xD;
This decorator can also be used to dynamically change the flow of the music by changing the target.  &#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_gVDNkrEXEeeP95al6XTTTg">
            <body>Decorated ISeqList used as a transparent proxy placeholder.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUOuMrEXEeeP95al6XTTTg" name="decoree" visibility="private" type="_gOR3MLEXEeeP95al6XTTTg" association="_gVpqg7EXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUOuM7EXEeeP95al6XTTTg" value="MTSeqList.Singleton"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gSnkoLEXEeeP95al6XTTTg" client="_gOHfILEXEeeP95al6XTTTg" supplier="_gOR3MLEXEeeP95al6XTTTg" contract="_gOR3MLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyH17EXEeeP95al6XTTTg" name="DecoratorSeqList" specification="_gSnkobEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyH2LEXEeeP95al6XTTTg" name="decoree" type="_gOR3MLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUyH2bEXEeeP95al6XTTTg" type="_gOHfILEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setDecoree(decoree);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyH2rEXEeeP95al6XTTTg" name="setDecoree" specification="_gSoLs7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyH27EXEeeP95al6XTTTg" name="decoree" type="_gOR3MLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>this.decoree = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyH3LEXEeeP95al6XTTTg" name="execute" specification="_gThjkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyH3bEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUyH3rEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUyH37EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUyH4LEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return decoree.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOIGMLEXEeeP95al6XTTTg" name="DecoratorSeqList">
            <eAnnotations xmi:id="_gOIGMbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOIGMrEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gOItQbEXEeeP95al6XTTTg" type="_gOHfILEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSnkobEXEeeP95al6XTTTg" name="DecoratorSeqList" method="_gUyH17EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSoLsLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSoLsbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVDNk7EXEeeP95al6XTTTg">
              <body>Constructor used to set the decoree to a known value at construction time.&#xD;
	 * @param decoree The decoree phrase sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSnkorEXEeeP95al6XTTTg" name="decoree" type="_gOR3MLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSoLsrEXEeeP95al6XTTTg" type="_gOHfILEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSoLs7EXEeeP95al6XTTTg" name="setDecoree" method="_gUyH2rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVDNlLEXEeeP95al6XTTTg">
              <body>Setter methods used to set the decoree.&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSoLtLEXEeeP95al6XTTTg" name="decoree" type="_gOR3MLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gThjkLEXEeeP95al6XTTTg" name="execute" method="_gUyH3LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gThjkbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gThjkrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTiKobEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gThjk7EXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOJ7YLEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList">
          <ownedComment xmi:id="_gVDNlbEXEeeP95al6XTTTg">
            <body>The class is used to implement &quot;Da Capo al fine&quot; or &quot;D.C. al fine&quot;, &#xD;
which is to repeat from the beginning up to the &quot;fine&quot; marker.&#xD;
&#xD;
this class assumes that only two target decorees are ever used.&#xD;
&#xD;
The is ToggleDecoratorSeqList that can be signaled to switch to the &#xD;
another target.   Be default, the target decoree (#0) remains the same even &#xD;
when it is accessed.  But after setFine() is called, the target decoree&#xD;
is switched to the #1 decoree (the &quot;fine&quot; target, usually an MTSeqList because&#xD;
it is the end of the piece).   After the #1 decoree is used, the target&#xD;
decoree is advanced to the next available decoree, which , for two decorees, &#xD;
would be back to the #0 decoree.  The class returns to default behavior then.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_gVDNlrEXEeeP95al6XTTTg">
            <body>ToggleDecoratorSeqList with controllable cycling</body>
          </ownedComment>
          <generalization xmi:id="_gSpZ0bEXEeeP95al6XTTTg" general="_gOcPQLEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUPVQbEXEeeP95al6XTTTg" name="isFine" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUPVQrEXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyu4LEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" specification="_gOKicLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyu4bEXEeeP95al6XTTTg" type="_gOJ7YLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyu4rEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" specification="_gSoywLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyu47EXEeeP95al6XTTTg" name="decorees" type="_gOR3MLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUyu5LEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUyu5bEXEeeP95al6XTTTg" type="_gOJ7YLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(decorees);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyu5rEXEeeP95al6XTTTg" name="setFine" specification="_gOLJgbEXEeeP95al6XTTTg">
            <language>java</language>
            <body>this.isFine = true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyu57EXEeeP95al6XTTTg" name="execute" specification="_gTixsrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyu6LEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUyu6bEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUyu6rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUyu67EXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (isFine) {&#xD;
			isFine = false;&#xD;
			this.setTargetToDecoree(1);&#xD;
			return super.execute(algo, params);&#xD;
		} else&#xD;
			return getTargetDecoree().execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUyu7LEXEeeP95al6XTTTg" name="toString" specification="_gOLJgrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUyu7bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOKicLEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" method="_gUyu4LEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gOKicbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOKicrEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVDNl7EXEeeP95al6XTTTg">
              <body>Instantiates the class with two MTSeqList decorees.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOLJgLEXEeeP95al6XTTTg" type="_gOJ7YLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOLJgbEXEeeP95al6XTTTg" name="setFine" method="_gUyu5rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVDNmLEXEeeP95al6XTTTg">
              <body>Sets the system to use the &quot;fine&quot; decorator at the next execution.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_gOLJgrEXEeeP95al6XTTTg" name="toString" method="_gUyu7LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gOLJg7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gSoywLEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" method="_gUyu4rEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSoywrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSoyw7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gSoywbEXEeeP95al6XTTTg" name="decorees" type="_gOR3MLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSoyxrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSoyxbEXEeeP95al6XTTTg" type="_gOJ7YLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gTixsrEXEeeP95al6XTTTg" name="execute" method="_gUyu57EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTjYwLEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTjYwbEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTjYxLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTjYwrEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOMXoLEXEeeP95al6XTTTg" name="Header">
          <ownedComment xmi:id="_gVDNmbEXEeeP95al6XTTTg">
            <body>An abc Header.  Headers are identified by a one character &quot;id&quot; and&#xD;
can have an arbitrary string value. &lt;br/>&#xD;
Note that this class represents many different *types* of headers, &#xD;
each with its own id value.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVDNmrEXEeeP95al6XTTTg">
            <body>A single Header class represents multiple, distinct header hosts.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUP8ULEXEeeP95al6XTTTg" name="_id" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUP8UrEXEeeP95al6XTTTg" name="_value" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gSqA4LEXEeeP95al6XTTTg" client="_gOMXoLEXEeeP95al6XTTTg" supplier="_gOPa8LEXEeeP95al6XTTTg" contract="_gOPa8LEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUzV8LEXEeeP95al6XTTTg" name="Header" specification="_gONlwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUzV8bEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUzV8rEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUzV87EXEeeP95al6XTTTg" type="_gOMXoLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>_id = id;&#xD;
		_value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUzV9LEXEeeP95al6XTTTg" name="execute" specification="_gTkm4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUzV9bEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUzV9rEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUzV97EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUzV-LEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_id, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUzV-bEXEeeP95al6XTTTg" name="getID" specification="_gONlxrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUzV-rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUzV-7EXEeeP95al6XTTTg" name="getValue" specification="_gOOM0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUzV_LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUzV_bEXEeeP95al6XTTTg" name="toString" specification="_gOOM0rEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUzV_rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id + &quot;:&quot; + _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gONlwLEXEeeP95al6XTTTg" name="Header" method="_gUzV8LEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gONlw7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gONlxLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVDNm7EXEeeP95al6XTTTg">
              <body>Create a header out of an id and value&#xD;
	 * &#xD;
	 * @param id    - one character corresponding to the abc header name&#xD;
	 * @param value - arbitrary string value of the header</body>
            </ownedComment>
            <ownedParameter xmi:id="_gONlwbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gONlwrEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gONlxbEXEeeP95al6XTTTg" type="_gOMXoLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gONlxrEXEeeP95al6XTTTg" name="getID" method="_gUzV-bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVDNnLEXEeeP95al6XTTTg">
              <body>Accessor for the id.&#xD;
	 * @return the _id</body>
            </ownedComment>
            <ownedParameter xmi:id="_gONlx7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOOM0LEXEeeP95al6XTTTg" name="getValue" method="_gUzV-7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVDNnbEXEeeP95al6XTTTg">
              <body>Accessor for the text value of this header.&#xD;
	 * @return the _value</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOOM0bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOOM0rEXEeeP95al6XTTTg" name="toString" method="_gUzV_bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVDNnrEXEeeP95al6XTTTg">
              <body>String representation of this header: &quot;id: text&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOOM07EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gTkm4LEXEeeP95al6XTTTg" name="execute" method="_gUzV9LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTkm4bEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTkm4rEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTlN8rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTlN8LEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gOOz4LEXEeeP95al6XTTTg" name="INote">
          <ownedComment xmi:id="_gVDNn7EXEeeP95al6XTTTg">
            <body>Note interface for Notes and collections of Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVD0oLEXEeeP95al6XTTTg">
            <body>A generalized notion of a note</body>
          </ownedComment>
          <generalization xmi:id="_gSqn8LEXEeeP95al6XTTTg" general="_gOPa8LEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gOPa8LEXEeeP95al6XTTTg" name="IPhrase">
          <ownedComment xmi:id="_gVD0obEXEeeP95al6XTTTg">
            <body>Top level of a piece of abc music.  The generalized notion of a playable piece of music.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVD0orEXEeeP95al6XTTTg">
            <body>Abstract Host&#xD;
Each concrete host calls its associated case on the visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_gTmcELEXEeeP95al6XTTTg" name="execute">
            <ownedParameter xmi:id="_gTmcEbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTmcErEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTnDIbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTmcE7EXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gOQCALEXEeeP95al6XTTTg" name="IPhraseVisitor">
          <ownedComment xmi:id="_gVD0o7EXEeeP95al6XTTTg">
            <body>Interface for a Phrase visitor.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVD0pLEXEeeP95al6XTTTg">
            <body>Abstract extended visitor.&#xD;
Supplies case behavior for every host.</body>
          </ownedComment>
          <ownedOperation xmi:id="_gTnqMLEXEeeP95al6XTTTg" name="caseAt">
            <ownedParameter xmi:id="_gTnqMbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTnqMrEXEeeP95al6XTTTg" name="host" type="_gOPa8LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTnqM7EXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gToRQbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTnqNLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gORQILEXEeeP95al6XTTTg" name="IPhraseVisitorCmd">
          <ownedComment xmi:id="_gVD0pbEXEeeP95al6XTTTg">
            <body>The command used by APhraseVisitor that is associated with a host or hosts.&#xD;
@author rixner</body>
          </ownedComment>
          <ownedComment xmi:id="_gVD0prEXEeeP95al6XTTTg">
            <body>Abstract command used by APhraseVisitor.  Each command is associated with a particular host(s).</body>
          </ownedComment>
          <ownedOperation xmi:id="_gTo4ULEXEeeP95al6XTTTg" name="apply">
            <ownedParameter xmi:id="_gTpfYLEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTpfYbEXEeeP95al6XTTTg" name="host" type="_gOPa8LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTpfYrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTqtgLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTpfY7EXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gOR3MLEXEeeP95al6XTTTg" name="ISeqList">
          <ownedComment xmi:id="_gVD0p7EXEeeP95al6XTTTg">
            <body>Interface for sequential lists of IPhrases.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVD0qLEXEeeP95al6XTTTg">
            <body>A list of IPhrases&#xD;
e.g. an ordered sequence of Notes.</body>
          </ownedComment>
          <generalization xmi:id="_gSrPALEXEeeP95al6XTTTg" general="_gOPa8LEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOSeQLEXEeeP95al6XTTTg" name="MTSeqList">
          <ownedComment xmi:id="_gVD0qbEXEeeP95al6XTTTg">
            <body>An empty sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVD0qrEXEeeP95al6XTTTg">
            <body>An empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUQjYbEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUQjYrEXEeeP95al6XTTTg" value="&quot;MTSeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gURKcLEXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_gOSeQLEXEeeP95al6XTTTg" isReadOnly="true" association="_gVqRkbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gURKcbEXEeeP95al6XTTTg" value="new MTSeqList()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gSrPAbEXEeeP95al6XTTTg" client="_gOSeQLEXEeeP95al6XTTTg" supplier="_gOR3MLEXEeeP95al6XTTTg" contract="_gOR3MLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUz9ALEXEeeP95al6XTTTg" name="execute" specification="_gTrUkbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUz9AbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUz9ArEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUz9A7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gUz9BLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUz9BbEXEeeP95al6XTTTg" name="toString" specification="_gOTFVLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUz9BrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;{}&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOSeQbEXEeeP95al6XTTTg" name="MTSeqList" visibility="private">
            <eAnnotations xmi:id="_gOTFULEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOTFUbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gOTFU7EXEeeP95al6XTTTg" type="_gOSeQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOTFVLEXEeeP95al6XTTTg" name="toString" method="_gUz9BbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gOTFVbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gTrUkbEXEeeP95al6XTTTg" name="execute" method="_gUz9ALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTrUkrEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTr7oLEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTr7o7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTr7obEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOUTcLEXEeeP95al6XTTTg" name="NESeqList">
          <ownedComment xmi:id="_gVD0q7EXEeeP95al6XTTTg">
            <body>A non-empty (&quot;cons&quot;) sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVD0rLEXEeeP95al6XTTTg">
            <body>A non-empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gURKcrEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gURKc7EXEeeP95al6XTTTg" value="&quot;NESeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gURKdLEXEeeP95al6XTTTg" name="_first" visibility="private" type="_gOPa8LEXEeeP95al6XTTTg" association="_gVq4obEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gURxgbEXEeeP95al6XTTTg" name="_rest" visibility="private" type="_gOR3MLEXEeeP95al6XTTTg" association="_gVrfsbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gURxg7EXEeeP95al6XTTTg" name="_toStringAlgo" visibility="private" isStatic="true" type="_gOQCALEXEeeP95al6XTTTg" association="_gVsGwbEXEeeP95al6XTTTg"/>
          <interfaceRealization xmi:id="_gSr2ELEXEeeP95al6XTTTg" client="_gOUTcLEXEeeP95al6XTTTg" supplier="_gOR3MLEXEeeP95al6XTTTg" contract="_gOR3MLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUz9B7EXEeeP95al6XTTTg" name="NESeqList" specification="_gSsdILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUz9CLEXEeeP95al6XTTTg" name="first" type="_gOPa8LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUz9CbEXEeeP95al6XTTTg" name="rest" type="_gOR3MLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gUz9CrEXEeeP95al6XTTTg" type="_gOUTcLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this._rest = rest;&#xD;
		this._first = first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUz9C7EXEeeP95al6XTTTg" name="getFirst" specification="_gOU6gLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUz9DLEXEeeP95al6XTTTg" type="_gOPa8LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUz9DbEXEeeP95al6XTTTg" name="getRest" specification="_gOU6gbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gUz9DrEXEeeP95al6XTTTg" type="_gOR3MLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _rest;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU0kELEXEeeP95al6XTTTg" name="execute" specification="_gTtJwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU0kEbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU0kErEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU0kE7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU0kFLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU0kFbEXEeeP95al6XTTTg" name="setToStringAlgo" specification="_gStEMbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU0kFrEXEeeP95al6XTTTg" name="stringAlgo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>_toStringAlgo = stringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU0kF7EXEeeP95al6XTTTg" name="getToStringAlgo" specification="_gOU6grEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU0kGLEXEeeP95al6XTTTg" type="_gOQCALEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _toStringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU0kGbEXEeeP95al6XTTTg" name="toString" specification="_gOVhkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU0kGrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) _rest.execute(_toStringAlgo, &quot;{&quot; + _first.toString());&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOU6gLEXEeeP95al6XTTTg" name="getFirst" method="_gUz9C7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVD0rrEXEeeP95al6XTTTg">
              <body>Accessor method for the first element&#xD;
	 * @return the IPhrase that is the first element of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSsdJrEXEeeP95al6XTTTg" type="_gOPa8LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOU6gbEXEeeP95al6XTTTg" name="getRest" method="_gUz9DbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVD0r7EXEeeP95al6XTTTg">
              <body>Accessor method for the rest of the lsit&#xD;
	 * @return the rest of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_gStEMLEXEeeP95al6XTTTg" type="_gOR3MLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOU6grEXEeeP95al6XTTTg" name="getToStringAlgo" isStatic="true" method="_gU0kF7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVD0sbEXEeeP95al6XTTTg">
              <body>Getter for the _toStringAlgo helper.  Only for use internally inside this package&#xD;
	 * so ToggleDecoratorSeqList and FineToggleDecoratorSeqList can use the same visitor.&#xD;
	 * @return the toStringAlgo helper visitor</body>
            </ownedComment>
            <ownedParameter xmi:id="_gStEM7EXEeeP95al6XTTTg" type="_gOQCALEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOVhkLEXEeeP95al6XTTTg" name="toString" method="_gU0kGbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVD0srEXEeeP95al6XTTTg">
              <body>Run a visitor over the list to convert it to a String.  &#xD;
	 * Delegates to the rest of the list using the helper algo, with the accumulator &#xD;
	 * (params[0]) set to &quot;{&quot;+_first.toString().  &#xD;
	 * @return &quot;{a, b, c, d}&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOVhkbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gSsdILEXEeeP95al6XTTTg" name="NESeqList" method="_gUz9B7EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSsdI7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSsdJLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVD0rbEXEeeP95al6XTTTg">
              <body>Cons an IPhrase to a Sequence List.&#xD;
	 * @param first The first element of the sequence&#xD;
	 * @param rest The rest of the sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSsdIbEXEeeP95al6XTTTg" name="first" type="_gOPa8LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSsdIrEXEeeP95al6XTTTg" name="rest" type="_gOR3MLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSsdJbEXEeeP95al6XTTTg" type="_gOUTcLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gStEMbEXEeeP95al6XTTTg" name="setToStringAlgo" isStatic="true" method="_gU0kFbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVD0sLEXEeeP95al6XTTTg">
              <body>Setter for the _toStringAlgo helper.  This non-typical method is provided solely &#xD;
	 * for the purpose of enabling the student to install their toStringAlgo into the &#xD;
	 * read-only provided code.&#xD;
	 * @param stringAlgo The helper algo to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gStEMrEXEeeP95al6XTTTg" name="stringAlgo" type="_gOQCALEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gTtJwLEXEeeP95al6XTTTg" name="execute" method="_gU0kELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTtJwbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTtJwrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTtw0bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTtJw7EXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOWvsLEXEeeP95al6XTTTg" name="Note">
          <ownedComment xmi:id="_gVD0s7EXEeeP95al6XTTTg">
            <body>Basic class representing musical Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVEbsLEXEeeP95al6XTTTg">
            <body>A playable note or rest.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUSYkbEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUSYkrEXEeeP95al6XTTTg" value="&quot;Note&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUS_oLEXEeeP95al6XTTTg" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUS_obEXEeeP95al6XTTTg" value="'Z'"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUS_orEXEeeP95al6XTTTg" name="octave">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUS_o7EXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUS_pLEXEeeP95al6XTTTg" name="accidental" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUS_pbEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUS_prEXEeeP95al6XTTTg" name="duration">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUTmsLEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUTmsbEXEeeP95al6XTTTg" name="isNatural" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUTmsrEXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gStrQLEXEeeP95al6XTTTg" client="_gOWvsLEXEeeP95al6XTTTg" supplier="_gOOz4LEXEeeP95al6XTTTg" contract="_gOOz4LEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1LILEXEeeP95al6XTTTg" name="Note" specification="_gOX90LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1LIbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU1LIrEXEeeP95al6XTTTg" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU1LI7EXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU1LJLEXEeeP95al6XTTTg" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU1LJbEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU1LJrEXEeeP95al6XTTTg" type="_gOWvsLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setName(name);&#xD;
		setOctave(octave);&#xD;
		setAccidental(accidental);&#xD;
		setDuration(duration);&#xD;
		setIsNatural(isNatural);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1LJ7EXEeeP95al6XTTTg" name="toString" specification="_gOYk4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1LKLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String s = &quot;(&quot;;&#xD;
		s += Character.toString(name);&#xD;
		int a = accidental;&#xD;
		if (isNatural) {&#xD;
			s += &quot;n&quot;;&#xD;
		}&#xD;
		while (a &lt; 0) {&#xD;
			s += &quot;b&quot;;&#xD;
			a++;&#xD;
		}&#xD;
		while (a > 0) {&#xD;
			s += &quot;#&quot;;&#xD;
			a--;&#xD;
		}&#xD;
		s += &quot;, &quot; + Integer.toString(octave) + &quot;, &quot;;&#xD;
		s += String.format(&quot;%3.2f&quot;, duration);&#xD;
		s += &quot;)&quot;;&#xD;
&#xD;
		return s;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1LKbEXEeeP95al6XTTTg" name="execute" specification="_gTu-8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1LKrEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU1LK7EXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU1LLLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU1LLbEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1LLrEXEeeP95al6XTTTg" name="setName" specification="_gOYk4rEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1LL7EXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>switch (name) {&#xD;
		case 'a':&#xD;
		case 'A':&#xD;
			this.name = 'A';&#xD;
			break;&#xD;
&#xD;
		case 'b':&#xD;
		case 'B':&#xD;
			this.name = 'B';&#xD;
			break;&#xD;
&#xD;
		case 'c':&#xD;
		case 'C':&#xD;
			this.name = 'C';&#xD;
			break;&#xD;
&#xD;
		case 'd':&#xD;
		case 'D':&#xD;
			this.name = 'D';&#xD;
			break;&#xD;
&#xD;
		case 'e':&#xD;
		case 'E':&#xD;
			this.name = 'E';&#xD;
			break;&#xD;
&#xD;
		case 'f':&#xD;
		case 'F':&#xD;
			this.name = 'F';&#xD;
			break;&#xD;
&#xD;
		case 'g':&#xD;
		case 'G':&#xD;
			this.name = 'G';&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			this.name = 'Z';&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1LMLEXEeeP95al6XTTTg" name="setAccidental" specification="_gOZL8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1LMbEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.accidental = accidental;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1LMrEXEeeP95al6XTTTg" name="getIsNatural" specification="_gOZL8rEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1LM7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return isNatural;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1yMLEXEeeP95al6XTTTg" name="setIsNatural" specification="_gOZL9LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1yMbEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.isNatural = isNatural;&#xD;
		if (isNatural)&#xD;
			accidental = 0;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOX90LEXEeeP95al6XTTTg" name="Note" method="_gU1LILEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gOX91rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOX917EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVEbsbEXEeeP95al6XTTTg">
              <body>Constructor for the class&#xD;
	 * @param name  The name of the note&#xD;
	 * @param octave The octave of the note w.r.t. middle C.  Zero = same octave as middle C.&#xD;
	 * @param accidental accidental setting sharp &amp;gt; 0, flat &amp;lt; 0&#xD;
	 * @param duration duration of note&#xD;
	 * @param isNatural flag to override key signature.  True if note should be natural, overriding key signature.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOX90bEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOX90rEXEeeP95al6XTTTg" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOX907EXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOX91LEXEeeP95al6XTTTg" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOX91bEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gOX92LEXEeeP95al6XTTTg" type="_gOWvsLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOYk4LEXEeeP95al6XTTTg" name="toString" method="_gU1LJ7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbsrEXEeeP95al6XTTTg">
              <body>Returns a string representation of the Note  &#xD;
	 * @return &quot;(name, octave, duration)&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOYk4bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOYk4rEXEeeP95al6XTTTg" name="setName" method="_gU1LLrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbs7EXEeeP95al6XTTTg">
              <body>Accessor to set the name of the note&#xD;
	 * @param name - the name to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOYk47EXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOZL8LEXEeeP95al6XTTTg" name="setAccidental" method="_gU1LMLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbtLEXEeeP95al6XTTTg">
              <body>Accessor to set the accidental value&#xD;
	 * @param accidental - the accidental to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOZL8bEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOZL8rEXEeeP95al6XTTTg" name="getIsNatural" method="_gU1LMrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbtbEXEeeP95al6XTTTg">
              <body>Accessor for isNatural flag&#xD;
	 * @return isNatural flag setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOZL87EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOZL9LEXEeeP95al6XTTTg" name="setIsNatural" method="_gU1yMLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbtrEXEeeP95al6XTTTg">
              <body>Settor for isNatural flag.  Accidentals will be set to zero if isNatural is true.&#xD;
	 * @param isNatural  New isNatural setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOZL9bEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gTu-8LEXEeeP95al6XTTTg" name="execute" method="_gU1LKbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTu-8bEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTu-8rEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTu-9bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTu-87EXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOaaELEXEeeP95al6XTTTg" name="NoteCollection" isAbstract="true">
          <ownedComment xmi:id="_gVEbt7EXEeeP95al6XTTTg">
            <body>A collection of multiple notes</body>
          </ownedComment>
          <ownedComment xmi:id="_gVEbuLEXEeeP95al6XTTTg">
            <body>A collection of Notes</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUUNwLEXEeeP95al6XTTTg" name="notes" visibility="protected" type="_gOWvsLEXEeeP95al6XTTTg" association="_gVst0bEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUUNwbEXEeeP95al6XTTTg" value="*"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gSu5YLEXEeeP95al6XTTTg" client="_gOaaELEXEeeP95al6XTTTg" supplier="_gOOz4LEXEeeP95al6XTTTg" contract="_gOOz4LEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1yMrEXEeeP95al6XTTTg" name="NoteCollection" specification="_gSu5YbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1yM7EXEeeP95al6XTTTg" name="notes" type="_gOWvsLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU1yNLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU1yNbEXEeeP95al6XTTTg" type="_gOaaELEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.notes = notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1yNrEXEeeP95al6XTTTg" name="getNotes" specification="_gObBILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1yN7EXEeeP95al6XTTTg" type="_gOWvsLEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU1yOLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gObBILEXEeeP95al6XTTTg" name="getNotes" method="_gU1yNrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbubEXEeeP95al6XTTTg">
              <body>Accessor for the array of notes in this collection&#xD;
	 * @return the array of notes</body>
            </ownedComment>
            <ownedParameter xmi:id="_gObBIbEXEeeP95al6XTTTg" type="_gOWvsLEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gObBIrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gSu5YbEXEeeP95al6XTTTg" name="NoteCollection" method="_gU1yMrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSu5Y7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSu5ZLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gSu5YrEXEeeP95al6XTTTg" name="notes" type="_gOWvsLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSvgcbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSvgcLEXEeeP95al6XTTTg" type="_gOaaELEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOcPQLEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList">
          <ownedComment xmi:id="_gVEburEXEeeP95al6XTTTg">
            <body>Multiple Decorator ISeqList where the active decoree (the &quot;target&quot;) is&#xD;
toggled (cycled, actually) through all the available decorees.   &#xD;
This is arguably a State Design Pattern where each decoree is &#xD;
considered to be another state of the system.&#xD;
This is used to implement repeats where the first time through, the notes are linked&#xD;
back to a repeat start (decoree #0) but the next time through, the next note is the one&#xD;
after the repeat (decoree #1).&#xD;
&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_gVEbu7EXEeeP95al6XTTTg">
            <body>Decorated ISeqList that transparently cycles through multiple targets (decorees)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUU00LEXEeeP95al6XTTTg" name="decorees" visibility="private" type="_gOR3MLEXEeeP95al6XTTTg" association="_gVtU4bEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUU00bEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUU007EXEeeP95al6XTTTg" value="{ MTSeqList.Singleton, MTSeqList.Singleton }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUVb4LEXEeeP95al6XTTTg" name="targetIdx" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUVb4bEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gSvgc7EXEeeP95al6XTTTg" client="_gOcPQLEXEeeP95al6XTTTg" supplier="_gOR3MLEXEeeP95al6XTTTg" contract="_gOR3MLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU1yObEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList" specification="_gSwHgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU1yOrEXEeeP95al6XTTTg" name="decorees" type="_gOR3MLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU1yO7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU1yPLEXEeeP95al6XTTTg" type="_gOcPQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setDecorees(decorees);&#xD;
		setTargetToDecoree(0);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU2ZQLEXEeeP95al6XTTTg" name="setDecorees" specification="_gSwukbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU2ZQbEXEeeP95al6XTTTg" name="decorees" type="_gOR3MLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU2ZQrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>this.decorees = decorees;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU2ZQ7EXEeeP95al6XTTTg" name="setDecoree" specification="_gSxVoLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU2ZRLEXEeeP95al6XTTTg" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU2ZRbEXEeeP95al6XTTTg" name="decoree" type="_gOR3MLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>this.decorees[idx] = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU2ZRrEXEeeP95al6XTTTg" name="setTargetToDecoree" specification="_gOc2VLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU2ZR7EXEeeP95al6XTTTg" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.targetIdx = targetIdx;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU2ZSLEXEeeP95al6XTTTg" name="getTargetDecoree" specification="_gOddYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU2ZSbEXEeeP95al6XTTTg" type="_gOR3MLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return decorees[targetIdx];&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU2ZSrEXEeeP95al6XTTTg" name="execute" specification="_gTwNELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU2ZS7EXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU2ZTLEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU2ZTbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU2ZTrEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>ISeqList target = decorees[targetIdx++];&#xD;
		if (targetIdx >= decorees.length)&#xD;
			targetIdx = 0; // This must be set before the delegate because it may be needed before the recursion returns.&#xD;
		return target.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU2ZT7EXEeeP95al6XTTTg" name="toString" specification="_gOddYbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU2ZULEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOcPQbEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList">
            <eAnnotations xmi:id="_gOc2ULEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOc2UbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gOc2U7EXEeeP95al6XTTTg" type="_gOcPQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOc2VLEXEeeP95al6XTTTg" name="setTargetToDecoree" method="_gU2ZRrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbvbEXEeeP95al6XTTTg">
              <body>Used to explicitly set the target (active) decoree if needed.&#xD;
	 * @param targetIdx  the index of the target decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOc2VbEXEeeP95al6XTTTg" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gOddYLEXEeeP95al6XTTTg" name="getTargetDecoree" method="_gU2ZSLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbvrEXEeeP95al6XTTTg">
              <body>Accessor for the current target (active) decoree&#xD;
	 * @return  The current target (active) decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSxVo7EXEeeP95al6XTTTg" type="_gOR3MLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gOddYbEXEeeP95al6XTTTg" name="toString" method="_gU2ZT7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gOddYrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gSwHgLEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList" method="_gU1yObEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSwHgrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSwHg7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gSwHgbEXEeeP95al6XTTTg" name="decorees" type="_gOR3MLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSwHhrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSwHhbEXEeeP95al6XTTTg" type="_gOcPQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gSwukbEXEeeP95al6XTTTg" name="setDecorees" method="_gU2ZQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gSwukrEXEeeP95al6XTTTg" name="decorees" type="_gOR3MLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSwulLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gSxVoLEXEeeP95al6XTTTg" name="setDecoree" method="_gU2ZQ7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVEbvLEXEeeP95al6XTTTg">
              <body>Setter methods used to set a particular decoree.   &#xD;
	 * The specified index must already exist.&#xD;
	 * @param idx The index of the decoree to replace&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gSxVobEXEeeP95al6XTTTg" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSxVorEXEeeP95al6XTTTg" name="decoree" type="_gOR3MLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gTwNELEXEeeP95al6XTTTg" name="execute" method="_gU2ZSrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTwNEbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTw0ILEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTw0I7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTw0IbEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOfSkLEXEeeP95al6XTTTg" name="Triplet">
          <ownedComment xmi:id="_gVEbv7EXEeeP95al6XTTTg">
            <body>A musical triplet.  The three notes should be played with 2/3 of their&#xD;
indicated duration.</body>
          </ownedComment>
          <ownedComment xmi:id="_gVFCwLEXEeeP95al6XTTTg">
            <body>A set of 3 notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_gSyjwbEXEeeP95al6XTTTg" general="_gOaaELEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUVb47EXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUWC8LEXEeeP95al6XTTTg" value="&quot;Triplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU3AULEXEeeP95al6XTTTg" name="Triplet" specification="_gSx8sLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU3AUbEXEeeP95al6XTTTg" name="n1" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU3AUrEXEeeP95al6XTTTg" name="n2" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU3AU7EXEeeP95al6XTTTg" name="n3" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU3AVLEXEeeP95al6XTTTg" type="_gOfSkLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(n1, n2, n3);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU3AVbEXEeeP95al6XTTTg" name="execute" specification="_gTyCQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU3AVrEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU3AV7EXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU3AWLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU3AWbEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU3AWrEXEeeP95al6XTTTg" name="toString" specification="_gOggsLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU3AW7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Triplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOggsLEXEeeP95al6XTTTg" name="toString" method="_gU3AWrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gOggsbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gSx8sLEXEeeP95al6XTTTg" name="Triplet" method="_gU3AULEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSx8tLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSx8tbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gSx8sbEXEeeP95al6XTTTg" name="n1" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSx8srEXEeeP95al6XTTTg" name="n2" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSx8s7EXEeeP95al6XTTTg" name="n3" type="_gOWvsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gSyjwLEXEeeP95al6XTTTg" type="_gOfSkLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gTyCQLEXEeeP95al6XTTTg" name="execute" method="_gU3AVbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTyCQbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTyCQrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTypUrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTypULEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOhu0LEXEeeP95al6XTTTg" name="Tuplet">
          <ownedComment xmi:id="_gVFCwbEXEeeP95al6XTTTg">
            <body>Class that represents a tuplet, a series of notes played in a fraction of their normal total time.&#xD;
The exact fraction depends on the meter and the number of notes in the tuplet.&#xD;
A triplet is a specific type of tuplet.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_gVFCwrEXEeeP95al6XTTTg">
            <body>A arbitrary set of notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_gSzx4LEXEeeP95al6XTTTg" general="_gOaaELEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUWC8bEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUWC8rEXEeeP95al6XTTTg" value="&quot;Tuplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU3AXLEXEeeP95al6XTTTg" name="Tuplet" specification="_gSzK0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU3AXbEXEeeP95al6XTTTg" name="notes" type="_gOWvsLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU3AXrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU3AX7EXEeeP95al6XTTTg" type="_gOhu0LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU3nYLEXEeeP95al6XTTTg" name="execute" specification="_gTzQYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU3nYbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU3nYrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU3nY7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU3nZLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU3nZbEXEeeP95al6XTTTg" name="toString" specification="_gOhu0bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU3nZrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Tuplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOhu0bEXEeeP95al6XTTTg" name="toString" method="_gU3nZbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gOiV4LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gSzK0LEXEeeP95al6XTTTg" name="Tuplet" method="_gU3AXLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gSzK0rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gSzK07EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gSzK0bEXEeeP95al6XTTTg" name="notes" type="_gOWvsLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSzK1rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSzK1bEXEeeP95al6XTTTg" type="_gOhu0LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gTzQYLEXEeeP95al6XTTTg" name="execute" method="_gU3nYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gTzQYbEXEeeP95al6XTTTg" name="algo" type="_gOQCALEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gTzQYrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gTz3crEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gTz3cLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVocYbEXEeeP95al6XTTTg" name="" memberEnd="_gVocYrEXEeeP95al6XTTTg _gUNgELEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVocYrEXEeeP95al6XTTTg" name="" type="_gOBYgLEXEeeP95al6XTTTg" association="_gVocYbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVpqgLEXEeeP95al6XTTTg" name="" memberEnd="_gVpqgbEXEeeP95al6XTTTg _gUNgErEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVpqgbEXEeeP95al6XTTTg" name="" type="_gOBYgLEXEeeP95al6XTTTg" association="_gVpqgLEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVpqg7EXEeeP95al6XTTTg" name="" memberEnd="_gVpqhLEXEeeP95al6XTTTg _gUOuMrEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVpqhLEXEeeP95al6XTTTg" name="" type="_gOHfILEXEeeP95al6XTTTg" association="_gVpqg7EXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVqRkbEXEeeP95al6XTTTg" name="" memberEnd="_gVqRkrEXEeeP95al6XTTTg _gURKcLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVqRkrEXEeeP95al6XTTTg" name="" type="_gOSeQLEXEeeP95al6XTTTg" association="_gVqRkbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVq4obEXEeeP95al6XTTTg" name="" memberEnd="_gVq4orEXEeeP95al6XTTTg _gURKdLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVq4orEXEeeP95al6XTTTg" name="" type="_gOUTcLEXEeeP95al6XTTTg" association="_gVq4obEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVrfsbEXEeeP95al6XTTTg" name="" memberEnd="_gVrfsrEXEeeP95al6XTTTg _gURxgbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVrfsrEXEeeP95al6XTTTg" name="" type="_gOUTcLEXEeeP95al6XTTTg" association="_gVrfsbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVsGwbEXEeeP95al6XTTTg" name="" memberEnd="_gVsGwrEXEeeP95al6XTTTg _gURxg7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVsGwrEXEeeP95al6XTTTg" name="" type="_gOUTcLEXEeeP95al6XTTTg" association="_gVsGwbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVst0bEXEeeP95al6XTTTg" name="" memberEnd="_gVst0rEXEeeP95al6XTTTg _gUUNwLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVst0rEXEeeP95al6XTTTg" name="" type="_gOaaELEXEeeP95al6XTTTg" association="_gVst0bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVtU4bEXEeeP95al6XTTTg" name="" memberEnd="_gVtU4rEXEeeP95al6XTTTg _gUU00LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVtU4rEXEeeP95al6XTTTg" name="" type="_gOcPQLEXEeeP95al6XTTTg" association="_gVtU4bEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gMOBsbEXEeeP95al6XTTTg" name="token">
        <packagedElement xmi:type="uml:Package" xmi:id="_gMOBsrEXEeeP95al6XTTTg" name="tokenizer">
          <packagedElement xmi:type="uml:Class" xmi:id="_gO5iQLEXEeeP95al6XTTTg" name="ABCTokenizer">
            <ownedComment xmi:id="_gVG39bEXEeeP95al6XTTTg">
              <body>Tokenizer for the abc music language. getNextToken() returns next Token in&#xD;
stream. Does not recognize all possible language constructs and symbols&#xD;
(returned as &quot;?&quot; token).  Tokens are the atomic psemantic pieces of a language,&#xD;
such as Note, repeat start, measure, chord, etc.   The token ids (names) returned are: &lt;br/>&#xD;
 &lt;br/>&#xD;
 EOF - end of file&lt;br/>&#xD;
 &quot;|:&quot; - repeat start&lt;br/>&#xD;
 &quot;:|&quot; - repeat end&lt;br/>&#xD;
 &quot;|1&quot; - first repeat start&lt;br/>&#xD;
 &quot;[1&quot; - alternative first repeat start&lt;br/>&#xD;
 &quot;|2&quot; - second repeat start&lt;br/>&#xD;
 &quot;[2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;[|&quot; - thick-thin double bar line&lt;br/>&#xD;
 &quot;|]&quot; - thin-thick double bar line&lt;br/>&#xD;
 &quot;:|2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;||&quot; - double measure bar&lt;br/>&#xD;
 &quot;::&quot; - short hand for repeat end-start &quot;:||:&quot;&lt;br/>&#xD;
 &quot;|&quot; - Measure bar&lt;br/>&#xD;
 &quot;[&quot;) - Chord start&lt;br/>&#xD;
 &quot;]&quot; - Chord end&lt;br/>&#xD;
 &quot;-&quot; - tie&lt;br/>&#xD;
 &quot;&amp;lt;&quot; - the previous note  is dotted, the next note halved&lt;br/> &#xD;
 &quot;&amp;gt;&quot; - the previous note is halved, the next dotted&lt;br/>&#xD;
 &quot;{&quot; - Grace begin&lt;br/>&#xD;
 &quot;}&quot; - Grace end&lt;br/>&#xD;
 &quot;%&quot; - Comment&lt;br/>&#xD;
 &quot;[Header ID]&quot; - where [Header ID] is a single letter from {ABCDEFGHIKLMNOPQRSTWXZ} &lt;br/> &#xD;
 &quot;Note&quot; - a single note whose lexeme contains the name, accidentals, octave and duration&lt;br/>&#xD;
 &quot;Tuplet&quot; - the lexeme is the number of subsequent Notes comprise this tuplet. &lt;br/>&#xD;
 &quot;Quote&quot; - lexeme is the quoted text &lt;br/>&#xD;
 &quot;?&quot; - unknown language construct. &lt;br/>&#xD;
  &lt;br/>&#xD;
References: &lt;br/>&#xD;
&lt;a href =&#xD;
&quot;http://download.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html&quot;&#xD;
>java.util.regex.Pattern for regex guide&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://asciitable.com/&quot;>ASCII table for codes&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://abcnotation.com/abc2mtex/abc.txt&quot;>abc music standard 1.6&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_gS8707EXEeeP95al6XTTTg" general="_gPA3ALEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_gUfM4rEXEeeP95al6XTTTg" name="keywords1" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_gUfz8bEXEeeP95al6XTTTg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUfM47EXEeeP95al6XTTTg" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_gUfz8rEXEeeP95al6XTTTg" name="keywords2" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_gUgbAbEXEeeP95al6XTTTg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUfz87EXEeeP95al6XTTTg" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_gUgbArEXEeeP95al6XTTTg" name="keywordsVector" visibility="private" type="_gT-PgLEXEeeP95al6XTTTg" association="_gV0CkbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUhCEbEXEeeP95al6XTTTg" value="new Vector&lt;Map&lt;String, String>>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_gUhCE7EXEeeP95al6XTTTg" name="tokFac" visibility="private" type="_gO0CsLEXEeeP95al6XTTTg" association="_gV0pobEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUhCFLEXEeeP95al6XTTTg" value="TokenFactory.Singleton"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_gUhpIbEXEeeP95al6XTTTg" name="stack" visibility="private" type="_gTbc8LEXEeeP95al6XTTTg" association="_gV1QsbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUiQMLEXEeeP95al6XTTTg" value="new Stack&lt;Token>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_gUiQMrEXEeeP95al6XTTTg" name="ACCIDENTALS" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUiQM7EXEeeP95al6XTTTg" value="&quot;_=^&quot;"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_gS8UwLEXEeeP95al6XTTTg" client="_gO5iQLEXEeeP95al6XTTTg" supplier="_gO_B07EXEeeP95al6XTTTg" contract="_gO_B07EXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU8f4LEXEeeP95al6XTTTg" name="ABCTokenizer" specification="_gO6wYLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU8f4bEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gU8f4rEXEeeP95al6XTTTg" type="_gO5iQLEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>super(inputFileName);&#xD;
&#xD;
		// note: &quot;\\7C&quot; => &quot;|&quot;, &quot;\\x5B&quot; => &quot;[&quot;, &quot;\\x5D&quot; => &quot;]&quot;&#xD;
		// &quot;\\x7B&quot; => &quot;{&quot;,  &quot;\\x7D&quot; => &quot;}&quot;&#xD;
&#xD;
		// load the regex->keyword mapping&#xD;
		keywords1.put(&quot;\\x7C:&quot;, &quot;|:&quot;); // repeat start&#xD;
		keywords1.put(&quot;:\\x7C&quot;, &quot;:|&quot;); // repeat end&#xD;
		keywords1.put(&quot;\\x7C1&quot;, &quot;|1&quot;); // first repeat start&#xD;
		keywords1.put(&quot;\\x5B1&quot;, &quot;[1&quot;); // alternative first repeat start&#xD;
		keywords1.put(&quot;\\x7C2&quot;, &quot;|2&quot;); // second repeat start&#xD;
		keywords1.put(&quot;\\x5B2&quot;, &quot;[2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x5B\\7C&quot;, &quot;[|&quot;); // thick-thin double bar line&#xD;
		keywords1.put(&quot;\\7C\\x5D&quot;, &quot;|]&quot;); // thin-thick double bar line&#xD;
		keywords1.put(&quot;:\\x7C2&quot;, &quot;:|2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x7C\\x7C&quot;, &quot;||&quot;); // double measure bar&#xD;
		keywords1.put(&quot;::&quot;, &quot;::&quot;); // short hand for repeat end-start &quot;:||:&quot;&#xD;
&#xD;
		// Should these be separated out into a different map because order of&#xD;
		// search is important?&#xD;
		keywords2.put(&quot;\\x7C&quot;, &quot;|&quot;); // Measure bar&#xD;
		keywords2.put(&quot;\\x5B&quot;, &quot;[&quot;); // Chord start&#xD;
		keywords2.put(&quot;\\x5D&quot;, &quot;]&quot;); // Chord end&#xD;
		keywords2.put(&quot;-&quot;, &quot;-&quot;); // tie&#xD;
		keywords2.put(&quot;>&quot;, &quot;>&quot;); // the previous note  is dotted, the next note halved &#xD;
		keywords2.put(&quot;&lt;&quot;, &quot;&lt;&quot;); // the previous note is halved, the next dotted&#xD;
		keywords2.put(&quot;\\x7B&quot;, &quot;{&quot;); // Grace begin&#xD;
		keywords2.put(&quot;\\x7D&quot;, &quot;}&quot;); // Grace end		&#xD;
&#xD;
		keywordsVector.add(keywords1);&#xD;
		keywordsVector.add(keywords2);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU8f47EXEeeP95al6XTTTg" name="getNextToken" specification="_gO6wZbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU8f5LEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU8f5bEXEeeP95al6XTTTg" name="putBack" specification="_gS870LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU8f5rEXEeeP95al6XTTTg" name="t" type="_gO0pw7EXEeeP95al6XTTTg"/>
              <language>java</language>
              <body>stack.push(t);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU8f57EXEeeP95al6XTTTg" name="makeNextToken" specification="_gO7XcLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU8f6LEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>String sTok = this.getNextStringToken();&#xD;
		if (null == sTok)&#xD;
			return tokFac.makeToken(&quot;EOF&quot;, &quot;EOF&quot;); // EOF returns as null&#xD;
		if (sTok.equals(&quot;\n&quot;))&#xD;
			return makeNextToken(); // discard bare LF's.&#xD;
&#xD;
		// search for first keywords, pushing extra tokens back into tokenizer's&#xD;
		// stack.&#xD;
		for (Map&lt;String, String> keywords : keywordsVector) {&#xD;
			for (String kw : keywords.keySet()) {&#xD;
				if (keywords.get(kw).equals(sTok))&#xD;
					return tokFac.makeToken(sTok, sTok);&#xD;
				String[] split = sTok.split(kw, -1);&#xD;
				if (split.length > 1) {&#xD;
&#xD;
					for (int i = split.length - 1; i > 0; i--) {&#xD;
						if (!split[i].equals(&quot;&quot;)) {&#xD;
							this.putStringBack(split[i]);&#xD;
						}&#xD;
						this.putStringBack(keywords.get(kw));&#xD;
					}&#xD;
					if (!split[0].equals(&quot;&quot;)) {&#xD;
						this.putStringBack(split[0]);&#xD;
					}&#xD;
					return makeNextToken();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find header tokens, which are the whole line.&#xD;
		int idx = sTok.indexOf(&quot;:&quot;);&#xD;
		if (1 == idx) {&#xD;
			String header = sTok;&#xD;
			String next = super.getNextStringToken();&#xD;
			while (!next.equals(&quot;\n&quot;)) {&#xD;
				header += &quot; &quot; + next;&#xD;
				next = this.getNextStringToken();&#xD;
			}&#xD;
			return tokFac&#xD;
					.makeToken(header.substring(0, 1), header.substring(2));&#xD;
		}&#xD;
&#xD;
		// Find comment, which is the rest of the line.&#xD;
		idx = sTok.indexOf(&quot;%&quot;);&#xD;
		if (-1 != idx) {&#xD;
			// Comment in line somewhere&#xD;
			if (0 == idx) { // comment is at beginning of line&#xD;
				String comment = sTok;&#xD;
				String next = super.getNextStringToken();&#xD;
				while (!next.equals(&quot;\n&quot;)) { // get the rest of the line&#xD;
					comment += next;&#xD;
					// get the next string token &#xD;
					next = this.getNextStringToken();&#xD;
				}&#xD;
				return tokFac.makeToken(&quot;%&quot;, comment.substring(1));&#xD;
			} else { // comment is in middle of the line&#xD;
				// push the entire comment, incl. the comment char, back into&#xD;
				// the tokenizer b/c it can't be dealt with yet.&#xD;
				this.putStringBack(sTok.substring(idx));&#xD;
				// push the tokens before the comment back into the tokenizer&#xD;
				// so that they can be then processed when pulled back out.&#xD;
				this.putStringBack(sTok.substring(0, idx));&#xD;
				return makeNextToken(); // Process whatever is in the tokenizer&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find tuplet&#xD;
		if ('(' == sTok.charAt(0)) {&#xD;
			// Tuplet found&#xD;
			int n = Integer.parseInt(sTok.substring(1, 2)); // get tuplet size&#xD;
			this.putStringBack(sTok.substring(2)); // push rest back into tokenizer&#xD;
			return tokFac.makeToken(&quot;Tuplet&quot;, &quot;&quot; + n);&#xD;
		}&#xD;
&#xD;
		if (Character.isLetter(sTok.charAt(0))&#xD;
				|| ACCIDENTALS.contains(sTok.subSequence(0, 1))) {&#xD;
			// Start of Note string found.&#xD;
			return tokFac.makeToken(&quot;Note&quot;, parseNote(sTok));&#xD;
		}&#xD;
&#xD;
		if ('\&quot;' == sTok.charAt(0)) {&#xD;
			// Quoted string found&#xD;
			return tokFac.makeToken(&quot;Quote&quot;, parseQuote(&quot;&quot;, sTok.substring(1)));&#xD;
		}&#xD;
&#xD;
		if (sTok.equals(&quot;\\&quot;)) {&#xD;
			// abc line break detected.  Ignore.&#xD;
			return makeNextToken();&#xD;
		}&#xD;
&#xD;
		// Unknown token&#xD;
		return tokFac.makeToken(&quot;?&quot;, sTok);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU8f6bEXEeeP95al6XTTTg" name="parseNote" specification="_gO7XcbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU8f6rEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gU8f67EXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>int i = 1;&#xD;
		// look for pre-note name characters&#xD;
		if (!Character.isLetter(sTok.charAt(0))) {&#xD;
			for (; i &lt; sTok.length(); i++) {&#xD;
				if (sTok.charAt(i) != sTok.charAt(0)) {&#xD;
					i++; // move to next char&#xD;
					break; // This assumes that this char is a letter which&#xD;
							// follows the accidentals&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (; i &lt; sTok.length(); i++) {&#xD;
			// look for non-post-note name characters.&#xD;
			if (!(Character.isDigit(sTok.charAt(i)) || &quot;,/'&quot;.contains(sTok&#xD;
					.subSequence(i, i + 1)))) {&#xD;
				putStringBack(sTok.substring(i)); // put the rest back in the&#xD;
													// tokenizer.&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		// i = end of note string&#xD;
		return sTok.substring(0, i);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU8f7LEXEeeP95al6XTTTg" name="parseQuote" specification="_gO7-gbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU8f7bEXEeeP95al6XTTTg" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gU8f7rEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gU8f77EXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; sTok.length(); i++) {&#xD;
			if ('\&quot;' == sTok.charAt(i)) {&#xD;
				String rest = sTok.substring(i + 1);&#xD;
				if (!rest.equals(&quot;&quot;)) {&#xD;
					this.putStringBack(rest);&#xD;
				}&#xD;
				return acc;&#xD;
			} else {&#xD;
				acc += sTok.charAt(i);&#xD;
			}&#xD;
		}&#xD;
		acc += &quot; &quot;;&#xD;
		return parseQuote(acc, this.getNextStringToken());&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_gO6wYLEXEeeP95al6XTTTg" name="ABCTokenizer" method="_gU8f4LEXEeeP95al6XTTTg" raisedException="_gS-xALEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gO6wYrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gO6wY7EXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_gVG39rEXEeeP95al6XTTTg">
                <body>Constructor for the class&#xD;
	 * @param inputFileName  File to tokenize&#xD;
	 * @throws FileNotFoundException  When input file could not be loaded.</body>
              </ownedComment>
              <ownedParameter xmi:id="_gO6wYbEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gO6wZLEXEeeP95al6XTTTg" type="_gO5iQLEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_gO6wZbEXEeeP95al6XTTTg" name="getNextToken" method="_gU8f47EXEeeP95al6XTTTg">
              <ownedComment xmi:id="_gVG397EXEeeP95al6XTTTg">
                <body>Return the next token, either from the stream or the last token if it was&#xD;
	 * pushed back</body>
              </ownedComment>
              <ownedParameter xmi:id="_gS8UwbEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_gO7XcLEXEeeP95al6XTTTg" name="makeNextToken" visibility="private" method="_gU8f57EXEeeP95al6XTTTg">
              <ownedComment xmi:id="_gVG3-bEXEeeP95al6XTTTg">
                <body>Parse the strings down from the getNextStringToken further, separating&#xD;
	 * out the abc keywords into tokens.&#xD;
	 * @return The next Token in the stream</body>
              </ownedComment>
              <ownedParameter xmi:id="_gS870rEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_gO7XcbEXEeeP95al6XTTTg" name="parseNote" visibility="private" method="_gU8f6bEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_gVG3-rEXEeeP95al6XTTTg">
                <body>Returns the first note string in the given string.&#xD;
	 * &#xD;
	 * @param sTok  The string to parse&#xD;
	 * @return A String that is the first note in the given string</body>
              </ownedComment>
              <ownedParameter xmi:id="_gO7XcrEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gO7-gLEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_gO7-gbEXEeeP95al6XTTTg" name="parseQuote" visibility="private" method="_gU8f7LEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_gVG3-7EXEeeP95al6XTTTg">
                <body>Returns the rest of a string, incl. spaces until the next double quote&#xD;
	 * @param acc  Accumulated result string&#xD;
	 * @param sTok the current string token&#xD;
	 * @return the full quoted string</body>
              </ownedComment>
              <ownedParameter xmi:id="_gO7-grEXEeeP95al6XTTTg" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gO7-g7EXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gO7-hLEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_gS870LEXEeeP95al6XTTTg" name="putBack" method="_gU8f5bEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_gVG3-LEXEeeP95al6XTTTg">
                <body>*	 Push token back into the stream&#xD;
	 * @param t the Token you need to put back in the stream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_gS870bEXEeeP95al6XTTTg" name="t" type="_gO0pw7EXEeeP95al6XTTTg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gO-awLEXEeeP95al6XTTTg" name="IStringTokenizer">
            <ownedComment xmi:id="_gVG3_LEXEeeP95al6XTTTg">
              <body>Tokenizer that only returns string tokens.  This is a specialization of ITokenizer for strings.&#xD;
&#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_gO-awbEXEeeP95al6XTTTg" name="getNextStringToken" isAbstract="true">
              <ownedComment xmi:id="_gVG3_bEXEeeP95al6XTTTg">
                <body>Return the next token.&#xD;
	 * @return The next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_gO_B0LEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_gO_B0bEXEeeP95al6XTTTg" name="putStringBack" isAbstract="true">
              <ownedComment xmi:id="_gVG3_rEXEeeP95al6XTTTg">
                <body>Put the previously consumed token back into the token stream. Can only&#xD;
	 * put back one token.&#xD;
	 * @param t the token to push back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_gO_B0rEXEeeP95al6XTTTg" name="t">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gO_B07EXEeeP95al6XTTTg" name="ITokenizer" isAbstract="true">
            <ownedComment xmi:id="_gVG3_7EXEeeP95al6XTTTg">
              <body>Extract and return an appropriate Token from some given source.</body>
            </ownedComment>
            <ownedOperation xmi:id="_gO_o4bEXEeeP95al6XTTTg" name="getNextToken" isAbstract="true">
              <ownedComment xmi:id="_gVG4ALEXEeeP95al6XTTTg">
                <body>Return the next token.&#xD;
	 * @return the next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_gS9i4LEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_gS9i4bEXEeeP95al6XTTTg" name="putBack" isAbstract="true">
              <ownedComment xmi:id="_gVHfALEXEeeP95al6XTTTg">
                <body>Put the previously consumed token back into the token stream. &#xD;
	 * @param t the token to put back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_gS9i4rEXEeeP95al6XTTTg" name="t" type="_gO0pw7EXEeeP95al6XTTTg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPA3ALEXEeeP95al6XTTTg" name="StringTokenizer">
            <ownedComment xmi:id="_gVHfAbEXEeeP95al6XTTTg">
              <body>Special tokenizer that converts a stream of various types of tokens from  StreamTokenizer and converts them into a stream of strings. &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_gUi3QLEXEeeP95al6XTTTg" name="stack" visibility="private" type="_gTbc8LEXEeeP95al6XTTTg" association="_gV13wbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUjeUbEXEeeP95al6XTTTg" value="new Stack&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_gUjeU7EXEeeP95al6XTTTg" name="_st" visibility="protected" type="_gTBNQbEXEeeP95al6XTTTg" association="_gV2e0bEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_gUjeVbEXEeeP95al6XTTTg" name="_fileReader" visibility="protected" type="_gTAmMrEXEeeP95al6XTTTg" association="_gV3F4bEXEeeP95al6XTTTg"/>
            <interfaceRealization xmi:id="_gTB0UbEXEeeP95al6XTTTg" client="_gPA3ALEXEeeP95al6XTTTg" supplier="_gO-awLEXEeeP95al6XTTTg" contract="_gO-awLEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU9G8LEXEeeP95al6XTTTg" name="StringTokenizer" specification="_gPBeELEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU9G8bEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gU9G8rEXEeeP95al6XTTTg" type="_gPA3ALEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>// Create an input text file object:&#xD;
&#xD;
		//_st = new StreamTokenizer(new BufferedReader(url.openStream()));&#xD;
		//_fileReader = new FileReader(inputFileName);&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(inputFileName)&#xD;
					.openStream();&#xD;
&#xD;
			_fileReader = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			//_fileReader = new FileReader(file);&#xD;
		} catch (Exception e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			System.err.println(&quot;StringTokenizer error opening file: &quot; + e);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		// Create a Streamtokenizer to parse the input text file:&#xD;
		_st = new StreamTokenizer(_fileReader);&#xD;
&#xD;
		_st.eolIsSignificant(true);&#xD;
		_st.wordChars(33, 125);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU9G87EXEeeP95al6XTTTg" name="getNextStringToken" specification="_gPCFILEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU9G9LEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextStringToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU9G9bEXEeeP95al6XTTTg" name="putStringBack" specification="_gPCsMLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU9G9rEXEeeP95al6XTTTg" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>stack.push(str);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU9uALEXEeeP95al6XTTTg" name="makeNextStringToken" specification="_gPCsNbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gU9uAbEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {&#xD;
			int t = _st.nextToken();&#xD;
			if (StreamTokenizer.TT_EOL == t)&#xD;
				return &quot;\n&quot;;&#xD;
			if (StreamTokenizer.TT_EOF != t) {&#xD;
				switch (_st.ttype) {&#xD;
&#xD;
				case StreamTokenizer.TT_WORD: {&#xD;
					return _st.sval;&#xD;
				}&#xD;
&#xD;
				case StreamTokenizer.TT_NUMBER: {&#xD;
					// check if number is an integer&#xD;
					if (Math.floor(_st.nval) == _st.nval) {&#xD;
						return &quot;&quot; + (int) _st.nval;&#xD;
					} else {&#xD;
						return &quot;&quot; + _st.nval;&#xD;
					}&#xD;
				}&#xD;
&#xD;
				default:&#xD;
					throw new IllegalArgumentException(&#xD;
							&quot;Tokenizer1: Illegal token type = &quot; + _st.ttype);&#xD;
				}&#xD;
			} else {&#xD;
				_fileReader.close();&#xD;
				System.err.println(&quot;EOF Token&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.out.println(&quot;StringTokenizer.makeNextToken(): Exception = &quot;&#xD;
					+ e.getMessage());&#xD;
			return null;&#xD;
		}&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_gPBeELEXEeeP95al6XTTTg" name="StringTokenizer" method="_gU9G8LEXEeeP95al6XTTTg" raisedException="_gS-xALEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_gPBeErEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gPBeE7EXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_gVHfArEXEeeP95al6XTTTg">
                <body>Initialize _st to read from a input Reader file with the given input file&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file&#xD;
	 * @throws FileNotFoundException When the input file could not be opened</body>
              </ownedComment>
              <ownedParameter xmi:id="_gPBeEbEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_gPBeFLEXEeeP95al6XTTTg" type="_gPA3ALEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_gPCFILEXEeeP95al6XTTTg" name="getNextStringToken" method="_gU9G87EXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gPCFIbEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_gPCsMLEXEeeP95al6XTTTg" name="putStringBack" method="_gU9G9bEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_gPCsMbEXEeeP95al6XTTTg" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_gPCsNbEXEeeP95al6XTTTg" name="makeNextStringToken" visibility="private" method="_gU9uALEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_gVHfA7EXEeeP95al6XTTTg">
                <body>Returns the next string in the stream.  &#xD;
	 * Returns LF (&quot;\n&quot;) at end of line.  &#xD;
	 * Returns null for EOF or error&#xD;
	 * &#xD;
	 * @return A string token or null if EOF</body>
              </ownedComment>
              <ownedParameter xmi:id="_gPDTQLEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_gV0CkbEXEeeP95al6XTTTg" name="" memberEnd="_gV0CkrEXEeeP95al6XTTTg _gUgbArEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_gV0CkrEXEeeP95al6XTTTg" name="" type="_gO5iQLEXEeeP95al6XTTTg" association="_gV0CkbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_gV0pobEXEeeP95al6XTTTg" name="" memberEnd="_gV0porEXEeeP95al6XTTTg _gUhCE7EXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_gV0porEXEeeP95al6XTTTg" name="" type="_gO5iQLEXEeeP95al6XTTTg" association="_gV0pobEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_gV1QsbEXEeeP95al6XTTTg" name="" memberEnd="_gV1QsrEXEeeP95al6XTTTg _gUhpIbEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_gV1QsrEXEeeP95al6XTTTg" name="" type="_gO5iQLEXEeeP95al6XTTTg" association="_gV1QsbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_gV13wbEXEeeP95al6XTTTg" name="" memberEnd="_gV13wrEXEeeP95al6XTTTg _gUi3QLEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_gV13wrEXEeeP95al6XTTTg" name="" type="_gPA3ALEXEeeP95al6XTTTg" association="_gV13wbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_gV2e0bEXEeeP95al6XTTTg" name="" memberEnd="_gV2e0rEXEeeP95al6XTTTg _gUjeU7EXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_gV2e0rEXEeeP95al6XTTTg" name="" type="_gPA3ALEXEeeP95al6XTTTg" association="_gV2e0bEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_gV3F4bEXEeeP95al6XTTTg" name="" memberEnd="_gV3F4rEXEeeP95al6XTTTg _gUjeVbEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_gV3F4rEXEeeP95al6XTTTg" name="" type="_gPA3ALEXEeeP95al6XTTTg" association="_gV3F4bEXEeeP95al6XTTTg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOvKMLEXEeeP95al6XTTTg" name="ATokVisitor" isAbstract="true">
          <ownedComment xmi:id="_gVGQ57EXEeeP95al6XTTTg">
            <body>A visitor to an Token that implements ITokVisitor using a dictionary of commands.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUdXsLEXEeeP95al6XTTTg" name="defaultCmd" visibility="private" type="_gOy0kLEXEeeP95al6XTTTg" association="_gVxmU7EXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_gUdXsrEXEeeP95al6XTTTg" name="cmds" visibility="private" type="_gOy0kLEXEeeP95al6XTTTg" association="_gVyNYbEXEeeP95al6XTTTg">
            <qualifier xmi:id="_gUd-wrEXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUd-wLEXEeeP95al6XTTTg" value="new Hashtable&lt;String, ITokVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gS5RcLEXEeeP95al6XTTTg" client="_gOvKMLEXEeeP95al6XTTTg" supplier="_gOyNgLEXEeeP95al6XTTTg" contract="_gOyNgLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6qtrEXEeeP95al6XTTTg" name="ATokVisitor" specification="_gOvxQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6qt7EXEeeP95al6XTTTg" type="_gOvKMLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new ITokVisitorCmd() {&#xD;
			public Object apply(String idx, Token host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;ATokVisitor: Unknown token encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU6quLEXEeeP95al6XTTTg" name="ATokVisitor" specification="_gS5RcbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU6qubEXEeeP95al6XTTTg" name="defaultCmd" type="_gOy0kLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU6qurEXEeeP95al6XTTTg" type="_gOvKMLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU7RwLEXEeeP95al6XTTTg" name="caseAt" specification="_gT4v8LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU7RwbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU7RwrEXEeeP95al6XTTTg" name="host" type="_gO0pw7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU7Rw7EXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU7RxLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU7RxbEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU7RxrEXEeeP95al6XTTTg" name="addCmd" specification="_gS54grEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU7Rx7EXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU7RyLEXEeeP95al6XTTTg" name="cmd" type="_gOy0kLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gOvxQLEXEeeP95al6XTTTg" name="ATokVisitor" method="_gU6qtrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gOvxQbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gOwYULEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVGQ6LEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to one that throws and IllegalArgumentException&quot; for any unknown tokens.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gOwYUbEXEeeP95al6XTTTg" type="_gOvKMLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gS5RcbEXEeeP95al6XTTTg" name="ATokVisitor" method="_gU6quLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gS5Rc7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gS54gLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVGQ6bEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to the given command.&#xD;
	 * @param defaultCmd the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gS5RcrEXEeeP95al6XTTTg" name="defaultCmd" type="_gOy0kLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gS54gbEXEeeP95al6XTTTg" type="_gOvKMLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gS54grEXEeeP95al6XTTTg" name="addCmd" method="_gU7RxrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVGQ6rEXEeeP95al6XTTTg">
              <body>Add a new cmd or replace an existing cmd associated with the given host id.&#xD;
	 * @param id the id of the host to associate with this visitor.&#xD;
	 * @param cmd The command to associate with the given key value.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gS54g7EXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS54hLEXEeeP95al6XTTTg" name="cmd" type="_gOy0kLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gT4v8LEXEeeP95al6XTTTg" name="caseAt" method="_gU7RwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gT5XALEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gT5XAbEXEeeP95al6XTTTg" name="host" type="_gO0pw7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gT5XArEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gT5-ELEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gT5XA7EXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gOyNgLEXEeeP95al6XTTTg" name="ITokVisitor">
          <ownedComment xmi:id="_gVGQ67EXEeeP95al6XTTTg">
            <body>Interface for a token visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_gT6lILEXEeeP95al6XTTTg" name="caseAt">
            <ownedParameter xmi:id="_gT6lIbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gT6lIrEXEeeP95al6XTTTg" name="host" type="_gO0pw7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gT6lI7EXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gT7MMrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gT7MMLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gOy0kLEXEeeP95al6XTTTg" name="ITokVisitorCmd">
          <ownedComment xmi:id="_gVGQ7LEXEeeP95al6XTTTg">
            <body>A command for use in ATokVisitors</body>
          </ownedComment>
          <ownedOperation xmi:id="_gT7zQLEXEeeP95al6XTTTg" name="apply">
            <ownedParameter xmi:id="_gT7zQbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gT7zQrEXEeeP95al6XTTTg" name="host" type="_gO0pw7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gT7zQ7EXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gT8aUbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gT7zRLEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_gO0CsLEXEeeP95al6XTTTg" name="ITokenFactory">
          <ownedComment xmi:id="_gVGQ7bEXEeeP95al6XTTTg">
            <body>Abstract factory to produce tokens</body>
          </ownedComment>
          <ownedOperation xmi:id="_gO0pwLEXEeeP95al6XTTTg" name="makeToken">
            <ownedParameter xmi:id="_gO0pwbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gO0pwrEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS7GoLEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gO0pw7EXEeeP95al6XTTTg" name="Token">
          <ownedComment xmi:id="_gVGQ7rEXEeeP95al6XTTTg">
            <body>Represents a token in the language.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUd-w7EXEeeP95al6XTTTg" name="_name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gUel0bEXEeeP95al6XTTTg" name="_lexeme" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU7RybEXEeeP95al6XTTTg" name="Token" specification="_gO1Q0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU7RyrEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU7Ry7EXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU7RzLEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>_name = name;&#xD;
		_lexeme = lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU7RzbEXEeeP95al6XTTTg" name="execute" specification="_gT9BYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU7RzrEXEeeP95al6XTTTg" name="algo" type="_gOyNgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gU7Rz7EXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gU7R0LEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU7R0bEXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_name, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU740LEXEeeP95al6XTTTg" name="getName" specification="_gO1347EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU740bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _name;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU740rEXEeeP95al6XTTTg" name="getLexeme" specification="_gO135bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU7407EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU741LEXEeeP95al6XTTTg" name="toString" specification="_gO2e8bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU741bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;[&quot; + _name + &quot;] &quot; + _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gO1Q0LEXEeeP95al6XTTTg" name="Token" method="_gU7RybEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_gO134LEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gO134bEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_gVG38LEXEeeP95al6XTTTg">
              <body>Token constructor.&#xD;
	 *&#xD;
	 * @param name The name associated with this token.  This is the id value when it executes its visitors.&#xD;
	 * @param lexeme _lexeme this token is representing.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gO1Q0bEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gO1Q0rEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gO134rEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gO1347EXEeeP95al6XTTTg" name="getName" method="_gU740LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVG38bEXEeeP95al6XTTTg">
              <body>Accessor for the name of this token&#xD;
	 * @return The name of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_gO135LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gO135bEXEeeP95al6XTTTg" name="getLexeme" method="_gU740rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVG38rEXEeeP95al6XTTTg">
              <body>Accessor for the lexeme of this token&#xD;
	 * @return The lexeme of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_gO2e8LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gO2e8bEXEeeP95al6XTTTg" name="toString" method="_gU741LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_gVG387EXEeeP95al6XTTTg">
              <body>Return a string representation of the token: &quot;[name] lexeme&quot;&#xD;
	 *&#xD;
	 * @return string representation</body>
            </ownedComment>
            <ownedParameter xmi:id="_gO2e8rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gT9BYLEXEeeP95al6XTTTg" name="execute" method="_gU7RzbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gT9BYbEXEeeP95al6XTTTg" name="algo" type="_gOyNgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_gT9BYrEXEeeP95al6XTTTg" name="params" type="_gTdSIbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gT9ocbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gT9BY7EXEeeP95al6XTTTg" type="_gTdSIbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gO3tELEXEeeP95al6XTTTg" name="TokenFactory">
          <ownedComment xmi:id="_gVG39LEXEeeP95al6XTTTg">
            <body>Concrete factory to create tokens</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gUfM4LEXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_gO3tELEXEeeP95al6XTTTg" isReadOnly="true" association="_gVzbgbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUfM4bEXEeeP95al6XTTTg" value="new TokenFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gS7tsLEXEeeP95al6XTTTg" client="_gO3tELEXEeeP95al6XTTTg" supplier="_gO0CsLEXEeeP95al6XTTTg" contract="_gO0CsLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU741rEXEeeP95al6XTTTg" name="makeToken" specification="_gO4UI7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gU7417EXEeeP95al6XTTTg" name="name">
              <eAnnotations xmi:id="_gU742LEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gU742bEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU742rEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gU7427EXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return new Token(name, lexeme);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_gO3tEbEXEeeP95al6XTTTg" name="TokenFactory" visibility="private">
            <eAnnotations xmi:id="_gO3tErEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gO4UILEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gO4UIrEXEeeP95al6XTTTg" type="_gO3tELEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gO4UI7EXEeeP95al6XTTTg" name="makeToken" method="_gU741rEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_gO4UJLEXEeeP95al6XTTTg" name="name">
              <eAnnotations xmi:id="_gO47MbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_gO47MrEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gO47MLEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gS7tsbEXEeeP95al6XTTTg" type="_gO0pw7EXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVxmU7EXEeeP95al6XTTTg" name="" memberEnd="_gVxmVLEXEeeP95al6XTTTg _gUdXsLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVxmVLEXEeeP95al6XTTTg" name="" type="_gOvKMLEXEeeP95al6XTTTg" association="_gVxmU7EXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVyNYbEXEeeP95al6XTTTg" name="" memberEnd="_gVyNYrEXEeeP95al6XTTTg _gUdXsrEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVyNYrEXEeeP95al6XTTTg" name="" type="_gOvKMLEXEeeP95al6XTTTg" association="_gVyNYbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gVzbgbEXEeeP95al6XTTTg" name="" memberEnd="_gVzbgrEXEeeP95al6XTTTg _gUfM4LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_gVzbgrEXEeeP95al6XTTTg" name="" type="_gO3tELEXEeeP95al6XTTTg" association="_gVzbgbEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gMH7ErEXEeeP95al6XTTTg" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_gPNEQLEXEeeP95al6XTTTg" name="IView2ModelControlAdapter">
        <ownedComment xmi:id="_gVIGE7EXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_gPNEQbEXEeeP95al6XTTTg" name="loadFile">
          <ownedComment xmi:id="_gVIGFLEXEeeP95al6XTTTg">
            <body>load the given file.&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_gPNrULEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gPNrUbEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gPNrUrEXEeeP95al6XTTTg" name="parseFile">
          <ownedComment xmi:id="_gVIGFbEXEeeP95al6XTTTg">
            <body>parse the given file.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gPNrU7EXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gPNrVLEXEeeP95al6XTTTg" name="playFile">
          <ownedComment xmi:id="_gVIGFrEXEeeP95al6XTTTg">
            <body>play the loaded file.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gPNrVbEXEeeP95al6XTTTg" name="stopFile">
          <ownedComment xmi:id="_gVIGF7EXEeeP95al6XTTTg">
            <body>stop the given file.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gPOSYLEXEeeP95al6XTTTg" name="MusicPlayerView">
        <generalization xmi:id="_gUCg8bEXEeeP95al6XTTTg" general="_gTKXMrEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUoW0LEXEeeP95al6XTTTg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gUoW0bEXEeeP95al6XTTTg" value="432253693325539503L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gUoW0rEXEeeP95al6XTTTg" name="contentPane" visibility="private" type="_gTK-QbEXEeeP95al6XTTTg" association="_gV5iIbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUo94LEXEeeP95al6XTTTg" name="txtFile" visibility="private" type="_gTLlU7EXEeeP95al6XTTTg" association="_gV6JMbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUo94rEXEeeP95al6XTTTg" name="panelControls" visibility="private" type="_gTK-QbEXEeeP95al6XTTTg" association="_gV6wQLEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUpk8bEXEeeP95al6XTTTg" name="lblFile" visibility="private" type="_gTLlUbEXEeeP95al6XTTTg" association="_gV7XULEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUpk87EXEeeP95al6XTTTg" name="btnLoad" visibility="private" type="_gTMMYbEXEeeP95al6XTTTg" association="_gV7XU7EXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUqMALEXEeeP95al6XTTTg" name="btnParse" visibility="private" type="_gTMMYbEXEeeP95al6XTTTg" association="_gV7-YbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUqMArEXEeeP95al6XTTTg" name="comboBoxInstruments" visibility="private" type="_gTMMY7EXEeeP95al6XTTTg" association="_gV8lcbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUqzErEXEeeP95al6XTTTg" name="btnPlay" visibility="private" type="_gTMMYbEXEeeP95al6XTTTg" association="_gV9MgbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUqzFLEXEeeP95al6XTTTg" name="_iView2Model" visibility="private" type="_gPNEQLEXEeeP95al6XTTTg" association="_gV9zkbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUraIbEXEeeP95al6XTTTg" name="splitPane" visibility="private" type="_gTMzcbEXEeeP95al6XTTTg" association="_gV-aobEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUraI7EXEeeP95al6XTTTg" name="scrollPane_file" visibility="private" type="_gTOBkbEXEeeP95al6XTTTg" association="_gV_BsLEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUsBMbEXEeeP95al6XTTTg" name="scrollPane_parse" visibility="private" type="_gTOBkbEXEeeP95al6XTTTg" association="_gV_Bs7EXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUsBM7EXEeeP95al6XTTTg" name="textPane_file" visibility="private" type="_gTPPsrEXEeeP95al6XTTTg" association="_gV_owbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUsoQbEXEeeP95al6XTTTg" name="textPane_parse" visibility="private" type="_gTPPsrEXEeeP95al6XTTTg" association="_gWAP0bEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUsoQ7EXEeeP95al6XTTTg" name="btnStop" visibility="private" type="_gTMMYbEXEeeP95al6XTTTg" association="_gWA24bEXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gU_jMLEXEeeP95al6XTTTg" name="MusicPlayerView" specification="_gTRE4LEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gU_jMbEXEeeP95al6XTTTg" name="iView2Model" type="_gPNEQLEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_gU_jMrEXEeeP95al6XTTTg" type="_gPOSYLEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>setMinimumSize(new Dimension(600, 0));&#xD;
		&#xD;
		_iView2Model = iView2Model;&#xD;
		init();		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gVAKQLEXEeeP95al6XTTTg" name="init" specification="_gPQHkLEXEeeP95al6XTTTg">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		setBounds(100, 100, 667, 454);&#xD;
		contentPane = new JPanel();&#xD;
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));&#xD;
		contentPane.setLayout(new BorderLayout(0, 0));&#xD;
		setContentPane(contentPane);&#xD;
		&#xD;
		panelControls = new JPanel();&#xD;
		panelControls.setBackground(Color.LIGHT_GRAY);&#xD;
		panelControls.setToolTipText(&quot;Panel containing all the controls\r\n&quot;);&#xD;
		contentPane.add(panelControls, BorderLayout.NORTH);&#xD;
		&#xD;
		lblFile = new JLabel(&quot;File:&quot;);&#xD;
		lblFile.setToolTipText(&quot;File Descriptior&quot;);&#xD;
		panelControls.add(lblFile);&#xD;
		&#xD;
		txtFile = new JTextField();&#xD;
		txtFile.setToolTipText(&quot;File to load.&quot;);&#xD;
		txtFile.setText(&quot;File&quot;);&#xD;
		panelControls.add(txtFile);&#xD;
		txtFile.setColumns(10);&#xD;
		&#xD;
		btnLoad = new JButton(&quot;Load&quot;);&#xD;
		btnLoad.setToolTipText(&quot;Loads the indicated file\r\n&quot;);&#xD;
		panelControls.add(btnLoad);&#xD;
		btnLoad.addActionListener( new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				btnParse.setEnabled(true);&#xD;
				textPane_file.setText(_iView2Model.loadFile(txtFile.getText()));&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		btnParse = new JButton(&quot;Parse&quot;);&#xD;
		btnParse.setEnabled(false);&#xD;
&#xD;
		&#xD;
		btnParse.setToolTipText(&quot;Parses the selected file\r\n&quot;);&#xD;
		panelControls.add(btnParse);		&#xD;
		btnParse.addActionListener( new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				textPane_parse.setText(_iView2Model.parseFile());&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		comboBoxInstruments = new JComboBox&lt;TInst>();&#xD;
		comboBoxInstruments.setToolTipText(&quot;The avalible instruments to choose from - please pick one&quot;);&#xD;
		panelControls.add(comboBoxInstruments);&#xD;
		for(TInst i : getInstruments())&#xD;
			comboBoxInstruments.addItem(i);&#xD;
		&#xD;
		btnPlay = new JButton(&quot;Play&quot;);&#xD;
		btnPlay.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				_iView2Model.playFile();&#xD;
			}&#xD;
		});&#xD;
		btnPlay.setToolTipText(&quot;Plays the file, once it is loaded&quot;);&#xD;
		panelControls.add(btnPlay);&#xD;
		&#xD;
		btnStop = new JButton(&quot;Stop&quot;);&#xD;
		btnStop.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				_iView2Model.stopFile();&#xD;
			}&#xD;
		});&#xD;
		btnStop.setToolTipText(&quot;Stop playing the music&quot;);&#xD;
		panelControls.add(btnStop);&#xD;
		&#xD;
		splitPane = new JSplitPane();&#xD;
		splitPane.setResizeWeight(0.5);&#xD;
		splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);&#xD;
		contentPane.add(splitPane, BorderLayout.CENTER);&#xD;
		&#xD;
		scrollPane_file = new JScrollPane();&#xD;
		scrollPane_file.setViewportBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null), &quot;File Content&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, new Color(0, 0, 0)));&#xD;
		splitPane.setLeftComponent(scrollPane_file);&#xD;
		&#xD;
		textPane_file = new JTextPane();&#xD;
		scrollPane_file.setViewportView(textPane_file);&#xD;
		&#xD;
		scrollPane_parse = new JScrollPane();&#xD;
		scrollPane_parse.setViewportBorder(new TitledBorder(null, &quot;Parsed IPhrase Structure&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));&#xD;
		splitPane.setRightComponent(scrollPane_parse);&#xD;
		&#xD;
		textPane_parse = new JTextPane();&#xD;
		scrollPane_parse.setViewportView(textPane_parse);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gVAKQbEXEeeP95al6XTTTg" name="getInstruments" specification="_gPQHkbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gVAKQrEXEeeP95al6XTTTg" type="_gTKXMLEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;TInst> instruments = new ArrayList&lt;TInst>();&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Piano 1&quot;, 0)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Bright Acoustic Piano&quot;, 1)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Harpsichord&quot;, 6)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Clavi&quot;, 7)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Music Box&quot;, 10)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Harmonica&quot;, 22)));&#xD;
		return instruments;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gVAKQ7EXEeeP95al6XTTTg" name="getSelectedInstrumentIndex" specification="_gPRVsrEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gVAKRLEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>ABCInstrument i = (ABCInstrument) comboBoxInstruments.getSelectedItem();&#xD;
		return i.getValue();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gVAKRbEXEeeP95al6XTTTg" name="start" specification="_gPRVtLEXEeeP95al6XTTTg">
          <language>java</language>
          <body>setVisible(true);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gPQHkLEXEeeP95al6XTTTg" name="init" method="_gVAKQLEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVIGGbEXEeeP95al6XTTTg">
            <body>initiates the frame.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gPQHkbEXEeeP95al6XTTTg" name="getInstruments" method="_gVAKQbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gUCg8LEXEeeP95al6XTTTg" type="_gTKXMLEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gPRVsrEXEeeP95al6XTTTg" name="getSelectedInstrumentIndex" method="_gVAKQ7EXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVIGG7EXEeeP95al6XTTTg">
            <body>returns the index of the selected instrument of the combo box</body>
          </ownedComment>
          <ownedParameter xmi:id="_gPRVs7EXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gPRVtLEXEeeP95al6XTTTg" name="start" method="_gVAKRbEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVIGHLEXEeeP95al6XTTTg">
            <body>starts the view</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gTRE4LEXEeeP95al6XTTTg" name="MusicPlayerView" method="_gU_jMLEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_gTRE4rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gTRr8LEXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gVIGGLEXEeeP95al6XTTTg">
            <body>Create the frame.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gTRE4bEXEeeP95al6XTTTg" name="iView2Model" type="_gPNEQLEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_gTRr8bEXEeeP95al6XTTTg" type="_gPOSYLEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV5iIbEXEeeP95al6XTTTg" name="" memberEnd="_gV5iIrEXEeeP95al6XTTTg _gUoW0rEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV5iIrEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV5iIbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV6JMbEXEeeP95al6XTTTg" name="" memberEnd="_gV6JMrEXEeeP95al6XTTTg _gUo94LEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV6JMrEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV6JMbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV6wQLEXEeeP95al6XTTTg" name="" memberEnd="_gV6wQbEXEeeP95al6XTTTg _gUo94rEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV6wQbEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV6wQLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV7XULEXEeeP95al6XTTTg" name="" memberEnd="_gV7XUbEXEeeP95al6XTTTg _gUpk8bEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV7XUbEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV7XULEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV7XU7EXEeeP95al6XTTTg" name="" memberEnd="_gV7XVLEXEeeP95al6XTTTg _gUpk87EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV7XVLEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV7XU7EXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV7-YbEXEeeP95al6XTTTg" name="" memberEnd="_gV7-YrEXEeeP95al6XTTTg _gUqMALEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV7-YrEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV7-YbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV8lcbEXEeeP95al6XTTTg" name="" memberEnd="_gV8lcrEXEeeP95al6XTTTg _gUqMArEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV8lcrEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV8lcbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV9MgbEXEeeP95al6XTTTg" name="" memberEnd="_gV9MgrEXEeeP95al6XTTTg _gUqzErEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV9MgrEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV9MgbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV9zkbEXEeeP95al6XTTTg" name="" memberEnd="_gV9zkrEXEeeP95al6XTTTg _gUqzFLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV9zkrEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV9zkbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV-aobEXEeeP95al6XTTTg" name="" memberEnd="_gV-aorEXEeeP95al6XTTTg _gUraIbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV-aorEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV-aobEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV_BsLEXEeeP95al6XTTTg" name="" memberEnd="_gV_BsbEXEeeP95al6XTTTg _gUraI7EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV_BsbEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV_BsLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV_Bs7EXEeeP95al6XTTTg" name="" memberEnd="_gV_BtLEXEeeP95al6XTTTg _gUsBMbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV_BtLEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV_Bs7EXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gV_owbEXEeeP95al6XTTTg" name="" memberEnd="_gV_owrEXEeeP95al6XTTTg _gUsBM7EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gV_owrEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gV_owbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gWAP0bEXEeeP95al6XTTTg" name="" memberEnd="_gWAP0rEXEeeP95al6XTTTg _gUsoQbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gWAP0rEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gWAP0bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gWA24bEXEeeP95al6XTTTg" name="" memberEnd="_gWA24rEXEeeP95al6XTTTg _gUsoQ7EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gWA24rEXEeeP95al6XTTTg" name="" type="_gPOSYLEXEeeP95al6XTTTg" association="_gWA24bEXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gMJJMLEXEeeP95al6XTTTg" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_gNvEoLEXEeeP95al6XTTTg" name="MusicPlayerController">
        <ownedComment xmi:id="_gVB_cLEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
The Controller class</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gUGLULEXEeeP95al6XTTTg" name="musicPlayerModel" visibility="private" type="_gNz9ILEXEeeP95al6XTTTg" association="_gVRQAbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_gUGyYbEXEeeP95al6XTTTg" name="musicPlayerView" visibility="private" type="_gPOSYLEXEeeP95al6XTTTg" association="_gVR3EbEXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUvEgLEXEeeP95al6XTTTg" name="MusicPlayerController" specification="_gNwSwLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gUvEgbEXEeeP95al6XTTTg" type="_gNvEoLEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>// set the view field&#xD;
		musicPlayerView = new MusicPlayerView&lt;ABCInstrument>(new IView2ModelControlAdapter() {&#xD;
			public String loadFile(String file) {&#xD;
				return musicPlayerModel.loadFile(file);				&#xD;
			}&#xD;
			public String parseFile() {&#xD;
				return musicPlayerModel.parseFile();&#xD;
			}&#xD;
			public void playFile() {&#xD;
				musicPlayerModel.playFile(musicPlayerView.getSelectedInstrumentIndex());&#xD;
			}&#xD;
			public void stopFile() {&#xD;
				musicPlayerModel.stopFile();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		// set the model field&#xD;
		musicPlayerModel = new MusicPlayerModel(new IModel2ViewAdapter() {&#xD;
			public SequencePlayer2 getPlayer() {&#xD;
				return musicPlayerModel.getPlayer();&#xD;
			}&#xD;
			&#xD;
			&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUvEgrEXEeeP95al6XTTTg" name="start" specification="_gNw50rEXEeeP95al6XTTTg">
          <language>java</language>
          <body>musicPlayerModel.start(); // It is usually better to start the model first but not always.&#xD;
		musicPlayerView.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gUvEg7EXEeeP95al6XTTTg" name="main" specification="_gNw507EXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_gUvEhLEXEeeP95al6XTTTg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gUvEhbEXEeeP95al6XTTTg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() { // Java specs say that the system must be constructed on the GUI event thread.&#xD;
			public void run() {&#xD;
				try {&#xD;
					MusicPlayerController controller = new MusicPlayerController(); // instantiate the system&#xD;
					controller.start(); // start the system&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_gNwSwLEXEeeP95al6XTTTg" name="MusicPlayerController" method="_gUvEgLEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_gNwSwbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gNw50LEXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_gVB_cbEXEeeP95al6XTTTg">
            <body>Controller constructor builds the system</body>
          </ownedComment>
          <ownedParameter xmi:id="_gNw50bEXEeeP95al6XTTTg" type="_gNvEoLEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gNw50rEXEeeP95al6XTTTg" name="start" method="_gUvEgrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVB_crEXEeeP95al6XTTTg">
            <body>Start the system</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_gNw507EXEeeP95al6XTTTg" name="main" isStatic="true" method="_gUvEg7EXEeeP95al6XTTTg">
          <ownedComment xmi:id="_gVB_c7EXEeeP95al6XTTTg">
            <body>Launch the application.&#xD;
	 * @param args Arguments given by the system or command line.</body>
          </ownedComment>
          <ownedParameter xmi:id="_gNxg4LEXEeeP95al6XTTTg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gNxg4bEXEeeP95al6XTTTg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gVRQAbEXEeeP95al6XTTTg" name="" memberEnd="_gVRQArEXEeeP95al6XTTTg _gUGLULEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gVRQArEXEeeP95al6XTTTg" name="" type="_gNvEoLEXEeeP95al6XTTTg" association="_gVRQAbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gVR3EbEXEeeP95al6XTTTg" name="" memberEnd="_gVR3ErEXEeeP95al6XTTTg _gUGyYbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_gVR3ErEXEeeP95al6XTTTg" name="" type="_gNvEoLEXEeeP95al6XTTTg" association="_gVR3EbEXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gMpfgLEXEeeP95al6XTTTg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_gMpfgbEXEeeP95al6XTTTg" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_gMqGkLEXEeeP95al6XTTTg" name="midi">
          <packagedElement xmi:type="uml:Class" xmi:id="_gTFesLEXEeeP95al6XTTTg" name="Instrument"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gTGFwbEXEeeP95al6XTTTg" name="MidiSystem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gTGs0bEXEeeP95al6XTTTg" name="MidiUnavailableException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gTHT4bEXEeeP95al6XTTTg" name="Synthesizer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gT0egrEXEeeP95al6XTTTg" name="Sequence"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gT1soLEXEeeP95al6XTTTg" name="Track"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gT2TsbEXEeeP95al6XTTTg" name="Sequencer"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gNE9UbEXEeeP95al6XTTTg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_gNE9UrEXEeeP95al6XTTTg" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_gTK-Q7EXEeeP95al6XTTTg" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gTNagbEXEeeP95al6XTTTg" name="TitledBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gTOoobEXEeeP95al6XTTTg" name="EtchedBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTKXMrEXEeeP95al6XTTTg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTK-QbEXEeeP95al6XTTTg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTLlUbEXEeeP95al6XTTTg" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTLlU7EXEeeP95al6XTTTg" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTMMYbEXEeeP95al6XTTTg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTMMY7EXEeeP95al6XTTTg" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTMzcbEXEeeP95al6XTTTg" name="JSplitPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTOBkbEXEeeP95al6XTTTg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gTPPsrEXEeeP95al6XTTTg" name="JTextPane"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_feLP8LEXEeeP95al6XTTTg">
      <eAnnotations xmi:id="_feL3ALEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_feNFILEXEeeP95al6XTTTg" base_Package="_fZxRELEXEeeP95al6XTTTg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gN1yULEXEeeP95al6XTTTg" base_Element="_gN1LQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gOItQLEXEeeP95al6XTTTg" base_Element="_gOIGMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gOLwkLEXEeeP95al6XTTTg" base_Element="_gOLJgrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gOLwkbEXEeeP95al6XTTTg" base_Element="_gOLJgrEXEeeP95al6XTTTg">
    <annotations xmi:id="_gOLwkrEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gOTFUrEXEeeP95al6XTTTg" base_Element="_gOSeQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gObBI7EXEeeP95al6XTTTg" base_Element="_gObBILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gOc2UrEXEeeP95al6XTTTg" base_Element="_gOcPQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gOeEcLEXEeeP95al6XTTTg" base_Element="_gOddYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gOeEcbEXEeeP95al6XTTTg" base_Element="_gOddYbEXEeeP95al6XTTTg">
    <annotations xmi:id="_gOeEcrEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gO4UIbEXEeeP95al6XTTTg" base_Element="_gO3tEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gO_o4LEXEeeP95al6XTTTg" base_Element="_gO_B07EXEeeP95al6XTTTg"/>
  <UMLLabProfile:StyledElement xmi:id="_gO_o4rEXEeeP95al6XTTTg" base_Element="_gO_o4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gPCFIrEXEeeP95al6XTTTg" base_Element="_gPCFILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gPCFI7EXEeeP95al6XTTTg" base_Element="_gPCFILEXEeeP95al6XTTTg">
    <annotations xmi:id="_gPCFJLEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gPCsMrEXEeeP95al6XTTTg" base_Element="_gPCsMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gPCsM7EXEeeP95al6XTTTg" base_Element="_gPCsMLEXEeeP95al6XTTTg">
    <annotations xmi:id="_gPCsNLEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gPLPELEXEeeP95al6XTTTg" base_Element="_gPKoALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gPMdMrEXEeeP95al6XTTTg" base_Element="_gPL2J7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gPO5cLEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_gPOSYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gPQuoLEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_gPQHkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gPQuobEXEeeP95al6XTTTg" base_Element="_gPQHkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gPQuorEXEeeP95al6XTTTg" base_Element="_gPQHkbEXEeeP95al6XTTTg">
    <annotations xmi:id="_gPRVsLEXEeeP95al6XTTTg" name="SuppressWarnings">
      <annotationParameters xmi:id="_gPRVsbEXEeeP95al6XTTTg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_gVIGGrEXEeeP95al6XTTTg" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_gSfBwbEXEeeP95al6XTTTg" base_Element="_gSfBwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gSgP4bEXEeeP95al6XTTTg" base_Element="_gSgP4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gSkhULEXEeeP95al6XTTTg" base_Element="_gSj6QLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gSkhUrEXEeeP95al6XTTTg" base_Element="_gSkhUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSm9kLEXEeeP95al6XTTTg" base_Element="_gSmWgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gSm9k7EXEeeP95al6XTTTg" base_Element="_gSmWgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSoyxLEXEeeP95al6XTTTg" base_Element="_gSoywLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gSpZ0LEXEeeP95al6XTTTg" base_Element="_gSoywbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSu5ZbEXEeeP95al6XTTTg" base_Element="_gSu5YbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gSvgcrEXEeeP95al6XTTTg" base_Element="_gSu5YrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSwHhLEXEeeP95al6XTTTg" base_Element="_gSwHgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gSwukLEXEeeP95al6XTTTg" base_Element="_gSwHgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSwuk7EXEeeP95al6XTTTg" base_Element="_gSwukbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gSwulbEXEeeP95al6XTTTg" base_Element="_gSwukrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSzK1LEXEeeP95al6XTTTg" base_Element="_gSzK0LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gSzK17EXEeeP95al6XTTTg" dimensions="1" base_Element="_gSzK0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:StyledElement xmi:id="_gS9i47EXEeeP95al6XTTTg" base_Element="_gS9i4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gS-J8bEXEeeP95al6XTTTg" base_Element="_gS-J8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gS-xAbEXEeeP95al6XTTTg" base_Element="_gS-xALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gS__ILEXEeeP95al6XTTTg" base_Element="_gS_YELEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gS__IrEXEeeP95al6XTTTg" base_Element="_gS__IbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTAmMbEXEeeP95al6XTTTg" base_Element="_gTAmMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTBNQLEXEeeP95al6XTTTg" base_Element="_gTAmMrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTB0ULEXEeeP95al6XTTTg" base_Element="_gTBNQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTGFwLEXEeeP95al6XTTTg" base_Element="_gTFesLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTGs0LEXEeeP95al6XTTTg" base_Element="_gTGFwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTHT4LEXEeeP95al6XTTTg" base_Element="_gTGs0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTH68LEXEeeP95al6XTTTg" base_Element="_gTHT4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTJJELEXEeeP95al6XTTTg" base_Element="_gTIiALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTJJErEXEeeP95al6XTTTg" base_Element="_gTJJEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTJwIbEXEeeP95al6XTTTg" base_Element="_gTJwILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTKXMbEXEeeP95al6XTTTg" base_Element="_gTKXMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTK-QLEXEeeP95al6XTTTg" base_Element="_gTKXMrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTK-QrEXEeeP95al6XTTTg" base_Element="_gTK-QbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTLlULEXEeeP95al6XTTTg" base_Element="_gTK-Q7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTLlUrEXEeeP95al6XTTTg" base_Element="_gTLlUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTMMYLEXEeeP95al6XTTTg" base_Element="_gTLlU7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTMMYrEXEeeP95al6XTTTg" base_Element="_gTMMYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTMzcLEXEeeP95al6XTTTg" base_Element="_gTMMY7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTMzcrEXEeeP95al6XTTTg" base_Element="_gTMzcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTNagLEXEeeP95al6XTTTg" base_Element="_gTMzc7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTOBkLEXEeeP95al6XTTTg" base_Element="_gTNagbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTOooLEXEeeP95al6XTTTg" base_Element="_gTOBkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTOoorEXEeeP95al6XTTTg" base_Element="_gTOoobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTPPsbEXEeeP95al6XTTTg" base_Element="_gTPPsLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTP2wLEXEeeP95al6XTTTg" base_Element="_gTPPsrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTbc8bEXEeeP95al6XTTTg" base_Element="_gTbc8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gTdSIrEXEeeP95al6XTTTg" base_Element="_gTdSIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTegQbEXEeeP95al6XTTTg" base_Element="_gTd5MLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTfHULEXEeeP95al6XTTTg" base_Element="_gTd5M7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTgVcbEXEeeP95al6XTTTg" base_Element="_gTfuYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTgVc7EXEeeP95al6XTTTg" base_Element="_gTfuYrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTg8gLEXEeeP95al6XTTTg" base_Element="_gTfuYLEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTg8gbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTiKoLEXEeeP95al6XTTTg" base_Element="_gThjkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTiKorEXEeeP95al6XTTTg" base_Element="_gThjkrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTixsLEXEeeP95al6XTTTg" base_Element="_gThjkLEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTixsbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTjYw7EXEeeP95al6XTTTg" base_Element="_gTixsrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTj_0LEXEeeP95al6XTTTg" base_Element="_gTjYwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTj_0bEXEeeP95al6XTTTg" base_Element="_gTixsrEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTj_0rEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTlN8bEXEeeP95al6XTTTg" base_Element="_gTkm4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTlN87EXEeeP95al6XTTTg" dimensions="1" base_Element="_gTkm4rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTl1ALEXEeeP95al6XTTTg" base_Element="_gTkm4LEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTl1AbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTnDILEXEeeP95al6XTTTg" base_Element="_gTmcELEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTnDIrEXEeeP95al6XTTTg" base_Element="_gTmcErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gToRQLEXEeeP95al6XTTTg" base_Element="_gTnqMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gToRQrEXEeeP95al6XTTTg" base_Element="_gTnqM7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTpfZLEXEeeP95al6XTTTg" base_Element="_gTo4ULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTrUkLEXEeeP95al6XTTTg" base_Element="_gTpfYrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTr7orEXEeeP95al6XTTTg" base_Element="_gTrUkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTsisLEXEeeP95al6XTTTg" base_Element="_gTr7oLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTsisbEXEeeP95al6XTTTg" base_Element="_gTrUkbEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTsisrEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTtw0LEXEeeP95al6XTTTg" base_Element="_gTtJwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTtw0rEXEeeP95al6XTTTg" base_Element="_gTtJwrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTtw07EXEeeP95al6XTTTg" base_Element="_gTtJwLEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTtw1LEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTu-9LEXEeeP95al6XTTTg" base_Element="_gTu-8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTvmALEXEeeP95al6XTTTg" base_Element="_gTu-8rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTvmAbEXEeeP95al6XTTTg" base_Element="_gTu-8LEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTvmArEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTw0IrEXEeeP95al6XTTTg" base_Element="_gTwNELEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTw0JLEXEeeP95al6XTTTg" base_Element="_gTw0ILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTxbMLEXEeeP95al6XTTTg" base_Element="_gTwNELEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTxbMbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTypUbEXEeeP95al6XTTTg" base_Element="_gTyCQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTypU7EXEeeP95al6XTTTg" base_Element="_gTyCQrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gTypVLEXEeeP95al6XTTTg" base_Element="_gTyCQLEXEeeP95al6XTTTg">
    <annotations xmi:id="_gTypVbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gTz3cbEXEeeP95al6XTTTg" base_Element="_gTzQYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gTz3c7EXEeeP95al6XTTTg" base_Element="_gTzQYrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_gT0egLEXEeeP95al6XTTTg" base_Element="_gTzQYLEXEeeP95al6XTTTg">
    <annotations xmi:id="_gT0egbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_gT1FkLEXEeeP95al6XTTTg" base_Element="_gT0egrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gT2TsLEXEeeP95al6XTTTg" base_Element="_gT1soLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gT26wLEXEeeP95al6XTTTg" base_Element="_gT2TsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gT5XBLEXEeeP95al6XTTTg" base_Element="_gT4v8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gT5-EbEXEeeP95al6XTTTg" base_Element="_gT5XArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gT7MMbEXEeeP95al6XTTTg" base_Element="_gT6lILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gT7MM7EXEeeP95al6XTTTg" base_Element="_gT6lI7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gT8aULEXEeeP95al6XTTTg" base_Element="_gT7zQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gT8aUrEXEeeP95al6XTTTg" base_Element="_gT7zQ7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gT9ocLEXEeeP95al6XTTTg" base_Element="_gT9BYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gT9ocrEXEeeP95al6XTTTg" base_Element="_gT9BYrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gT-2kLEXEeeP95al6XTTTg" base_Element="_gT-PgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gUArwLEXEeeP95al6XTTTg" base_Element="_gUAEsLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUGyYLEXEeeP95al6XTTTg" base_Element="_gUGLULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gUHZcLEXEeeP95al6XTTTg" genericsValue="ABCInstrument" base_Element="_gUGyYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUHZcbEXEeeP95al6XTTTg" base_Element="_gUGyYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUIAgLEXEeeP95al6XTTTg" base_Element="_gUHZc7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUIAgrEXEeeP95al6XTTTg" base_Element="_gUIAgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUInkLEXEeeP95al6XTTTg" base_Element="_gUIAg7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUInkrEXEeeP95al6XTTTg" base_Element="_gUInkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUJOoLEXEeeP95al6XTTTg" base_Element="_gUInk7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUJOo7EXEeeP95al6XTTTg" base_Element="_gUJOobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gUJ1sLEXEeeP95al6XTTTg" genericsValue="DecoratorSeqList" base_Element="_gUJOpLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUJ1srEXEeeP95al6XTTTg" base_Element="_gUJOpLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gUKcwLEXEeeP95al6XTTTg" genericsValue="DecoratorSeqList" base_Element="_gUJ1s7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUKcwrEXEeeP95al6XTTTg" base_Element="_gUJ1s7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gULD0bEXEeeP95al6XTTTg" base_Element="_gUKcw7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gULD1LEXEeeP95al6XTTTg" base_Element="_gULD0rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gULq4LEXEeeP95al6XTTTg" base_Element="_gULD1bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gULq47EXEeeP95al6XTTTg" base_Element="_gULq4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUMR8LEXEeeP95al6XTTTg" base_Element="_gULq5LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUMR87EXEeeP95al6XTTTg" base_Element="_gUMR8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUM5A7EXEeeP95al6XTTTg" base_Element="_gUM5ALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUNgEbEXEeeP95al6XTTTg" base_Element="_gUNgELEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUOHIbEXEeeP95al6XTTTg" base_Element="_gUNgErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUPVQLEXEeeP95al6XTTTg" base_Element="_gUOuMrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUPVQ7EXEeeP95al6XTTTg" base_Element="_gUPVQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUP8UbEXEeeP95al6XTTTg" base_Element="_gUP8ULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUQjYLEXEeeP95al6XTTTg" base_Element="_gUP8UrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gURxgLEXEeeP95al6XTTTg" base_Element="_gURKdLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gURxgrEXEeeP95al6XTTTg" base_Element="_gURxgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUSYkLEXEeeP95al6XTTTg" base_Element="_gURxg7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUTms7EXEeeP95al6XTTTg" base_Element="_gUTmsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gUUNwrEXEeeP95al6XTTTg" dimensions="1" base_Element="_gUUNwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUUNw7EXEeeP95al6XTTTg" base_Element="_gUUNwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gUU00rEXEeeP95al6XTTTg" dimensions="1" base_Element="_gUU00LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUU01LEXEeeP95al6XTTTg" base_Element="_gUU00LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUVb4rEXEeeP95al6XTTTg" base_Element="_gUVb4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUWqALEXEeeP95al6XTTTg" base_Element="_gUWC87EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUWqArEXEeeP95al6XTTTg" base_Element="_gUWqAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUXRE7EXEeeP95al6XTTTg" base_Element="_gUXRErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUX4ILEXEeeP95al6XTTTg" base_Element="_gUXRFLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUX4IrEXEeeP95al6XTTTg" base_Element="_gUX4IbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUYfMLEXEeeP95al6XTTTg" base_Element="_gUX4I7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUYfMrEXEeeP95al6XTTTg" base_Element="_gUYfMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUZGQLEXEeeP95al6XTTTg" base_Element="_gUYfM7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUZGQrEXEeeP95al6XTTTg" base_Element="_gUZGQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUZtULEXEeeP95al6XTTTg" base_Element="_gUZGQ7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gUZtU7EXEeeP95al6XTTTg" base_Element="_gUZtUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUa7cbEXEeeP95al6XTTTg" base_Element="_gUa7cLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUa7c7EXEeeP95al6XTTTg" base_Element="_gUa7crEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUbigbEXEeeP95al6XTTTg" base_Element="_gUbigLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUbig7EXEeeP95al6XTTTg" base_Element="_gUbigrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUcJkbEXEeeP95al6XTTTg" base_Element="_gUcJkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUcJk7EXEeeP95al6XTTTg" base_Element="_gUcJkrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gUcwpLEXEeeP95al6XTTTg" base_Element="_gUcwoLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUdXsbEXEeeP95al6XTTTg" base_Element="_gUdXsLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUd-wbEXEeeP95al6XTTTg" base_Element="_gUdXsrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUel0LEXEeeP95al6XTTTg" base_Element="_gUd-w7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUel0rEXEeeP95al6XTTTg" base_Element="_gUel0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUfz8LEXEeeP95al6XTTTg" base_Element="_gUfM4rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUgbALEXEeeP95al6XTTTg" base_Element="_gUfz8rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gUhCELEXEeeP95al6XTTTg" genericsValue="Map&lt;String, String>" base_Element="_gUgbArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUhCErEXEeeP95al6XTTTg" base_Element="_gUgbArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUhpILEXEeeP95al6XTTTg" base_Element="_gUhCE7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gUhpIrEXEeeP95al6XTTTg" genericsValue="Token" base_Element="_gUhpIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUiQMbEXEeeP95al6XTTTg" base_Element="_gUhpIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gUjeULEXEeeP95al6XTTTg" genericsValue="String" base_Element="_gUi3QLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUjeUrEXEeeP95al6XTTTg" base_Element="_gUi3QLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUjeVLEXEeeP95al6XTTTg" base_Element="_gUjeU7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUkFYLEXEeeP95al6XTTTg" base_Element="_gUjeVbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gUksc7EXEeeP95al6XTTTg" base_Element="_gUkscbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gUlTgrEXEeeP95al6XTTTg" base_Element="_gUlTgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUl6kLEXEeeP95al6XTTTg" base_Element="_gUlThLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUl6krEXEeeP95al6XTTTg" base_Element="_gUl6kbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUmhoLEXEeeP95al6XTTTg" base_Element="_gUl6k7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gUmhpLEXEeeP95al6XTTTg" base_Element="_gUmhorEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUnIsLEXEeeP95al6XTTTg" base_Element="_gUmhorEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_gUnIs7EXEeeP95al6XTTTg" base_Element="_gUnIsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUnItbEXEeeP95al6XTTTg" base_Element="_gUnIsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUoW07EXEeeP95al6XTTTg" base_Element="_gUoW0rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUo94bEXEeeP95al6XTTTg" base_Element="_gUo94LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUpk8LEXEeeP95al6XTTTg" base_Element="_gUo94rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUpk8rEXEeeP95al6XTTTg" base_Element="_gUpk8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUpk9LEXEeeP95al6XTTTg" base_Element="_gUpk87EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUqMAbEXEeeP95al6XTTTg" base_Element="_gUqMALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_gUqzELEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_gUqMArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUqzEbEXEeeP95al6XTTTg" base_Element="_gUqMArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUqzE7EXEeeP95al6XTTTg" base_Element="_gUqzErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUraILEXEeeP95al6XTTTg" base_Element="_gUqzFLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUraIrEXEeeP95al6XTTTg" base_Element="_gUraIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUsBMLEXEeeP95al6XTTTg" base_Element="_gUraI7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUsBMrEXEeeP95al6XTTTg" base_Element="_gUsBMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUsoQLEXEeeP95al6XTTTg" base_Element="_gUsBM7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUsoQrEXEeeP95al6XTTTg" base_Element="_gUsoQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gUsoRLEXEeeP95al6XTTTg" base_Element="_gUsoQ7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVPa0LEXEeeP95al6XTTTg" base_Element="_gVOzwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVQB4LEXEeeP95al6XTTTg" base_Element="_gVPa0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVQo8LEXEeeP95al6XTTTg" base_Element="_gVQB4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVRQALEXEeeP95al6XTTTg" base_Element="_gVQo8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVR3ELEXEeeP95al6XTTTg" base_Element="_gVRQAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVR3E7EXEeeP95al6XTTTg" base_Element="_gVR3EbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVSeIrEXEeeP95al6XTTTg" base_Element="_gVSeILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVTFMLEXEeeP95al6XTTTg" base_Element="_gVSeI7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVTsQLEXEeeP95al6XTTTg" base_Element="_gVTFMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVUTULEXEeeP95al6XTTTg" base_Element="_gVTsQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVUTU7EXEeeP95al6XTTTg" base_Element="_gVUTUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVU6YrEXEeeP95al6XTTTg" base_Element="_gVU6YLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVVhcLEXEeeP95al6XTTTg" base_Element="_gVU6Y7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVnOQLEXEeeP95al6XTTTg" base_Element="_gVVhcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVnOQ7EXEeeP95al6XTTTg" base_Element="_gVnOQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVn1UrEXEeeP95al6XTTTg" base_Element="_gVn1ULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVocYLEXEeeP95al6XTTTg" base_Element="_gVn1U7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVpDcLEXEeeP95al6XTTTg" base_Element="_gVocYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVpqgrEXEeeP95al6XTTTg" base_Element="_gVpqgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVqRkLEXEeeP95al6XTTTg" base_Element="_gVpqg7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVq4oLEXEeeP95al6XTTTg" base_Element="_gVqRkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVrfsLEXEeeP95al6XTTTg" base_Element="_gVq4obEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVsGwLEXEeeP95al6XTTTg" base_Element="_gVrfsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVst0LEXEeeP95al6XTTTg" base_Element="_gVsGwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVtU4LEXEeeP95al6XTTTg" base_Element="_gVst0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVtU47EXEeeP95al6XTTTg" base_Element="_gVtU4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVt78rEXEeeP95al6XTTTg" base_Element="_gVt78LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVujALEXEeeP95al6XTTTg" base_Element="_gVt787EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVvKELEXEeeP95al6XTTTg" base_Element="_gVujAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVvxILEXEeeP95al6XTTTg" base_Element="_gVvKEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVwYMLEXEeeP95al6XTTTg" base_Element="_gVvxIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVw_QLEXEeeP95al6XTTTg" base_Element="_gVwYMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVw_Q7EXEeeP95al6XTTTg" base_Element="_gVw_QbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVxmUrEXEeeP95al6XTTTg" base_Element="_gVxmULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVyNYLEXEeeP95al6XTTTg" base_Element="_gVxmU7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gVzbgLEXEeeP95al6XTTTg" base_Element="_gVyNYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV0CkLEXEeeP95al6XTTTg" base_Element="_gVzbgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV0poLEXEeeP95al6XTTTg" base_Element="_gV0CkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV1QsLEXEeeP95al6XTTTg" base_Element="_gV0pobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV13wLEXEeeP95al6XTTTg" base_Element="_gV1QsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV2e0LEXEeeP95al6XTTTg" base_Element="_gV13wbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV3F4LEXEeeP95al6XTTTg" base_Element="_gV2e0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV3s8LEXEeeP95al6XTTTg" base_Element="_gV3F4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV4UALEXEeeP95al6XTTTg" base_Element="_gV3s8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV47ELEXEeeP95al6XTTTg" base_Element="_gV4UAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV5iILEXEeeP95al6XTTTg" base_Element="_gV47EbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV6JMLEXEeeP95al6XTTTg" base_Element="_gV5iIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV6JM7EXEeeP95al6XTTTg" base_Element="_gV6JMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV6wQrEXEeeP95al6XTTTg" base_Element="_gV6wQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV7XUrEXEeeP95al6XTTTg" base_Element="_gV7XULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV7-YLEXEeeP95al6XTTTg" base_Element="_gV7XU7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV8lcLEXEeeP95al6XTTTg" base_Element="_gV7-YbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV9MgLEXEeeP95al6XTTTg" base_Element="_gV8lcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV9zkLEXEeeP95al6XTTTg" base_Element="_gV9MgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV-aoLEXEeeP95al6XTTTg" base_Element="_gV9zkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV-ao7EXEeeP95al6XTTTg" base_Element="_gV-aobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV_BsrEXEeeP95al6XTTTg" base_Element="_gV_BsLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gV_owLEXEeeP95al6XTTTg" base_Element="_gV_Bs7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gWAP0LEXEeeP95al6XTTTg" base_Element="_gV_owbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gWA24LEXEeeP95al6XTTTg" base_Element="_gWAP0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_gWBd8LEXEeeP95al6XTTTg" base_Element="_gWA24bEXEeeP95al6XTTTg"/>
</xmi:XMI>
