<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_lYU6MLEXEeeP95al6XTTTg" name="MusicModel">
    <eAnnotations xmi:id="_lcir0LEXEeeP95al6XTTTg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_lcir0bEXEeeP95al6XTTTg" source="codegen">
        <details xmi:id="_lcir0rEXEeeP95al6XTTTg" key="codegenDirectory" value="/HW06/src"/>
        <details xmi:id="_mWbhMLEXEeeP95al6XTTTg" key="AssociatedSourceCode" value="/HW06/src/controller/MusicPlayerController.java;2283594585/1;/HW06/src/model/IModel2ViewAdapter.java;3803546862/1;/HW06/src/model/MusicPlayerModel.java;793601/1;/HW06/src/provided/abcParser/ABCParser.java;3153405954/1;/HW06/src/provided/music/APhraseVisitor.java;1010602946/1;/HW06/src/provided/music/Chord.java;1971309365/1;/HW06/src/provided/music/DecoratorSeqList.java;2350535095/1;/HW06/src/provided/music/FineToggleDecoratorSeqList.java;2903020233/1;/HW06/src/provided/music/Header.java;855643762/1;/HW06/src/provided/music/INote.java;507512117/1;/HW06/src/provided/music/IPhrase.java;1122806289/1;/HW06/src/provided/music/IPhraseVisitor.java;2583970647/1;/HW06/src/provided/music/IPhraseVisitorCmd.java;3144788355/1;/HW06/src/provided/music/ISeqList.java;1752096597/1;/HW06/src/provided/music/MTSeqList.java;797718925/1;/HW06/src/provided/music/NESeqList.java;240802844/1;/HW06/src/provided/music/Note.java;141424783/1;/HW06/src/provided/music/NoteCollection.java;2061496451/1;/HW06/src/provided/music/ToggleDecoratorSeqList.java;3430233739/1;/HW06/src/provided/music/Triplet.java;163966482/1;/HW06/src/provided/music/Tuplet.java;799272193/1;/HW06/src/provided/music/visitor/playerAlgo.java;2604221261/1;/HW06/src/provided/music/visitor/toStringAlgo.java;3630904698/1;/HW06/src/provided/player/ISequencePlayerStatus.java;2951061270/1;/HW06/src/provided/player/SequencePlayer.java;1814505560/1;/HW06/src/provided/player/SequencePlayer2.java;1631007379/1;/HW06/src/provided/token/ATokVisitor.java;2901257995/1;/HW06/src/provided/token/ITokVisitor.java;275599564/1;/HW06/src/provided/token/ITokVisitorCmd.java;4098180758/1;/HW06/src/provided/token/ITokenFactory.java;1037223879/1;/HW06/src/provided/token/Token.java;2670746935/1;/HW06/src/provided/token/TokenFactory.java;1190700287/1;/HW06/src/provided/token/tokenizer/ABCTokenizer.java;2224825631/1;/HW06/src/provided/token/tokenizer/IStringTokenizer.java;2530580852/1;/HW06/src/provided/token/tokenizer/ITokenizer.java;1031763823/1;/HW06/src/provided/token/tokenizer/StringTokenizer.java;3408517212/1;/HW06/src/provided/util/ABCInstrument.java;1182473716/1;/HW06/src/provided/util/ABCUtil.java;817699883/1;/HW06/src/provided/util/KeySignature.java;3543793777/1;/HW06/src/view/IView2ModelControlAdapter.java;3162454401/1;/HW06/src/view/MusicPlayerView.java;1357472571/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_mFp6QLEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_mFp6QbEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_mFp6QrEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_mFp6Q7EXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_mFp6RLEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_mFp6RbEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_mFp6RrEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_mFqhULEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_mFqhUbEXEeeP95al6XTTTg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_mFrIYLEXEeeP95al6XTTTg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_mFrIYbEXEeeP95al6XTTTg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_mGdLgLEXEeeP95al6XTTTg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_mMW_MbEXEeeP95al6XTTTg" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_mMW_M7EXEeeP95al6XTTTg" name="ActionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mLomcLEXEeeP95al6XTTTg" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMWYILEXEeeP95al6XTTTg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMb3sbEXEeeP95al6XTTTg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMds47EXEeeP95al6XTTTg" name="Color"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mFwn8LEXEeeP95al6XTTTg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_mLv7MLEXEeeP95al6XTTTg" name="Hashtable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mLwiQbEXEeeP95al6XTTTg" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMXmQbEXEeeP95al6XTTTg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMosALEXEeeP95al6XTTTg" name="Stack"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mNDiwLEXEeeP95al6XTTTg" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mGSMYLEXEeeP95al6XTTTg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_mMPqdLEXEeeP95al6XTTTg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMQRgbEXEeeP95al6XTTTg" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMQRg7EXEeeP95al6XTTTg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMQ4kbEXEeeP95al6XTTTg" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMQ4k7EXEeeP95al6XTTTg" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMRfobEXEeeP95al6XTTTg" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMRfo7EXEeeP95al6XTTTg" name="StreamTokenizer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mMqhMLEXEeeP95al6XTTTg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_mMqhMbEXEeeP95al6XTTTg" name="Object"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_mNFX8LEXEeeP95al6XTTTg" name="Character"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mFrvcLEXEeeP95al6XTTTg" name="model">
      <packagedElement xmi:type="uml:Interface" xmi:id="_mHUuMLEXEeeP95al6XTTTg" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_mOBzI7EXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
the IModel2ViewAdapter interface.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_mHUuMbEXEeeP95al6XTTTg" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_mHUuMLEXEeeP95al6XTTTg" isReadOnly="true" association="_mONZULEXEeeP95al6XTTTg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_mHVVQLEXEeeP95al6XTTTg" value="new IModel2ViewAdapter() {&#xD;&#xA;&#x9;&#x9;public SequencePlayer2 getPlayer() {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_mHVVQbEXEeeP95al6XTTTg" name="player" type="_mIZFMLEXEeeP95al6XTTTg" isReadOnly="true" association="_mOOAYbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_mHV8ULEXEeeP95al6XTTTg" name="MusicPlayerModel">
        <ownedComment xmi:id="_mOBzJLEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
the ball world model class</body>
        </ownedComment>
        <ownedAttribute xmi:id="_mNOh4LEXEeeP95al6XTTTg" name="player" type="_mIZFMLEXEeeP95al6XTTTg" isReadOnly="true" association="_mOQcobEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNOh4bEXEeeP95al6XTTTg" name="_iModel2View" visibility="private" type="_mHUuMLEXEeeP95al6XTTTg" association="_mORDsbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNOh47EXEeeP95al6XTTTg" name="fileName" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_mNPI8bEXEeeP95al6XTTTg" name="phrase" visibility="private" type="_mHshoLEXEeeP95al6XTTTg" association="_mORqwbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNPI87EXEeeP95al6XTTTg" name="make_playable" visibility="private" type="_mIZsQLEXEeeP95al6XTTTg" association="_mORqxLEXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNx7gLEXEeeP95al6XTTTg" name="MusicPlayerModel" specification="_mLrCsbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mNx7gbEXEeeP95al6XTTTg" name="iModel2View" type="_mHUuMLEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_mNx7grEXEeeP95al6XTTTg" type="_mHV8ULEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>_iModel2View = iModel2View;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNx7g7EXEeeP95al6XTTTg" name="loadFile" specification="_mHXKcbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mNx7hLEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_mNx7hbEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.fileName = &quot;/songs/&quot; + filename + &quot;.abc&quot;;&#xD;
	    return ABCUtil.Singleton.getFileContents(this.fileName);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNx7hrEXEeeP95al6XTTTg" name="parseFile" specification="_mHXKdLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mNx7h7EXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>NESeqList.setToStringAlgo(new toStringAlgo());&#xD;
	    phrase = new ABCParser(this.fileName).parse();&#xD;
	    return phrase.toString();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNx7iLEXEeeP95al6XTTTg" name="playFile" specification="_mHXxgbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mNx7ibEXEeeP95al6XTTTg" name="instrument">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>player = new SequencePlayer2(16, instrument);&#xD;
//		phrase = new Chord(new Note('G', 0, 0, 1.0, false), new Note('A', 0, 0, 1.0, false));&#xD;
//		phrase = new Triplet(new Note('G', 0, 0, 1.0, true), new Note('A', 0, 0, 1.0, false), new Note('C', 0, 0, 1.0, false));&#xD;
//		phrase = new Note('G', 0, 0, 1.0, false);&#xD;
		&#xD;
		player.setTicksPerDefaultNote(16);&#xD;
		player.setTempo(120);   &#xD;
&#xD;
		phrase.execute(new playerAlgo(), player, 1);&#xD;
		if(make_playable != null) {&#xD;
			make_playable.stop();&#xD;
		}&#xD;
		make_playable = player.makePlayable(ISequencePlayerStatus.NULL);&#xD;
		&#xD;
		make_playable.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNx7irEXEeeP95al6XTTTg" name="stopFile" specification="_mHXxg7EXEeeP95al6XTTTg">
          <language>java</language>
          <body>make_playable.stop();	&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_mHWjYLEXEeeP95al6XTTTg" name="start"/>
        <ownedOperation xmi:id="_mHXKcbEXEeeP95al6XTTTg" name="loadFile" method="_mNx7g7EXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOBzJrEXEeeP95al6XTTTg">
            <body>loads the given file.&#xD;
	 * @param filename the given file to load</body>
          </ownedComment>
          <ownedParameter xmi:id="_mHXKcrEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_mHXKc7EXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_mHXKdLEXEeeP95al6XTTTg" name="parseFile" method="_mNx7hrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOBzJ7EXEeeP95al6XTTTg">
            <body>parses the given file.&#xD;
	 * @param filename the given file to parse</body>
          </ownedComment>
          <ownedParameter xmi:id="_mHXxgLEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_mHXxgbEXEeeP95al6XTTTg" name="playFile" method="_mNx7iLEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOBzKLEXEeeP95al6XTTTg">
            <body>plays the given file.&#xD;
	 * @param filename the given file to play</body>
          </ownedComment>
          <ownedParameter xmi:id="_mHXxgrEXEeeP95al6XTTTg" name="instrument">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_mHXxg7EXEeeP95al6XTTTg" name="stopFile" method="_mNx7irEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOBzKbEXEeeP95al6XTTTg">
            <body>stops the given file.&#xD;
	 * @param filename the given file to stop</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_mLrCsbEXEeeP95al6XTTTg" name="MusicPlayerModel" method="_mNx7gLEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_mLrpwbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_mLrpwrEXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_mOBzJbEXEeeP95al6XTTTg">
            <body>initiates the frame.&#xD;
	 * @param iModel2View the IModel2ViewAdapter that will be used throughout the instance</body>
          </ownedComment>
          <ownedParameter xmi:id="_mLrpwLEXEeeP95al6XTTTg" name="iModel2View" type="_mHUuMLEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_mLrpw7EXEeeP95al6XTTTg" type="_mHV8ULEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mONZULEXEeeP95al6XTTTg" name="" memberEnd="_mONZUbEXEeeP95al6XTTTg _mHUuMbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mONZUbEXEeeP95al6XTTTg" name="" type="_mHUuMLEXEeeP95al6XTTTg" association="_mONZULEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOOAYbEXEeeP95al6XTTTg" name="" memberEnd="_mOOAYrEXEeeP95al6XTTTg _mHVVQbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOOAYrEXEeeP95al6XTTTg" name="" type="_mHUuMLEXEeeP95al6XTTTg" association="_mOOAYbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOQcobEXEeeP95al6XTTTg" name="" memberEnd="_mOQcorEXEeeP95al6XTTTg _mNOh4LEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOQcorEXEeeP95al6XTTTg" name="" type="_mHV8ULEXEeeP95al6XTTTg" association="_mOQcobEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mORDsbEXEeeP95al6XTTTg" name="" memberEnd="_mORDsrEXEeeP95al6XTTTg _mNOh4bEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mORDsrEXEeeP95al6XTTTg" name="" type="_mHV8ULEXEeeP95al6XTTTg" association="_mORDsbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mORqwbEXEeeP95al6XTTTg" name="" memberEnd="_mORqwrEXEeeP95al6XTTTg _mNPI8bEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mORqwrEXEeeP95al6XTTTg" name="" type="_mHV8ULEXEeeP95al6XTTTg" association="_mORqwbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mORqxLEXEeeP95al6XTTTg" name="" memberEnd="_mORqxbEXEeeP95al6XTTTg _mNPI87EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mORqxbEXEeeP95al6XTTTg" name="" type="_mHV8ULEXEeeP95al6XTTTg" association="_mORqxLEXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mFsWgLEXEeeP95al6XTTTg" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_mFsWgbEXEeeP95al6XTTTg" name="player">
        <packagedElement xmi:type="uml:Package" xmi:id="_mFuywLEXEeeP95al6XTTTg" name="SequencePlayer2">
          <packagedElement xmi:type="uml:Interface" xmi:id="_mLqboLEXEeeP95al6XTTTg" name="IPlayable"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mIE8JLEXEeeP95al6XTTTg" name="ISequencePlayerStatus">
          <ownedComment xmi:id="_mODoWrEXEeeP95al6XTTTg">
            <body>Command that is used to notify a user that a track has stopped playing.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mIFjMbEXEeeP95al6XTTTg" name="NULL" isLeaf="true" isStatic="true" type="_mIE8JLEXEeeP95al6XTTTg" isReadOnly="true" association="_mOOncbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mIFjMrEXEeeP95al6XTTTg" value="new ISequencePlayerStatus() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Prints &quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot; to console.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void finished() {&#xD;&#xA;&#x9;&#x9;&#x9;System.out&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_mIFjMLEXEeeP95al6XTTTg" name="finished">
            <ownedComment xmi:id="_mODoW7EXEeeP95al6XTTTg">
              <body>Called when a track stops playing.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mIGKQLEXEeeP95al6XTTTg" name="SequencePlayer">
          <ownedComment xmi:id="_mODoXLEXEeeP95al6XTTTg">
            <body>Sequence Player to create and play MIDI music sequences.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNavI7EXEeeP95al6XTTTg" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNavJLEXEeeP95al6XTTTg" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNavJbEXEeeP95al6XTTTg" name="_sequence" visibility="private" type="_mM8OALEXEeeP95al6XTTTg" association="_mObbwbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNbWMbEXEeeP95al6XTTTg" name="_track" visibility="private" type="_mM81ELEXEeeP95al6XTTTg" association="_mOcC0bEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNbWM7EXEeeP95al6XTTTg" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNbWNbEXEeeP95al6XTTTg" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNb9QbEXEeeP95al6XTTTg" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNb9Q7EXEeeP95al6XTTTg" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNckUbEXEeeP95al6XTTTg" name="_sequencer" visibility="private" type="_mM9cILEXEeeP95al6XTTTg" association="_mOcp4bEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNdLYLEXEeeP95al6XTTTg" name="_synthesizer" visibility="private" type="_mMT74bEXEeeP95al6XTTTg" association="_mOdQ8bEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNdLYrEXEeeP95al6XTTTg" name="_offsets" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNdLY7EXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNdycbEXEeeP95al6XTTTg" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN5QRrEXEeeP95al6XTTTg" name="SequencePlayer" specification="_mIGxULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN5QR7EXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN5QSLEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN5QSbEXEeeP95al6XTTTg" type="_mIGKQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN5QSrEXEeeP95al6XTTTg" name="init" specification="_mIHYYbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN5QS7EXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN5QTLEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN5QTbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_sequencer = null;&#xD;
		_synthesizer = null;&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
			_sequencer = MidiSystem.getSequencer();&#xD;
			_synthesizer = MidiSystem.getSynthesizer();&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out&#xD;
					.println(&quot;MIDI Unavailable, SequencePlayer not initialized.&quot;);&#xD;
			return false;&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN5QTrEXEeeP95al6XTTTg" name="addNote" specification="_mMGggLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN5QT7EXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN5QULEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN5QUbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN53ULEXEeeP95al6XTTTg" name="addNote" specification="_mMGghLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN53UbEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN53UrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN53U7EXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN53VLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN53VbEXEeeP95al6XTTTg" name="play" specification="_mMHHkrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN53VrEXEeeP95al6XTTTg" name="statusCmd" type="_mIE8JLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mN53V7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mN53WLEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out.println(&quot;Finished Playing&quot;);&#xD;
						stop();&#xD;
						statusCmd.finished();&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
&#xD;
			// And start playing now.&#xD;
			_sequencer.start();&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN53WbEXEeeP95al6XTTTg" name="stop" specification="_mIH_cLEXEeeP95al6XTTTg">
            <language>java</language>
            <body>_sequencer.close();&#xD;
		_synthesizer.close();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN53WrEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" specification="_mIH_cbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN53W7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN53XLEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" specification="_mIImgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN53XbEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN53XrEXEeeP95al6XTTTg" name="getTempo" specification="_mIImgrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN53X7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN6eYLEXEeeP95al6XTTTg" name="setTempo" specification="_mIImhLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN6eYbEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN6eYrEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" specification="_mIImhrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN6eY7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mIGxULEXEeeP95al6XTTTg" name="SequencePlayer" method="_mN5QRrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mIGxU7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mIGxVLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mODoXbEXEeeP95al6XTTTg">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIGxUbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIGxUrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIHYYLEXEeeP95al6XTTTg" type="_mIGKQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mIHYYbEXEeeP95al6XTTTg" name="init" method="_mN5QSrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoXrEXEeeP95al6XTTTg">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIHYYrEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIHYY7EXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIHYZLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIH_cLEXEeeP95al6XTTTg" name="stop" method="_mN53WbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoYrEXEeeP95al6XTTTg">
              <body>Stop playing music and close resources.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_mIH_cbEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" method="_mN53WrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoY7EXEeeP95al6XTTTg">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIH_crEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIImgLEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" method="_mN53XLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoZLEXEeeP95al6XTTTg">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIImgbEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIImgrEXEeeP95al6XTTTg" name="getTempo" method="_mN53XrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoZbEXEeeP95al6XTTTg">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIImg7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIImhLEXEeeP95al6XTTTg" name="setTempo" method="_mN6eYLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPYLEXEeeP95al6XTTTg">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIImhbEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIImhrEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" method="_mN6eYrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPYbEXEeeP95al6XTTTg">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIJNkLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMGggLEXEeeP95al6XTTTg" name="addNote" method="_mN5QTrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoX7EXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMGggbEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMGggrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMGgg7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMGghLEXEeeP95al6XTTTg" name="addNote" method="_mN53ULEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoYLEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMGghbEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMGghrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMHHkLEXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMHHkbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMHHkrEXEeeP95al6XTTTg" name="play" method="_mN53VbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoYbEXEeeP95al6XTTTg">
              <body>Play the created Sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMHHk7EXEeeP95al6XTTTg" name="statusCmd" type="_mIE8JLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mMHHlLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mMHHlbEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mIZFMLEXEeeP95al6XTTTg" name="SequencePlayer2">
          <ownedComment xmi:id="_mOEPYrEXEeeP95al6XTTTg">
            <body>Sequence Player to create and play MIDI music sequences.&#xD;
Differs from SequencePlayer because it has no play() method.   Instead, this class has &#xD;
a factory method that creates an SequencePlayer2.IPlayable object that can be individually &#xD;
and asynchronously started and stopped.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNdycrEXEeeP95al6XTTTg" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNeZgLEXEeeP95al6XTTTg" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNeZgbEXEeeP95al6XTTTg" name="_sequence" visibility="private" type="_mM8OALEXEeeP95al6XTTTg" association="_mOdQ9LEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNeZg7EXEeeP95al6XTTTg" name="_track" visibility="private" type="_mM81ELEXEeeP95al6XTTTg" association="_mOd4AbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNfAkLEXEeeP95al6XTTTg" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNfAkrEXEeeP95al6XTTTg" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNfAlLEXEeeP95al6XTTTg" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNfnobEXEeeP95al6XTTTg" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNfno7EXEeeP95al6XTTTg" name="_offsets" isLeaf="true" isStatic="true" isReadOnly="true">
            <eAnnotations xmi:id="_mNgOsLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mNgOsbEXEeeP95al6XTTTg" key="ConstantWithGetter"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNgOsrEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNgOtLEXEeeP95al6XTTTg" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN6eZLEXEeeP95al6XTTTg" name="SequencePlayer2" specification="_mIa6YLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN6eZbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN6eZrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN6eZ7EXEeeP95al6XTTTg" type="_mIZFMLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN6eaLEXEeeP95al6XTTTg" name="init" specification="_mIbhcLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN6eabEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN6earEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN6ea7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN6ebLEXEeeP95al6XTTTg" name="addNote" specification="_mMI8wLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7FcLEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN7FcbEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN7FcrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7Fc7EXEeeP95al6XTTTg" name="addNote" specification="_mMJj0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7FdLEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN7FdbEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN7FdrEXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN7Fd7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration()&#xD;
				* _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note&#xD;
					+ &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7FeLEXEeeP95al6XTTTg" name="makePlayable" specification="_mMKK4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7FebEXEeeP95al6XTTTg" name="statusCmd" type="_mIE8JLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mN7FerEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mN7Fe7EXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_mN7FfLEXEeeP95al6XTTTg" type="_mIZsQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			final Sequencer _sequencer = MidiSystem.getSequencer(); // MIDI Sequencer object&#xD;
			final Synthesizer _synthesizer = MidiSystem.getSynthesizer(); // MIDI synthesizer object&#xD;
&#xD;
			final IPlayable playable = new IPlayable() {&#xD;
&#xD;
				@Override&#xD;
				public void start() {&#xD;
					_sequencer.start();&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public void stop() {&#xD;
					_sequencer.close();&#xD;
					_synthesizer.close();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out&#xD;
								.println(&quot;SequencePlayer2.play(): End of Track&quot;);&#xD;
						playable.stop();&#xD;
						statusCmd.finished();&#xD;
					} else&#xD;
						System.out.println(&quot;Message type received: &quot;&#xD;
								+ m.getType());&#xD;
				}&#xD;
			});&#xD;
&#xD;
			return playable;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		return IPlayable.NULL;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7FfbEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" specification="_mIcIgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7FfrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7Ff7EXEeeP95al6XTTTg" name="setTicksPerDefaultNote" specification="_mIcvkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7FgLEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7sgLEXEeeP95al6XTTTg" name="getTempo" specification="_mIcvkrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7sgbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7sgrEXEeeP95al6XTTTg" name="setTempo" specification="_mIcvlLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7sg7EXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7shLEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" specification="_mIdWoLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7shbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mIa6YLEXEeeP95al6XTTTg" name="SequencePlayer2" method="_mN6eZLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mIa6Y7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mIa6ZLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOEPZrEXEeeP95al6XTTTg">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIa6YbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIa6YrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIa6ZbEXEeeP95al6XTTTg" type="_mIZFMLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mIbhcLEXEeeP95al6XTTTg" name="init" method="_mN6eaLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPZ7EXEeeP95al6XTTTg">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIbhcbEXEeeP95al6XTTTg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIbhcrEXEeeP95al6XTTTg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIbhc7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIcIgLEXEeeP95al6XTTTg" name="getTicksPerDefaultNote" method="_mN7FfbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPa7EXEeeP95al6XTTTg">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIcIgbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIcvkLEXEeeP95al6XTTTg" name="setTicksPerDefaultNote" method="_mN7Ff7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPbLEXEeeP95al6XTTTg">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIcvkbEXEeeP95al6XTTTg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIcvkrEXEeeP95al6XTTTg" name="getTempo" method="_mN7sgLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPbbEXEeeP95al6XTTTg">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIcvk7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIcvlLEXEeeP95al6XTTTg" name="setTempo" method="_mN7sgrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPbrEXEeeP95al6XTTTg">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIcvlbEXEeeP95al6XTTTg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIdWoLEXEeeP95al6XTTTg" name="getTicksPerQuarterNote" method="_mN7shLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPb7EXEeeP95al6XTTTg">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIdWobEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMI8wLEXEeeP95al6XTTTg" name="addNote" method="_mN6ebLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPaLEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMI8wbEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMI8wrEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMI8w7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMJj0LEXEeeP95al6XTTTg" name="addNote" method="_mN7Fc7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPabEXEeeP95al6XTTTg">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMJj0bEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMJj0rEXEeeP95al6XTTTg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMJj07EXEeeP95al6XTTTg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMJj1LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMKK4LEXEeeP95al6XTTTg" name="makePlayable" method="_mN7FeLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEParEXEeeP95al6XTTTg">
              <body>Factory method for an IPlayable object that can play the currently programmed music sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.&#xD;
	 * @return An IPlayable object associated with the currently programmed music sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMKK4bEXEeeP95al6XTTTg" name="statusCmd" type="_mIE8JLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mMKK47EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mMKK5LEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_mMKK4rEXEeeP95al6XTTTg" type="_mIZsQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Interface" xmi:id="_mIZsQLEXEeeP95al6XTTTg" name="IPlayable">
            <eAnnotations xmi:id="_mIZsQbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mIZsQrEXEeeP95al6XTTTg" key="static"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOEPY7EXEeeP95al6XTTTg">
              <body>Interface  that represents a playable entity.&#xD;
	 * @author swong&#xD;
	 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_mIaTUbEXEeeP95al6XTTTg" name="NULL" isLeaf="true" isStatic="true" type="_mIZsQLEXEeeP95al6XTTTg" isReadOnly="true" association="_mOPOgbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_mIaTUrEXEeeP95al6XTTTg" value="new IPlayable() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void start() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void stop() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_mIZsQ7EXEeeP95al6XTTTg" name="start">
              <ownedComment xmi:id="_mOEPZLEXEeeP95al6XTTTg">
                <body>Starts the sequencer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_mIaTULEXEeeP95al6XTTTg" name="stop">
              <ownedComment xmi:id="_mOEPZbEXEeeP95al6XTTTg">
                <body>Stops the sequencer and synthesizer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOOncbEXEeeP95al6XTTTg" name="" memberEnd="_mOOncrEXEeeP95al6XTTTg _mIFjMbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOOncrEXEeeP95al6XTTTg" name="" type="_mIE8JLEXEeeP95al6XTTTg" association="_mOOncbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOPOgbEXEeeP95al6XTTTg" name="" memberEnd="_mOPOgrEXEeeP95al6XTTTg _mIaTUbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOPOgrEXEeeP95al6XTTTg" name="" type="_mIZsQLEXEeeP95al6XTTTg" association="_mOPOgbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mObbwbEXEeeP95al6XTTTg" name="" memberEnd="_mObbwrEXEeeP95al6XTTTg _mNavJbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mObbwrEXEeeP95al6XTTTg" name="" type="_mIGKQLEXEeeP95al6XTTTg" association="_mObbwbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOcC0bEXEeeP95al6XTTTg" name="" memberEnd="_mOcC0rEXEeeP95al6XTTTg _mNbWMbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOcC0rEXEeeP95al6XTTTg" name="" type="_mIGKQLEXEeeP95al6XTTTg" association="_mOcC0bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOcp4bEXEeeP95al6XTTTg" name="" memberEnd="_mOcp4rEXEeeP95al6XTTTg _mNckUbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOcp4rEXEeeP95al6XTTTg" name="" type="_mIGKQLEXEeeP95al6XTTTg" association="_mOcp4bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOdQ8bEXEeeP95al6XTTTg" name="" memberEnd="_mOdQ8rEXEeeP95al6XTTTg _mNdLYLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOdQ8rEXEeeP95al6XTTTg" name="" type="_mIGKQLEXEeeP95al6XTTTg" association="_mOdQ8bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOdQ9LEXEeeP95al6XTTTg" name="" memberEnd="_mOdQ9bEXEeeP95al6XTTTg _mNeZgbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOdQ9bEXEeeP95al6XTTTg" name="" type="_mIZFMLEXEeeP95al6XTTTg" association="_mOdQ9LEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOd4AbEXEeeP95al6XTTTg" name="" memberEnd="_mOd4ArEXEeeP95al6XTTTg _mNeZg7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOd4ArEXEeeP95al6XTTTg" name="" type="_mIZFMLEXEeeP95al6XTTTg" association="_mOd4AbEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mFsWg7EXEeeP95al6XTTTg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_mIvqgLEXEeeP95al6XTTTg" name="ABCInstrument">
          <ownedComment xmi:id="_mOFdg7EXEeeP95al6XTTTg">
            <body>Represents an instrument as a name and an integer value&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNm8YbEXEeeP95al6XTTTg" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNm8YrEXEeeP95al6XTTTg" name="value" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN-v1rEXEeeP95al6XTTTg" name="ABCInstrument" specification="_mIvqgbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN-v17EXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN-v2LEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN-v2bEXEeeP95al6XTTTg" type="_mIvqgLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.name = name;&#xD;
		this.value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_W4LEXEeeP95al6XTTTg" name="toString" specification="_mIwRk7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_W4bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return name + &quot;: &quot; + value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mIvqgbEXEeeP95al6XTTTg" name="ABCInstrument" method="_mN-v1rEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mIwRkLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mIwRkbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mIvqgrEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIvqg7EXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIwRkrEXEeeP95al6XTTTg" type="_mIvqgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mIwRk7EXEeeP95al6XTTTg" name="toString" method="_mN_W4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mIwRlLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mIwRlbEXEeeP95al6XTTTg" name="ABCUtil">
          <ownedComment xmi:id="_mOFdhLEXEeeP95al6XTTTg">
            <body>Singleton utility class that has methods for parsing,&#xD;
reading file content and getting the list of instruments.&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNnjcLEXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_mIwRlbEXEeeP95al6XTTTg" isReadOnly="true" association="_mOjXkbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNnjcbEXEeeP95al6XTTTg" value="new ABCUtil()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_W4rEXEeeP95al6XTTTg" name="parseFraction" specification="_mIw4pbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_W47EXEeeP95al6XTTTg" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN_W5LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] vals = frac.split(&quot;/&quot;);&#xD;
		if (vals.length != 2) {&#xD;
			throw new NumberFormatException(frac + &quot; is not a fraction.&quot;);&#xD;
		}&#xD;
		double num = Double.parseDouble(vals[0]);&#xD;
		double denom = Double.parseDouble(vals[1]);&#xD;
		return num / denom;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_W5bEXEeeP95al6XTTTg" name="parseTempo" specification="_mIxfsbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_W5rEXEeeP95al6XTTTg" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN_W57EXEeeP95al6XTTTg" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN_W6LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String els[] = tempo.split(&quot;=&quot;);&#xD;
		double bpm = 0;&#xD;
		if (1 == els.length) {&#xD;
			bpm = Double.parseDouble(els[0]) / defaultNotesPerQuarterNote;&#xD;
		} else {&#xD;
			double note = parseFraction(els[0]);&#xD;
			bpm = Double.parseDouble(els[1]) / (0.25 / note);&#xD;
		}&#xD;
		return bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_W6bEXEeeP95al6XTTTg" name="getFileContents" specification="_mIxftbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_W6rEXEeeP95al6XTTTg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN_W67EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String fileContents = &quot;&quot;;&#xD;
&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(filename).openStream();&#xD;
&#xD;
			BufferedReader input = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			try {&#xD;
				// use buffering, reading one line at a time&#xD;
				// FileReader always assumes default&#xD;
				// encoding is OK!&#xD;
&#xD;
				String line = null; // not declared within while loop&#xD;
&#xD;
				/*&#xD;
				 * readLine is a bit quirky : it returns the&#xD;
				 * content of a line MINUS the newline. it&#xD;
				 * returns null only for the END of the&#xD;
				 * stream. it returns an empty String if two&#xD;
				 * newlines appear in a row.&#xD;
				 */&#xD;
				while ((line = input.readLine()) != null) {&#xD;
					fileContents += line + &quot;\n&quot;;&#xD;
				}&#xD;
			} finally {&#xD;
				input.close();&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			return &quot;Error loading file: &quot; + filename + &quot;\n&quot; + e + &quot;\n&quot;;&#xD;
		}&#xD;
&#xD;
		return fileContents;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_W7LEXEeeP95al6XTTTg" name="getInstruments" specification="_mIyGwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_W7bEXEeeP95al6XTTTg" type="_mIvqgLEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN_W7rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			Synthesizer synth = MidiSystem.getSynthesizer();&#xD;
			synth.open();&#xD;
			Instrument[] instruments = synth.getAvailableInstruments();&#xD;
			ABCInstrument[] result = new ABCInstrument[instruments.length];&#xD;
			for (int i = 0; i &lt; instruments.length; i++) {&#xD;
				result[i] = new ABCInstrument(instruments[i].getName(),&#xD;
						instruments[i].getPatch().getProgram());&#xD;
			}&#xD;
&#xD;
			synth.close();&#xD;
			return result;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.err.println(&quot;ABCUtil.getInstruments: &quot; + e);&#xD;
			return null;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mIw4oLEXEeeP95al6XTTTg" name="ABCUtil" visibility="private">
            <eAnnotations xmi:id="_mIw4obEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mIw4orEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mIw4pLEXEeeP95al6XTTTg" type="_mIwRlbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mIw4pbEXEeeP95al6XTTTg" name="parseFraction" method="_mN_W4rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdhbEXEeeP95al6XTTTg">
              <body>Return the evaluation of a string &quot;a/b&quot;.&#xD;
	 * &#xD;
	 * @param frac - a string containing a fraction&#xD;
	 * @return     - the result of evaluating the fraction</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIw4prEXEeeP95al6XTTTg" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIxfsLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIxfsbEXEeeP95al6XTTTg" name="parseTempo" method="_mN_W5bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdhrEXEeeP95al6XTTTg">
              <body>Return the tempo given by the input string.  The returned value is in the &#xD;
	 * units of quarter notes per minute.&#xD;
	 * &#xD;
	 * Accepts &quot;bpm&quot; (beats per default note) or &quot;a/b=bpm&quot; (beats per a/b note).&#xD;
	 * &#xD;
	 * @param tempo                      - tempo represented as a string&#xD;
	 * @param defaultNotesPerQuarterNote - default notes per quarter note &#xD;
	 * @return                           - the tempo indicated by the string</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIxfsrEXEeeP95al6XTTTg" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIxfs7EXEeeP95al6XTTTg" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIxftLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIxftbEXEeeP95al6XTTTg" name="getFileContents" method="_mN_W6bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdh7EXEeeP95al6XTTTg">
              <body>Returns the contents of a text file, e.g. an abc file, as a single string.&#xD;
	 * @param filename the name of the file with respect to the default package, where &quot;/&quot; refers to the default package, e.g. a file in the &quot;data&quot; package would &quot;/data/myfile.abc&quot;&#xD;
	 * @return the contents of the file</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIxftrEXEeeP95al6XTTTg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIxft7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIyGwLEXEeeP95al6XTTTg" name="getInstruments" method="_mN_W7LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdiLEXEeeP95al6XTTTg">
              <body>Get an array of all the available instruments as ABCInstruments &#xD;
	 * where the instrument's value is the MIDI instrument number&#xD;
	 * &#xD;
	 * @return an array of ABCInstruments</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIyGwbEXEeeP95al6XTTTg" type="_mIvqgLEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mIyGwrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mIyt0LEXEeeP95al6XTTTg" name="KeySignature">
          <ownedComment xmi:id="_mOFdibEXEeeP95al6XTTTg">
            <body>Utility class to simplify dealing with key signatures &lt;br/>&#xD;
Usage:&lt;br/>&#xD;
KeySignature keySig = new KeySignature(aKey); // aKey is a string representing a key, e.g. &quot;C&quot;, &quot;Bb&quot;, &quot;Am&quot;&lt;br/>&#xD;
Note adjustedNote = keySig.adjust(originalNote); // returns the Note object, adjusted so that it matches the key,&#xD;
e.g for key of &quot;D&quot;, an &quot;F&quot; --&amp;gt; &quot;F#&quot;.&lt;br/></body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNnjcrEXEeeP95al6XTTTg" name="_major" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNnjc7EXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNoKgbEXEeeP95al6XTTTg" value="{ 0, 2, 2, 1, 2, 2, 2 //, 1&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNoKgrEXEeeP95al6XTTTg" name="_minor" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNoKg7EXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNoKhbEXEeeP95al6XTTTg" value="{ // Half steps in a Minor key&#xD;&#xA;&#x9;0, 2, 1, 2, 2, 1, 2 //, 2&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNpYoLEXEeeP95al6XTTTg" name="keymap" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <qualifier xmi:id="_mNpYo7EXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNpYobEXEeeP95al6XTTTg" value="new Hashtable&lt;Character, Integer>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNpYpLEXEeeP95al6XTTTg" name="notes" visibility="private" type="_mIyt0bEXEeeP95al6XTTTg" association="_mOj-obEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNpYpbEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNp_sbEXEeeP95al6XTTTg" value="{ new KeyNote('A', 0), new KeyNote('A', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('B', 0), new KeyNote('C', 0), new KeyNote('C', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('D', 0), new KeyNote('D', 1), new KeyNote('E', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 0), new KeyNote('F', 1), new KeyNote('G', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNp_s7EXEeeP95al6XTTTg" name="fs_dsm" visibility="private" type="_mIyt0bEXEeeP95al6XTTTg" association="_mOklsbEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNp_tLEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNqmwLEXEeeP95al6XTTTg" value="{ new KeyNote('A', 1), new KeyNote('B', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('C', 1), new KeyNote('D', 1), new KeyNote('E', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 1), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_98rEXEeeP95al6XTTTg" name="KeySignature" specification="_mIz78LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_987EXEeeP95al6XTTTg" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN_99LEXEeeP95al6XTTTg" type="_mIyt0LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>// Get rid of spurious &quot;maj&quot; at the end, if it's there&#xD;
		if (key.endsWith(&quot;maj&quot;)) {&#xD;
			key = key.replace(&quot;maj&quot;, &quot;&quot;);&#xD;
		}&#xD;
&#xD;
		// Special case keys with 6 sharps&#xD;
		if ((key == &quot;F#&quot;) || (key == &quot;D#m&quot;)) {&#xD;
			for (KeyNote n : fs_dsm) {&#xD;
				keymap.put(n.letter, n.accidental);&#xD;
			}&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		char keynote = key.charAt(0);&#xD;
		int cur = -1;&#xD;
&#xD;
		for (int i = 0; i &lt; notes.length; i++) {&#xD;
			if (notes[i].letter == keynote) {&#xD;
				cur = i;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			System.out.println(&quot;Invalid key: &quot; + key);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		int[] steps = _major;&#xD;
&#xD;
		int idx = 1;&#xD;
		while (idx &lt; key.length()) {&#xD;
			switch (key.charAt(idx)) {&#xD;
			case '#':&#xD;
				cur += 1;&#xD;
				break;&#xD;
&#xD;
			case 'b':&#xD;
				cur -= 1;&#xD;
				break;&#xD;
&#xD;
			case 'm':&#xD;
				steps = _minor;&#xD;
				break;&#xD;
&#xD;
			default:&#xD;
				System.out.println(&quot;Invalid key: &quot; + key);&#xD;
				return;&#xD;
			}&#xD;
			idx++;&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			cur = notes.length - 1;&#xD;
		}&#xD;
&#xD;
		for (int i : steps) {&#xD;
			cur += i;&#xD;
			if (cur >= notes.length) {&#xD;
				cur -= notes.length;&#xD;
			}&#xD;
			KeyNote n = notes[cur];&#xD;
			insert(n);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_99bEXEeeP95al6XTTTg" name="convertflat" specification="_mIz79bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_99rEXEeeP95al6XTTTg" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN_997EXEeeP95al6XTTTg" type="_mIyt0bEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>char next = (char) (n + 1);&#xD;
		if (next == 'H') {&#xD;
			next = 'A';&#xD;
		}&#xD;
		return new KeyNote(next, -1);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_9-LEXEeeP95al6XTTTg" name="insert" specification="_mMVKAbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_9-bEXEeeP95al6XTTTg" name="n" type="_mIyt0bEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>if (!keymap.containsKey(n.letter)) {&#xD;
			keymap.put(n.letter, n.accidental);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if (n.accidental == 1) {&#xD;
			// Move sharp up to next flat&#xD;
			insert(convertflat(n.letter));&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if ((n.accidental == 0) || (n.accidental == -1)) {&#xD;
			// Conflict, move higher note up to next flat&#xD;
			int a = keymap.get(n.letter);&#xD;
			a = Math.min(a, n.accidental);&#xD;
			insert(convertflat(n.letter));&#xD;
			keymap.put(n.letter, a);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		// Shouldn't get here&#xD;
		System.out.println(&quot;Should not reach here.&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_9-rEXEeeP95al6XTTTg" name="map" specification="_mNF_AbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_9-7EXEeeP95al6XTTTg" name="note" type="_mNFX8LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN_9_LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (keymap.containsKey(note)) {&#xD;
			return (int) keymap.get(note);&#xD;
		} else {&#xD;
			return 0;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_9_bEXEeeP95al6XTTTg" name="adjust" specification="_mMVKA7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN_9_rEXEeeP95al6XTTTg" name="n" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN_9_7EXEeeP95al6XTTTg" type="_mH1EgLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (n.getAccidental() != 0 &amp;&amp; !n.getIsNatural()) {&#xD;
			return n; // Accidentals set and is not natural&#xD;
		} else if (n.getIsNatural()) {&#xD;
			return n; // override key signature&#xD;
		} else {&#xD;
			// normal key signature mapping applies&#xD;
			int accidental = map(n.getName());&#xD;
			if (accidental == 0) {&#xD;
				return n; // nothing to change&#xD;
			}&#xD;
			return new Note(n.getName(), n.getOctave(), accidental,&#xD;
					n.getDuration(), false); // must be false isNatural&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_-ALEXEeeP95al6XTTTg" name="printmap" specification="_mI0jALEXEeeP95al6XTTTg">
            <language>java</language>
            <body>System.out.println(keymap);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mIz78LEXEeeP95al6XTTTg" name="KeySignature" method="_mN_98rEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mIz78rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mIz787EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOFdjLEXEeeP95al6XTTTg">
              <body>Generate a &quot;Key&quot; object that enables easy access to the key signature.&#xD;
	 * &#xD;
	 * @param key        - String indicating key (i.e., &quot;C&quot; or &quot;D#m&quot;)</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIz78bEXEeeP95al6XTTTg" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIz79LEXEeeP95al6XTTTg" type="_mIyt0LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mIz79bEXEeeP95al6XTTTg" name="convertflat" visibility="private" method="_mN_99bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdjbEXEeeP95al6XTTTg">
              <body>Helper method to convert a note to its equivalent flat version.&#xD;
	 * &#xD;
	 * @param n  - note letter&#xD;
	 * @return   - equivalent flat version of note n</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIz79rEXEeeP95al6XTTTg" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMVKALEXEeeP95al6XTTTg" type="_mIyt0bEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mI0jALEXEeeP95al6XTTTg" name="printmap" method="_mN_-ALEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdkbEXEeeP95al6XTTTg">
              <body>Print the mapping for this key signature</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_mMVKAbEXEeeP95al6XTTTg" name="insert" visibility="private" method="_mN_9-LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdjrEXEeeP95al6XTTTg">
              <body>Helper method to insert the given note into the keymap.&#xD;
	 * &#xD;
	 * @param n  - note to add to the map</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMVKArEXEeeP95al6XTTTg" name="n" type="_mIyt0bEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mMVKA7EXEeeP95al6XTTTg" name="adjust" method="_mN_9_bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdkLEXEeeP95al6XTTTg">
              <body>Takes a note and returns the properly transposed note in this key signature&#xD;
	 *&#xD;
	 * @param n - note to be adjusted&#xD;
	 * @return A new, adjusted Note</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMVxELEXEeeP95al6XTTTg" name="n" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMVxEbEXEeeP95al6XTTTg" type="_mH1EgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mNF_AbEXEeeP95al6XTTTg" name="map" visibility="private" method="_mN_9-rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOFdj7EXEeeP95al6XTTTg">
              <body>Takes a note (with no accidentals) and returns the accidental for this&#xD;
	 * key signature.&#xD;
	 * &#xD;
	 * @param  note - in [A, B, C, D, E, F, G]&#xD;
	 * @return accidental for the note in this key signature [-1, 0, 1]</body>
            </ownedComment>
            <ownedParameter xmi:id="_mNF_ArEXEeeP95al6XTTTg" name="note" type="_mNFX8LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNGmELEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_mIyt0bEXEeeP95al6XTTTg" name="KeyNote" visibility="private">
            <ownedComment xmi:id="_mOFdirEXEeeP95al6XTTTg">
              <body>Utility class to keep track of the position of notes</body>
            </ownedComment>
            <ownedAttribute xmi:id="_mNoKhrEXEeeP95al6XTTTg" name="letter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_mNoxkbEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_W77EXEeeP95al6XTTTg" name="KeyNote" specification="_mIzU4LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN_W8LEXEeeP95al6XTTTg" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mN_W8bEXEeeP95al6XTTTg" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mN_W8rEXEeeP95al6XTTTg" type="_mIyt0bEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>this.letter = letter;&#xD;
			this.accidental = accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN_98LEXEeeP95al6XTTTg" name="toString" specification="_mIzU5rEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN_98bEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;&quot; + letter + accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_mIzU4LEXEeeP95al6XTTTg" name="KeyNote" visibility="package" method="_mN_W77EXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mIzU47EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mIzU5LEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_mOFdi7EXEeeP95al6XTTTg">
                <body>Constructor for the class&#xD;
		 * @param letter  The letter of the note&#xD;
		 * @param accidental  Whether or not the note is accidental:  -1 = flat, 0 = natural, +1 = sharp</body>
              </ownedComment>
              <ownedParameter xmi:id="_mIzU4bEXEeeP95al6XTTTg" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mIzU4rEXEeeP95al6XTTTg" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mIzU5bEXEeeP95al6XTTTg" type="_mIyt0bEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_mIzU5rEXEeeP95al6XTTTg" name="toString" method="_mN_98LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mIzU57EXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOjXkbEXEeeP95al6XTTTg" name="" memberEnd="_mOjXkrEXEeeP95al6XTTTg _mNnjcLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOjXkrEXEeeP95al6XTTTg" name="" type="_mIwRlbEXEeeP95al6XTTTg" association="_mOjXkbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOj-obEXEeeP95al6XTTTg" name="" memberEnd="_mOj-orEXEeeP95al6XTTTg _mNpYpLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOj-orEXEeeP95al6XTTTg" name="" type="_mIyt0LEXEeeP95al6XTTTg" association="_mOj-obEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOklsbEXEeeP95al6XTTTg" name="" memberEnd="_mOklsrEXEeeP95al6XTTTg _mNp_s7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOklsrEXEeeP95al6XTTTg" name="" type="_mIyt0LEXEeeP95al6XTTTg" association="_mOklsbEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mFuLsLEXEeeP95al6XTTTg" name="abcParser">
        <packagedElement xmi:type="uml:Class" xmi:id="_mHZmsLEXEeeP95al6XTTTg" name="ABCParser">
          <ownedComment xmi:id="_mOBzKrEXEeeP95al6XTTTg">
            <body>Parses an abc file into IPhrase music structures&lt;br/>&#xD;
&#xD;
Usage: &lt;br/>&#xD;
ABCParser parser = new ABCParser(&quot;/data/aMusicFile.abc&quot;); &lt;br/>&#xD;
IPhrase phrase = parser.parse(); &lt;br/>&#xD;
&#xD;
Cases handled:&lt;br/>&#xD;
- single notes with and without accidentals and naturals with regards to measures&lt;br/>&#xD;
- chords&lt;br/>&#xD;
- dotted notes&lt;br/>&#xD;
- grace notes&lt;br/>&#xD;
- repeats, including first and second repeats.&lt;br/>&#xD;
- triplets &lt;br/>&#xD;
- tuplets&lt;br/>&#xD;
- all headers&lt;br/>&#xD;
- quoted text&lt;br/>&#xD;
- D.C. al fine&lt;br/>&#xD;
- EOF (End Of File)&lt;br/>&#xD;
&lt;br/>&#xD;
All other cases ignored.&#xD;
&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNPwALEXEeeP95al6XTTTg" name="abcT" visibility="private" type="_mIoVwrEXEeeP95al6XTTTg" association="_mOSR0bEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNPwArEXEeeP95al6XTTTg" name="beginningTarget" visibility="private" type="_mHj-wLEXEeeP95al6XTTTg" association="_mOS44bEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNQXELEXEeeP95al6XTTTg" value="new DecoratorSeqList()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNQXErEXEeeP95al6XTTTg" name="jumpTargetStack" visibility="private" type="_mMosALEXEeeP95al6XTTTg" association="_mOTf8bEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNQ-IbEXEeeP95al6XTTTg" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNQ-I7EXEeeP95al6XTTTg" name="jumpSecondRepeatStack" visibility="private" type="_mMosALEXEeeP95al6XTTTg" association="_mOUHAbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNRlMbEXEeeP95al6XTTTg" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNRlM7EXEeeP95al6XTTTg" name="makeSeqListAlgo" visibility="private" type="_mIfL0LEXEeeP95al6XTTTg" association="_mOUuEbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNRlNLEXEeeP95al6XTTTg" value="new ATokVisitor(new ITokVisitorCmd() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Default behavior is to ignore any unrecognized tokens by merely proceeding to the next one.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unhandled Token: &quot; + host);&#xD;&#xA;&#x9;&#x9;&#x9;return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}) {&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNRlNrEXEeeP95al6XTTTg" name="isGrace" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNSMQLEXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNSMQrEXEeeP95al6XTTTg" name="grace_multiplier" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNSMQ7EXEeeP95al6XTTTg" value="0.2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNSMRbEXEeeP95al6XTTTg" name="graceDuration" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNSMRrEXEeeP95al6XTTTg" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNSzUbEXEeeP95al6XTTTg" name="dottedCorrection" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNSzUrEXEeeP95al6XTTTg" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNSzVLEXEeeP95al6XTTTg" name="checkNextNoteAlgo" visibility="private" type="_mIfL0LEXEeeP95al6XTTTg" association="_mOUuFLEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNSzVbEXEeeP95al6XTTTg" value="new ATokVisitor(&#xD;&#xA;&#x9;&#x9;&#x9;new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// No dotted modification detected.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;abcT.putBack(host); // put token back to be reprocessed&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// later&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = 0.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return params[0]; // return duration unchanged.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;}) {&#xD;&#xA;&#x9;&#x9;// Initializer block for internal visitor&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;&lt;&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is halved, the next dotted&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0] / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;>&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is dotted, the next note halved&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = -duration / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;duration -= dottedCorrection;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Notes parsed \&quot;&quot; + id&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;\&quot; dotting.  durationCorrection = &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNTaYbEXEeeP95al6XTTTg" name="accidentalNotes" visibility="private" type="_mH1EgLEXEeeP95al6XTTTg" association="_mOVVIbEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNTaYrEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNTaY7EXEeeP95al6XTTTg" value="new HashSet&lt;Note>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNyikLEXEeeP95al6XTTTg" name="popJumpTarget" specification="_mHaNwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNyikbEXEeeP95al6XTTTg" type="_mHj-wLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (jumpTargetStack.isEmpty())&#xD;
			return beginningTarget;&#xD;
		else&#xD;
			return jumpTargetStack.pop();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNyikrEXEeeP95al6XTTTg" name="pushJumpTarget" specification="_mLs34bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNyik7EXEeeP95al6XTTTg" name="target" type="_mHj-wLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>jumpTargetStack.push(target);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNyilLEXEeeP95al6XTTTg" name="ABCParser" specification="_mHa00LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNyilbEXEeeP95al6XTTTg" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNyilrEXEeeP95al6XTTTg" type="_mHZmsLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>try {&#xD;
			abcT = new ABCTokenizer(inputFileName);&#xD;
&#xD;
			// ------ EOF -----------------------------------------------------&#xD;
			ITokVisitorCmd eofCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					return MTSeqList.Singleton;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Note -----------------------------------------------------&#xD;
			ITokVisitorCmd noteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note note = makeNote(host);&#xD;
					System.out.println(&quot;Note parsed: &quot; + note);&#xD;
&#xD;
					return new NESeqList(note, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Header-------------------------------------------&#xD;
			// Same command for all headers&#xD;
			ITokVisitorCmd headerCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Header header = new Header(id, host.getLexeme());&#xD;
					System.out.println(&quot;Header parsed: &quot; + header);&#xD;
					return new NESeqList(header, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Chord----------------------------------------------&#xD;
			ITokVisitorCmd chordStartCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeChordAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.chordCmd: Non-Note token encountered:&quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Note note = makeNote(host);&#xD;
								System.out&#xD;
										.println(&quot;Chord parsed Note: &quot; + note);&#xD;
								((Vector&lt;Note>) params[0]).add(note);&#xD;
								return abcT.getNextToken().execute(&#xD;
										makeChordAlgo, params);&#xD;
							}&#xD;
						});&#xD;
&#xD;
						this.addCmd(&quot;]&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								Vector&lt;Note> vNotes = (Vector&lt;Note>) params[0];&#xD;
								Note[] result = new Note[vNotes.size()];&#xD;
								for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
									result[i] = vNotes.get(i);&#xD;
								return result;&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeChordAlgo, new Vector&lt;Note>());&#xD;
					Chord chord = new Chord(notes);&#xD;
					System.out.println(&quot;Chord parsed: &quot; + chord);&#xD;
					return new NESeqList(chord, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note Start---------------------------------------&#xD;
			ITokVisitorCmd graceStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace Start parsed.&quot;);&#xD;
					isGrace = true; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note End--------------------------------------------&#xD;
			ITokVisitorCmd graceEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace End parsed.&quot;);&#xD;
					isGrace = false; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Tuplet----------------------------------------------&#xD;
			ITokVisitorCmd tupletCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeTupletAlgo = new ATokVisitor(&#xD;
						new ITokVisitorCmd() {&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								throw new IllegalArgumentException(&#xD;
										&quot;ABCParser.tupletCmd: Non-Note token encountered: &quot;&#xD;
												+ host);&#xD;
							}&#xD;
&#xD;
						}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host,&#xD;
									Object... params) {&#xD;
								int count = (Integer) params[0];&#xD;
								Vector&lt;Note> vNotes = ((Vector&lt;Note>) params[1]);&#xD;
&#xD;
								Note note = makeNote(host);&#xD;
								System.out.println(&quot;Tuplet parsed Note: &quot;&#xD;
										+ note + &quot; count = &quot; + count);&#xD;
								vNotes.add(note);&#xD;
&#xD;
								if (1 == count) {&#xD;
									Note[] result = new Note[vNotes.size()];&#xD;
									for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
										result[i] = vNotes.get(i);&#xD;
									return result;&#xD;
								} else {&#xD;
									return abcT.getNextToken().execute(&#xD;
											makeTupletAlgo, --count, vNotes);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					int nNotes = Integer.parseInt(host.getLexeme());&#xD;
&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(&#xD;
							makeTupletAlgo, nNotes, new Vector&lt;Note>());&#xD;
&#xD;
					NoteCollection result;&#xD;
&#xD;
					if (3 == nNotes) {&#xD;
						result = new Triplet(notes[0], notes[1], notes[2]);&#xD;
					} else {&#xD;
						result = new Tuplet(notes);&#xD;
					}&#xD;
					System.out.println(&quot;Tuplet parsed: &quot; + result);&#xD;
					return new NESeqList(result, (ISeqList) abcT.getNextToken()&#xD;
							.execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Measure bar --------------------------------------------&#xD;
			ITokVisitorCmd measureBarCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					accidentalNotes.clear(); // clear any accidentals&#xD;
					System.out&#xD;
							.println(&quot;Measure bar parsed.  Accidental Notes cleared.&quot;);&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat Start -----------------------------------------&#xD;
			ITokVisitorCmd repeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList repeatStart = new DecoratorSeqList();&#xD;
					pushJumpTarget(repeatStart);&#xD;
					System.out.println(&quot;Repeat Start parsed&quot;);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					repeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat End -----------------------------------------&#xD;
			ITokVisitorCmd repeatEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					ISeqList jumpTarget = popJumpTarget();&#xD;
					System.out.println(&quot;Repeat End parsed&quot;);&#xD;
					if (jumpSecondRepeatStack.isEmpty()) {&#xD;
						return new ToggleDecoratorSeqList(jumpTarget,&#xD;
								(ISeqList) abcT.getNextToken().execute(&#xD;
										makeSeqListAlgo, params));&#xD;
					} else {&#xD;
						abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
						return jumpTarget;&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ First Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd firstRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = new DecoratorSeqList();&#xD;
					jumpSecondRepeatStack.push(secondRepeatStart);&#xD;
					System.out&#xD;
							.println(&quot;First Repeat Start parsed.  ID = &quot; + id);&#xD;
					return new ToggleDecoratorSeqList((ISeqList) abcT&#xD;
							.getNextToken().execute(makeSeqListAlgo, params),&#xD;
							secondRepeatStart);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Second Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd secondRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out.println(&quot;Second Repeat Start parsed.  ID = &quot;&#xD;
							+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Alt. Second Repeat Start Repeat --------------------------&#xD;
			/**&#xD;
			 * This covers the &quot;:|2&quot; token which includes the repeat.&#xD;
			 */&#xD;
			ITokVisitorCmd secondRepeatStartAltCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack&#xD;
							.pop();&#xD;
					System.out&#xD;
							.println(&quot;Second Repeat Start Alt. parsed.  ID = &quot;&#xD;
									+ id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(&#xD;
							makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return popJumpTarget();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Quote processing --------------------------&#xD;
			ITokVisitorCmd quoteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				FineToggleDecoratorSeqList fineToggle = new FineToggleDecoratorSeqList();&#xD;
&#xD;
				boolean isSwapped = false;&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					if (host.getLexeme().equals(&quot;_fine&quot;)) {&#xD;
&#xD;
						System.out.println(&quot;\&quot;_fine\&quot; parsed&quot;);&#xD;
						fineToggle.setDecoree(0, (ISeqList) abcT.getNextToken()&#xD;
								.execute(makeSeqListAlgo, params));&#xD;
						return fineToggle;&#xD;
					} else if (host.getLexeme().equals(&quot;_D.C al Fine&quot;)) {&#xD;
						if (isSwapped) {&#xD;
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed&quot;);&#xD;
							return new ISeqList() {&#xD;
&#xD;
								@Override&#xD;
								public Object execute(IPhraseVisitor algo,&#xD;
										Object... params) {&#xD;
									fineToggle.setFine();&#xD;
									return beginningTarget&#xD;
											.execute(algo, params);&#xD;
								}&#xD;
							};&#xD;
						} else {&#xD;
							isSwapped = true;&#xD;
							System.out&#xD;
									.println(&quot;\&quot;_D.C al Fine\&quot; parsed, but swapped for next token.&quot;);&#xD;
							return swapToken(host).execute(makeSeqListAlgo,&#xD;
									params);&#xD;
						}&#xD;
					} else {&#xD;
						System.out.println(&quot;Quote parsed - ignored&quot;);&#xD;
						return abcT.getNextToken().execute(makeSeqListAlgo,&#xD;
								params);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ---- Add Commands to Visitor------------------------------&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;EOF&quot;, eofCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Note&quot;, noteCmd);&#xD;
&#xD;
			String headers = &quot;ABCDEFGHIKLMNOPQRSTWXZ&quot;;&#xD;
			for (int i = 0; i &lt; headers.length(); i++) {&#xD;
				makeSeqListAlgo.addCmd(&quot;&quot; + headers.charAt(i), headerCmd);&#xD;
			}&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;[&quot;, chordStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;{&quot;, graceStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;}&quot;, graceEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Tuplet&quot;, tupletCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|&quot;, measureBarCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|:&quot;, repeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|&quot;, repeatEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|2&quot;, secondRepeatStartAltCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Quote&quot;, quoteCmd);&#xD;
		} catch (Exception e) {&#xD;
			System.err.println(&quot;ABCParser constructor exception: &quot; + e);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNyil7EXEeeP95al6XTTTg" name="parse" specification="_mHa01bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNyimLEXEeeP95al6XTTTg" type="_mHshoLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>ISeqList beginning = (ISeqList) abcT.getNextToken().execute(&#xD;
				makeSeqListAlgo, MTSeqList.Singleton);&#xD;
		beginningTarget.setDecoree(beginning);&#xD;
		return beginning;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNyimbEXEeeP95al6XTTTg" name="makeNote" specification="_mLte8bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNyimrEXEeeP95al6XTTTg" name="host" type="_mIkrY7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNyim7EXEeeP95al6XTTTg" type="_mH1EgLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>char name = 'C';&#xD;
		int octave = 0;&#xD;
		int accidental = 0;&#xD;
		double duration = 1.0;&#xD;
		boolean isNatural = false;&#xD;
&#xD;
		String lex = host.getLexeme();&#xD;
&#xD;
		// get accidental value&#xD;
		int i = 0;&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isLetter(lex.charAt(i))) {&#xD;
				break;&#xD;
			}&#xD;
			if (lex.charAt(i) == '^') {&#xD;
				accidental += +1;&#xD;
			} else if (lex.charAt(i) == '_') {&#xD;
				accidental += -1;&#xD;
			} else if (lex.charAt(i) == '=') {&#xD;
				isNatural = true;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (Character.isLowerCase(lex.charAt(i))) {&#xD;
			octave++;&#xD;
		}&#xD;
		name = Character.toUpperCase(lex.charAt(i));&#xD;
		i++;&#xD;
&#xD;
		// get octave value&#xD;
&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isDigit(lex.charAt(i)) || '/' == lex.charAt(i)) {&#xD;
				break;&#xD;
			}&#xD;
			if ('\'' == lex.charAt(i))&#xD;
				octave += +1;&#xD;
			else if (',' == lex.charAt(i))&#xD;
				octave += -1;&#xD;
		}&#xD;
&#xD;
		if (i &lt; lex.length()) {&#xD;
			if (Character.isDigit(lex.charAt(i))) {&#xD;
				int idx = lex.substring(i).indexOf('/');&#xD;
				if (-1 == idx) {&#xD;
					duration = Double.parseDouble(lex.substring(i));&#xD;
				} else if (lex.length() > i + idx + 1) {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx))&#xD;
							/ Double.parseDouble(lex.substring(i + idx + 1));&#xD;
				} else {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx)) / 2.0;&#xD;
				}&#xD;
			} else {&#xD;
				i++;&#xD;
				if (i &lt; lex.length()) {&#xD;
					duration /= Double.parseDouble(lex.substring(i));&#xD;
				} else {&#xD;
					duration /= 2.0; // Slash w/o number is divide by two.&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (isGrace) {&#xD;
			duration *= grace_multiplier;&#xD;
			graceDuration += duration; // sum the duration of the grace notes&#xD;
		} else if (graceDuration > 0.0) {&#xD;
			// Correct the length of the current note to get it back on beat.&#xD;
			duration -= graceDuration;&#xD;
			graceDuration = 0.0;&#xD;
		}&#xD;
&#xD;
		if (dottedCorrection != 0.0) {&#xD;
			duration += dottedCorrection;&#xD;
			dottedCorrection = 0.0;&#xD;
		}&#xD;
&#xD;
		duration = (Double) abcT.getNextToken().execute(checkNextNoteAlgo,&#xD;
				duration);&#xD;
&#xD;
		Note note = new Note(name, octave, accidental, duration, isNatural);&#xD;
&#xD;
		if (!isNatural) // naturals always override prior accidentals in measure&#xD;
			checkAccidentals(note);&#xD;
		return note;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNyinLEXEeeP95al6XTTTg" name="checkAccidentals" specification="_mLuGALEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNyinbEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				System.out&#xD;
						.println(note&#xD;
								+ &quot; found in accidentals.  Overriding accidentals and isNatural to &quot;&#xD;
								+ n);&#xD;
				note.setAccidental(n.getAccidental());&#xD;
				note.setIsNatural(n.getIsNatural()); // this will override&#xD;
														// accidentals if true&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		if (note.getAccidental() != 0 || note.getIsNatural()) {&#xD;
			addAccidental(note);&#xD;
		}&#xD;
		return;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNyinrEXEeeP95al6XTTTg" name="addAccidental" specification="_mLuGArEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzJoLEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>removeAccidental(note); // remove anything like this note&#xD;
		accidentalNotes.add(note); // put this specific note in&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzJobEXEeeP95al6XTTTg" name="removeAccidental" specification="_mLuGBLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzJorEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName()&#xD;
					&amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				accidentalNotes.remove(n);&#xD;
				// Check all notes, just to be safe&#xD;
			}&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzJo7EXEeeP95al6XTTTg" name="swapToken" specification="_mLutELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzJpLEXEeeP95al6XTTTg" name="t" type="_mIkrY7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNzJpbEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>Token next = abcT.getNextToken();&#xD;
		abcT.putBack(t);&#xD;
		return next;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mHaNwLEXEeeP95al6XTTTg" name="popJumpTarget" visibility="private" method="_mNyikLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOBzK7EXEeeP95al6XTTTg">
              <body>Pull off the current jump target from the jump target stack. If the stack&#xD;
	 * is empty, return the proxy for the beginning of the phrase, as this is&#xD;
	 * the default jump target.&#xD;
	 * &#xD;
	 * @return The current jump target or the beginning of the phrase.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLs34LEXEeeP95al6XTTTg" type="_mHj-wLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mHa00LEXEeeP95al6XTTTg" name="ABCParser" method="_mNyilLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mHa00rEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mHa007EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOBzLbEXEeeP95al6XTTTg">
              <body>Constructs a parser for the given ABC input file.   Does not actually run that parser yet.&#xD;
	 * Prints error message to System.err if there is a problem opening the given file.   The returned &#xD;
	 * parser will be null in the event of an error.&#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file</body>
            </ownedComment>
            <ownedParameter xmi:id="_mHa00bEXEeeP95al6XTTTg" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mHa01LEXEeeP95al6XTTTg" type="_mHZmsLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mHa01bEXEeeP95al6XTTTg" name="parse" method="_mNyil7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOBzLrEXEeeP95al6XTTTg">
              <body>&#xD;
	 * Run the parser and parse the entire file, returning an IPhrase object that represents the entire piece of music.&#xD;
	 * &#xD;
	 * @return An IPhrase object</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLte8LEXEeeP95al6XTTTg" type="_mHshoLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mLs34bEXEeeP95al6XTTTg" name="pushJumpTarget" visibility="private" method="_mNyikrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOBzLLEXEeeP95al6XTTTg">
              <body>Push the given jump target onto the stack so that it is now the current&#xD;
	 * jump target. This corresponds to the innermost nested repeat.&#xD;
	 * &#xD;
	 * @param target&#xD;
	 *            The new current jump target.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLs34rEXEeeP95al6XTTTg" name="target" type="_mHj-wLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mLte8bEXEeeP95al6XTTTg" name="makeNote" visibility="private" method="_mNyimbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOBzL7EXEeeP95al6XTTTg">
              <body>Parse a Note from the given Token&#xD;
	 * &#xD;
	 * @param host&#xD;
	 *            The Note token&#xD;
	 * @return A Note object</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLte8rEXEeeP95al6XTTTg" name="host" type="_mIkrY7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mLte87EXEeeP95al6XTTTg" type="_mH1EgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mLuGALEXEeeP95al6XTTTg" name="checkAccidentals" visibility="private" method="_mNyinLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOBzMLEXEeeP95al6XTTTg">
              <body>Checks to see if the given Note is in the set of accidentals Checks name&#xD;
	 * and octave but not duration or accidental&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            The note to check</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLuGAbEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mLuGArEXEeeP95al6XTTTg" name="addAccidental" visibility="private" method="_mNyinrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOBzMbEXEeeP95al6XTTTg">
              <body>Adds a note to the set of accidentals replaces any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the Note to add.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLuGA7EXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mLuGBLEXEeeP95al6XTTTg" name="removeAccidental" visibility="private" method="_mNzJobEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOBzMrEXEeeP95al6XTTTg">
              <body>Removes a note from the set of accidentals Removes any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the note to remove</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLuGBbEXEeeP95al6XTTTg" name="note" type="_mH1EgLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mLutELEXEeeP95al6XTTTg" name="swapToken" visibility="private" method="_mNzJo7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOBzM7EXEeeP95al6XTTTg">
              <body>Swap the given token for the next token in the tokenizer, returning the&#xD;
	 * next token. The given token will be the next token out of the tokenizer.&#xD;
	 * &#xD;
	 * @param t The token to be swapped into the tokenizer&#xD;
	 * @return the token that previously was next in the tokenizer.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLutEbEXEeeP95al6XTTTg" name="t" type="_mIkrY7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mLutErEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOSR0bEXEeeP95al6XTTTg" name="" memberEnd="_mOSR0rEXEeeP95al6XTTTg _mNPwALEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOSR0rEXEeeP95al6XTTTg" name="" type="_mHZmsLEXEeeP95al6XTTTg" association="_mOSR0bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOS44bEXEeeP95al6XTTTg" name="" memberEnd="_mOS44rEXEeeP95al6XTTTg _mNPwArEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOS44rEXEeeP95al6XTTTg" name="" type="_mHZmsLEXEeeP95al6XTTTg" association="_mOS44bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOTf8bEXEeeP95al6XTTTg" name="" memberEnd="_mOTf8rEXEeeP95al6XTTTg _mNQXErEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOTf8rEXEeeP95al6XTTTg" name="" type="_mHZmsLEXEeeP95al6XTTTg" association="_mOTf8bEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOUHAbEXEeeP95al6XTTTg" name="" memberEnd="_mOUHArEXEeeP95al6XTTTg _mNQ-I7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOUHArEXEeeP95al6XTTTg" name="" type="_mHZmsLEXEeeP95al6XTTTg" association="_mOUHAbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOUuEbEXEeeP95al6XTTTg" name="" memberEnd="_mOUuErEXEeeP95al6XTTTg _mNRlM7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOUuErEXEeeP95al6XTTTg" name="" type="_mHZmsLEXEeeP95al6XTTTg" association="_mOUuEbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOUuFLEXEeeP95al6XTTTg" name="" memberEnd="_mOUuFbEXEeeP95al6XTTTg _mNSzVLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOUuFbEXEeeP95al6XTTTg" name="" type="_mHZmsLEXEeeP95al6XTTTg" association="_mOUuFLEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOVVIbEXEeeP95al6XTTTg" name="" memberEnd="_mOVVIrEXEeeP95al6XTTTg _mNTaYbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOVVIrEXEeeP95al6XTTTg" name="" type="_mHZmsLEXEeeP95al6XTTTg" association="_mOVVIbEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mFuLsbEXEeeP95al6XTTTg" name="music">
        <packagedElement xmi:type="uml:Package" xmi:id="_mFuLsrEXEeeP95al6XTTTg" name="visitor">
          <packagedElement xmi:type="uml:Class" xmi:id="_mICf4LEXEeeP95al6XTTTg" name="playerAlgo">
            <generalization xmi:id="_mMFSYLEXEeeP95al6XTTTg" general="_mHfGQLEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_mNaIErEXEeeP95al6XTTTg" name="key_signature" visibility="private" type="_mIyt0LEXEeeP95al6XTTTg" association="_mOa0sbEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_mNavIbEXEeeP95al6XTTTg" name="sp" visibility="private" type="_mIZFMLEXEeeP95al6XTTTg" association="_mOa0tLEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN5QQrEXEeeP95al6XTTTg" name="playerAlgo" specification="_mIDG8LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN5QQ7EXEeeP95al6XTTTg" type="_mICf4LEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>String headerString = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;
		for (int i = 0; i &lt; headerString.length(); i++) {
			this.addCmd(&quot;&quot; + headerString.charAt(i), new IPhraseVisitorCmd() {
				public Object apply(String id, IPhrase host, Object... params) {
					return params[1];				
				}
			});
		}
		
		
		this.addCmd(&quot;L&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				sp = (SequencePlayer2)params[0];
				double defaultLengthPerNote = ABCUtil.Singleton.parseFraction(head.getValue());
				double ticks = 64 * defaultLengthPerNote;
				sp.setTicksPerDefaultNote((int)ticks);
				return params[1];
			}
		});
		

		this.addCmd(&quot;K&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				key_signature = new KeySignature(head.getValue());
				return params[1];
			}
		});
		
		
		this.addCmd(&quot;Q&quot;, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Header head = (Header)host;
				sp = (SequencePlayer2)params[0];
				double tempo = ABCUtil.Singleton.parseTempo(head.getValue(), 1.0 * sp.getTicksPerQuarterNote()/sp.getTicksPerDefaultNote());
				sp.setTempo((int)tempo);
				return params[1];
			}
		});
		
		
		this.addCmd(Chord.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Chord chord = (Chord)host;
				sp = (SequencePlayer2)params[0];
				int param = (int)params[1];
				for(Note temp_note: chord.getNotes()) {
					param = (int)temp_note.execute(playerAlgo.this, params);
				}
				return param;
			}
		});
		
		this.addCmd(Triplet.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				Triplet triplet = (Triplet)host;
				sp = (SequencePlayer2)params[0];
				int param = (int)params[1];
				for(Note temp_note: triplet.getNotes()) {
					temp_note.setDuration(temp_note.getDuration() * 2.0 / 3);
					param = (int)temp_note.execute(playerAlgo.this, params);
				}
				return param;
			}
		});
		
		
		this.addCmd(Note.ID, new IPhraseVisitorCmd() {
			
			public Object apply(String id, IPhrase host, Object... params){
				sp = (SequencePlayer2)params[0];
				Note note = (Note)host;
				if(key_signature != null) {
					note = key_signature.adjust(note);
				}
				return sp.addNote(note, (int)params[1]);
			}
		});
		
		this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				NESeqList ne_list = (NESeqList)host;
				int param = (int) ne_list.getFirst().execute(playerAlgo.this, params);
				return ne_list.getRest().execute(playerAlgo.this, params[0], param);
			}				
		});

		this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				return params[1];
			}				
		});

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_mIDG8LEXEeeP95al6XTTTg" name="playerAlgo" method="_mN5QQrEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mIDuALEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mIDuAbEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_mIDuArEXEeeP95al6XTTTg" type="_mICf4LEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_mIEVELEXEeeP95al6XTTTg" name="toStringAlgo">
            <generalization xmi:id="_mMF5cLEXEeeP95al6XTTTg" general="_mHfGQLEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN5QRLEXEeeP95al6XTTTg" name="toStringAlgo" specification="_mIE8ILEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN5QRbEXEeeP95al6XTTTg" type="_mIEVELEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>this.addCmd(NESeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				NESeqList ne_list = (NESeqList) host;
				NESeqList.setToStringAlgo(toStringAlgo.this);
				return ne_list.getRest().execute(NESeqList.getToStringAlgo(), params[0]+&quot;,&quot;+ne_list.getFirst());
			}
		});
		
		
		this.addCmd(MTSeqList.ID, new IPhraseVisitorCmd() {
			public Object apply(String id, IPhrase host, Object... params){
				return params[0]+&quot;}&quot;;
			}
		});
		

		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_mIE8ILEXEeeP95al6XTTTg" name="toStringAlgo" method="_mN5QRLEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mIE8IbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mIE8IrEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_mIE8I7EXEeeP95al6XTTTg" type="_mIEVELEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_mOa0sbEXEeeP95al6XTTTg" name="" memberEnd="_mOa0srEXEeeP95al6XTTTg _mNaIErEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_mOa0srEXEeeP95al6XTTTg" name="" type="_mICf4LEXEeeP95al6XTTTg" association="_mOa0sbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_mOa0tLEXEeeP95al6XTTTg" name="" memberEnd="_mOa0tbEXEeeP95al6XTTTg _mNavIbEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_mOa0tbEXEeeP95al6XTTTg" name="" type="_mICf4LEXEeeP95al6XTTTg" association="_mOa0tLEXEeeP95al6XTTTg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mHfGQLEXEeeP95al6XTTTg" name="APhraseVisitor" isAbstract="true">
          <ownedComment xmi:id="_mOBzNLEXEeeP95al6XTTTg">
            <body>Command-based implementation of IPhraseVisitor that uses IPhraseVisitorCmds stored in a hash table.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNTaZbEXEeeP95al6XTTTg" name="defaultCmd" visibility="private" type="_mHuW0LEXEeeP95al6XTTTg" association="_mOV8MbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNUBcbEXEeeP95al6XTTTg" name="cmds" visibility="private" type="_mHuW0LEXEeeP95al6XTTTg" association="_mOWjQLEXEeeP95al6XTTTg">
            <qualifier xmi:id="_mNUBdLEXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNUBcrEXEeeP95al6XTTTg" value="new Hashtable&lt;String, IPhraseVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mLxJUbEXEeeP95al6XTTTg" client="_mHfGQLEXEeeP95al6XTTTg" supplier="_mHtIsLEXEeeP95al6XTTTg" contract="_mHtIsLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzJprEXEeeP95al6XTTTg" name="APhraseVisitor" specification="_mHftULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzJp7EXEeeP95al6XTTTg" type="_mHfGQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new IPhraseVisitorCmd() {&#xD;
			public Object apply(String idx, IPhrase host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;APhraseVisitor: Unknown index encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzJqLEXEeeP95al6XTTTg" name="APhraseVisitor" specification="_mLxwYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzJqbEXEeeP95al6XTTTg" name="defaultCmd" type="_mHuW0LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNzJqrEXEeeP95al6XTTTg" type="_mHfGQLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzJq7EXEeeP95al6XTTTg" name="caseAt" specification="_mMrIQbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzJrLEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNzJrbEXEeeP95al6XTTTg" name="host" type="_mHshoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNzJrrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNzJr7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNzJsLEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzwsLEXEeeP95al6XTTTg" name="addCmd" specification="_mLyXcLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzwsbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNzwsrEXEeeP95al6XTTTg" name="cmd" type="_mHuW0LEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mHftULEXEeeP95al6XTTTg" name="APhraseVisitor" method="_mNzJprEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mHftUbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mHftUrEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOCaMLEXEeeP95al6XTTTg">
              <body>Constructor that installs a default cmd that throws an IllegalArgumentException on any unknown host.</body>
            </ownedComment>
            <ownedComment xmi:id="_mOCaMbEXEeeP95al6XTTTg">
              <body>Abstract extended visitor implementation that uses a dictionary of commands to associate commands with host IDs.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mHftU7EXEeeP95al6XTTTg" type="_mHfGQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mLxwYLEXEeeP95al6XTTTg" name="APhraseVisitor" method="_mNzJqLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mLxwYrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mLxwY7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOCaMrEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to the supplied cmd.&#xD;
	 * @param defaultCmd   the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLxwYbEXEeeP95al6XTTTg" name="defaultCmd" type="_mHuW0LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mLxwZLEXEeeP95al6XTTTg" type="_mHfGQLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mLyXcLEXEeeP95al6XTTTg" name="addCmd" method="_mNzwsLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOCaM7EXEeeP95al6XTTTg">
              <body>Add the given command to the dictionary, associated with the given id value.&#xD;
	 * @param id The id of the host that will use this command&#xD;
	 * @param cmd The command that will be run when the host calls for it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mLyXcbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mLyXcrEXEeeP95al6XTTTg" name="cmd" type="_mHuW0LEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mMrIQbEXEeeP95al6XTTTg" name="caseAt" method="_mNzJq7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mMrIQrEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMrIQ7EXEeeP95al6XTTTg" name="host" type="_mHshoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMrIRLEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMrvUbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMrIRbEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mHiJkLEXEeeP95al6XTTTg" name="Chord">
          <ownedComment xmi:id="_mOCaNLEXEeeP95al6XTTTg">
            <body>A collection of notes that make up a Chord.  All of the notes should&#xD;
be played simultaneously.   The last note defines the length of all the notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_mOCaNbEXEeeP95al6XTTTg">
            <body>A collection of Notes all played at once</body>
          </ownedComment>
          <generalization xmi:id="_mL0MoLEXEeeP95al6XTTTg" general="_mH5V8LEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNUogLEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNUogbEXEeeP95al6XTTTg" value="&quot;Chord&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzws7EXEeeP95al6XTTTg" name="Chord" specification="_mLy-gLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzwtLEXEeeP95al6XTTTg" name="notes" type="_mH1EgLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNzwtbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNzwtrEXEeeP95al6XTTTg" type="_mHiJkLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzwt7EXEeeP95al6XTTTg" name="execute" specification="_mMsWYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzwuLEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNzwubEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNzwurEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNzwu7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNzwvLEXEeeP95al6XTTTg" name="toString" specification="_mHiwoLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNzwvbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Chord(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mHiwoLEXEeeP95al6XTTTg" name="toString" method="_mNzwvLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mHiwobEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mLy-gLEXEeeP95al6XTTTg" name="Chord" method="_mNzws7EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mLzlkLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mLzlkbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mLy-gbEXEeeP95al6XTTTg" name="notes" type="_mH1EgLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLzllLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mLzlk7EXEeeP95al6XTTTg" type="_mHiJkLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mMsWYLEXEeeP95al6XTTTg" name="execute" method="_mNzwt7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mMsWYbEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMsWYrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMs9cbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMsWY7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mHj-wLEXEeeP95al6XTTTg" name="DecoratorSeqList">
          <ownedComment xmi:id="_mOCaNrEXEeeP95al6XTTTg">
            <body>An ISeqList that transparently routes the visitor execution to its decoree.  &#xD;
This class is primarily used to provide a placeholder when a the music should flow &#xD;
to a specific point in the sequence but that point has not yet been calculated, as occurs&#xD;
for instance, during the processing of repeats.    When that target point is finally calculated, &#xD;
the decoree can be set and the decorated target will behave identically to the target.&#xD;
This decorator can also be used to dynamically change the flow of the music by changing the target.  &#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_mOCaN7EXEeeP95al6XTTTg">
            <body>Decorated ISeqList used as a transparent proxy placeholder.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNUogrEXEeeP95al6XTTTg" name="decoree" visibility="private" type="_mHu94LEXEeeP95al6XTTTg" association="_mOWjQ7EXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNUog7EXEeeP95al6XTTTg" value="MTSeqList.Singleton"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mL0zsLEXEeeP95al6XTTTg" client="_mHj-wLEXEeeP95al6XTTTg" supplier="_mHu94LEXEeeP95al6XTTTg" contract="_mHu94LEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0XwLEXEeeP95al6XTTTg" name="DecoratorSeqList" specification="_mL1awLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0XwbEXEeeP95al6XTTTg" name="decoree" type="_mHu94LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN0XwrEXEeeP95al6XTTTg" type="_mHj-wLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setDecoree(decoree);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0Xw7EXEeeP95al6XTTTg" name="setDecoree" specification="_mL1axbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0XxLEXEeeP95al6XTTTg" name="decoree" type="_mHu94LEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>this.decoree = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0XxbEXEeeP95al6XTTTg" name="execute" specification="_mMtkgLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0XxrEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN0Xx7EXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN0XyLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN0XybEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return decoree.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mHkl0LEXEeeP95al6XTTTg" name="DecoratorSeqList">
            <eAnnotations xmi:id="_mHkl0bEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mHkl0rEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mHkl1LEXEeeP95al6XTTTg" type="_mHj-wLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mL1awLEXEeeP95al6XTTTg" name="DecoratorSeqList" method="_mN0XwLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mL1awrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mL1aw7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOCaOLEXEeeP95al6XTTTg">
              <body>Constructor used to set the decoree to a known value at construction time.&#xD;
	 * @param decoree The decoree phrase sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_mL1awbEXEeeP95al6XTTTg" name="decoree" type="_mHu94LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mL1axLEXEeeP95al6XTTTg" type="_mHj-wLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mL1axbEXEeeP95al6XTTTg" name="setDecoree" method="_mN0Xw7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOCaObEXEeeP95al6XTTTg">
              <body>Setter methods used to set the decoree.&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mL1axrEXEeeP95al6XTTTg" name="decoree" type="_mHu94LEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mMtkgLEXEeeP95al6XTTTg" name="execute" method="_mN0XxbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mMtkgbEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMtkgrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMuLkbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMtkg7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mHmbALEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList">
          <ownedComment xmi:id="_mOCaOrEXEeeP95al6XTTTg">
            <body>The class is used to implement &quot;Da Capo al fine&quot; or &quot;D.C. al fine&quot;, &#xD;
which is to repeat from the beginning up to the &quot;fine&quot; marker.&#xD;
&#xD;
this class assumes that only two target decorees are ever used.&#xD;
&#xD;
The is ToggleDecoratorSeqList that can be signaled to switch to the &#xD;
another target.   Be default, the target decoree (#0) remains the same even &#xD;
when it is accessed.  But after setFine() is called, the target decoree&#xD;
is switched to the #1 decoree (the &quot;fine&quot; target, usually an MTSeqList because&#xD;
it is the end of the piece).   After the #1 decoree is used, the target&#xD;
decoree is advanced to the next available decoree, which , for two decorees, &#xD;
would be back to the #0 decoree.  The class returns to default behavior then.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_mOCaO7EXEeeP95al6XTTTg">
            <body>ToggleDecoratorSeqList with controllable cycling</body>
          </ownedComment>
          <generalization xmi:id="_mL3P8bEXEeeP95al6XTTTg" general="_mH6kELEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNVPkLEXEeeP95al6XTTTg" name="isFine" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNVPkbEXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0XyrEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" specification="_mHmbAbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0Xy7EXEeeP95al6XTTTg" type="_mHmbALEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0XzLEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" specification="_mL2B0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0XzbEXEeeP95al6XTTTg" name="decorees" type="_mHu94LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN0XzrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN0Xz7EXEeeP95al6XTTTg" type="_mHmbALEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(decorees);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0X0LEXEeeP95al6XTTTg" name="setFine" specification="_mHnCE7EXEeeP95al6XTTTg">
            <language>java</language>
            <body>this.isFine = true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0-0LEXEeeP95al6XTTTg" name="execute" specification="_mMuyoLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0-0bEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN0-0rEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN0-07EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN0-1LEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (isFine) {&#xD;
			isFine = false;&#xD;
			this.setTargetToDecoree(1);&#xD;
			return super.execute(algo, params);&#xD;
		} else&#xD;
			return getTargetDecoree().execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0-1bEXEeeP95al6XTTTg" name="toString" specification="_mHnpILEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0-1rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mHmbAbEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" method="_mN0XyrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mHnCELEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mHnCEbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOCaPLEXEeeP95al6XTTTg">
              <body>Instantiates the class with two MTSeqList decorees.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mHnCErEXEeeP95al6XTTTg" type="_mHmbALEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mHnCE7EXEeeP95al6XTTTg" name="setFine" method="_mN0X0LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOCaPbEXEeeP95al6XTTTg">
              <body>Sets the system to use the &quot;fine&quot; decorator at the next execution.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_mHnpILEXEeeP95al6XTTTg" name="toString" method="_mN0-1bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mHnpIbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mL2B0LEXEeeP95al6XTTTg" name="FineToggleDecoratorSeqList" method="_mN0XzLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mL2o4bEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mL2o4rEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mL2o4LEXEeeP95al6XTTTg" name="decorees" type="_mHu94LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mL2o5bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mL2o5LEXEeeP95al6XTTTg" type="_mHmbALEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mMuyoLEXEeeP95al6XTTTg" name="execute" method="_mN0-0LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mMuyobEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMuyorEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMvZsrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMvZsLEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mHpeULEXEeeP95al6XTTTg" name="Header">
          <ownedComment xmi:id="_mOCaPrEXEeeP95al6XTTTg">
            <body>An abc Header.  Headers are identified by a one character &quot;id&quot; and&#xD;
can have an arbitrary string value. &lt;br/>&#xD;
Note that this class represents many different *types* of headers, &#xD;
each with its own id value.</body>
          </ownedComment>
          <ownedComment xmi:id="_mOCaP7EXEeeP95al6XTTTg">
            <body>A single Header class represents multiple, distinct header hosts.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNVPk7EXEeeP95al6XTTTg" name="_id" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNVPlbEXEeeP95al6XTTTg" name="_value" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mL33ALEXEeeP95al6XTTTg" client="_mHpeULEXEeeP95al6XTTTg" supplier="_mHshoLEXEeeP95al6XTTTg" contract="_mHshoLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0-17EXEeeP95al6XTTTg" name="Header" specification="_mHqFYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0-2LEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN0-2bEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN0-2rEXEeeP95al6XTTTg" type="_mHpeULEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>_id = id;&#xD;
		_value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0-27EXEeeP95al6XTTTg" name="execute" specification="_mMwAwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0-3LEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN0-3bEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN0-3rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN0-37EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_id, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN0-4LEXEeeP95al6XTTTg" name="getID" specification="_mHqscLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN0-4bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN1l4LEXEeeP95al6XTTTg" name="getValue" specification="_mHqscrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN1l4bEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN1l4rEXEeeP95al6XTTTg" name="toString" specification="_mHqsdLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN1l47EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id + &quot;:&quot; + _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mHqFYLEXEeeP95al6XTTTg" name="Header" method="_mN0-17EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mHqFY7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mHqFZLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOCaQLEXEeeP95al6XTTTg">
              <body>Create a header out of an id and value&#xD;
	 * &#xD;
	 * @param id    - one character corresponding to the abc header name&#xD;
	 * @param value - arbitrary string value of the header</body>
            </ownedComment>
            <ownedParameter xmi:id="_mHqFYbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mHqFYrEXEeeP95al6XTTTg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mHqFZbEXEeeP95al6XTTTg" type="_mHpeULEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mHqscLEXEeeP95al6XTTTg" name="getID" method="_mN0-4LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOCaQbEXEeeP95al6XTTTg">
              <body>Accessor for the id.&#xD;
	 * @return the _id</body>
            </ownedComment>
            <ownedParameter xmi:id="_mHqscbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mHqscrEXEeeP95al6XTTTg" name="getValue" method="_mN1l4LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOCaQrEXEeeP95al6XTTTg">
              <body>Accessor for the text value of this header.&#xD;
	 * @return the _value</body>
            </ownedComment>
            <ownedParameter xmi:id="_mHqsc7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mHqsdLEXEeeP95al6XTTTg" name="toString" method="_mN1l4rEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOCaQ7EXEeeP95al6XTTTg">
              <body>String representation of this header: &quot;id: text&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_mHqsdbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMwAwLEXEeeP95al6XTTTg" name="execute" method="_mN0-27EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mMwAwbEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMwAwrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMwn0rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMwn0LEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mHr6kLEXEeeP95al6XTTTg" name="INote">
          <ownedComment xmi:id="_mOCaRLEXEeeP95al6XTTTg">
            <body>Note interface for Notes and collections of Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_mOCaRbEXEeeP95al6XTTTg">
            <body>A generalized notion of a note</body>
          </ownedComment>
          <generalization xmi:id="_mL5FILEXEeeP95al6XTTTg" general="_mHshoLEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mHshoLEXEeeP95al6XTTTg" name="IPhrase">
          <ownedComment xmi:id="_mOCaRrEXEeeP95al6XTTTg">
            <body>Top level of a piece of abc music.  The generalized notion of a playable piece of music.</body>
          </ownedComment>
          <ownedComment xmi:id="_mOCaR7EXEeeP95al6XTTTg">
            <body>Abstract Host&#xD;
Each concrete host calls its associated case on the visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_mMxO4bEXEeeP95al6XTTTg" name="execute">
            <ownedParameter xmi:id="_mMxO4rEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMxO47EXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMx18rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMx18LEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mHtIsLEXEeeP95al6XTTTg" name="IPhraseVisitor">
          <ownedComment xmi:id="_mOCaSLEXEeeP95al6XTTTg">
            <body>Interface for a Phrase visitor.</body>
          </ownedComment>
          <ownedComment xmi:id="_mODBQLEXEeeP95al6XTTTg">
            <body>Abstract extended visitor.&#xD;
Supplies case behavior for every host.</body>
          </ownedComment>
          <ownedOperation xmi:id="_mMydALEXEeeP95al6XTTTg" name="caseAt">
            <ownedParameter xmi:id="_mMydAbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMydArEXEeeP95al6XTTTg" name="host" type="_mHshoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMydA7EXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMzEELEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMydBLEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mHuW0LEXEeeP95al6XTTTg" name="IPhraseVisitorCmd">
          <ownedComment xmi:id="_mODBQbEXEeeP95al6XTTTg">
            <body>The command used by APhraseVisitor that is associated with a host or hosts.&#xD;
@author rixner</body>
          </ownedComment>
          <ownedComment xmi:id="_mODBQrEXEeeP95al6XTTTg">
            <body>Abstract command used by APhraseVisitor.  Each command is associated with a particular host(s).</body>
          </ownedComment>
          <ownedOperation xmi:id="_mMzEErEXEeeP95al6XTTTg" name="apply">
            <ownedParameter xmi:id="_mMzEE7EXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMzEFLEXEeeP95al6XTTTg" name="host" type="_mHshoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMzEFbEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMzrIrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMzrILEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mHu94LEXEeeP95al6XTTTg" name="ISeqList">
          <ownedComment xmi:id="_mODBQ7EXEeeP95al6XTTTg">
            <body>Interface for sequential lists of IPhrases.</body>
          </ownedComment>
          <ownedComment xmi:id="_mODBRLEXEeeP95al6XTTTg">
            <body>A list of IPhrases&#xD;
e.g. an ordered sequence of Notes.</body>
          </ownedComment>
          <generalization xmi:id="_mL6TQLEXEeeP95al6XTTTg" general="_mHshoLEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mHvk8LEXEeeP95al6XTTTg" name="MTSeqList">
          <ownedComment xmi:id="_mODBRbEXEeeP95al6XTTTg">
            <body>An empty sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_mODBRrEXEeeP95al6XTTTg">
            <body>An empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNV2obEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNV2orEXEeeP95al6XTTTg" value="&quot;MTSeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNV2o7EXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_mHvk8LEXEeeP95al6XTTTg" isReadOnly="true" association="_mOXKUbEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNV2pLEXEeeP95al6XTTTg" value="new MTSeqList()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mL6TQbEXEeeP95al6XTTTg" client="_mHvk8LEXEeeP95al6XTTTg" supplier="_mHu94LEXEeeP95al6XTTTg" contract="_mHu94LEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN1l5LEXEeeP95al6XTTTg" name="execute" specification="_mM0SMLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN1l5bEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN1l5rEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN1l57EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN1l6LEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN1l6bEXEeeP95al6XTTTg" name="toString" specification="_mHwMBLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN1l6rEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;{}&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mHvk8bEXEeeP95al6XTTTg" name="MTSeqList" visibility="private">
            <eAnnotations xmi:id="_mHwMALEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mHwMAbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mHwMA7EXEeeP95al6XTTTg" type="_mHvk8LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mHwMBLEXEeeP95al6XTTTg" name="toString" method="_mN1l6bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mHwMBbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mM0SMLEXEeeP95al6XTTTg" name="execute" method="_mN1l5LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mM0SMbEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mM0SMrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mM05QLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mM0SM7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mHxaILEXEeeP95al6XTTTg" name="NESeqList">
          <ownedComment xmi:id="_mODBR7EXEeeP95al6XTTTg">
            <body>A non-empty (&quot;cons&quot;) sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_mODBSLEXEeeP95al6XTTTg">
            <body>A non-empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNWdsLEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNWdsbEXEeeP95al6XTTTg" value="&quot;NESeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNWdsrEXEeeP95al6XTTTg" name="_first" visibility="private" type="_mHshoLEXEeeP95al6XTTTg" association="_mOXxYbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNWdtLEXEeeP95al6XTTTg" name="_rest" visibility="private" type="_mHu94LEXEeeP95al6XTTTg" association="_mOYYcbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNXEwLEXEeeP95al6XTTTg" name="_toStringAlgo" visibility="private" isStatic="true" type="_mHtIsLEXEeeP95al6XTTTg" association="_mOY_gbEXEeeP95al6XTTTg"/>
          <interfaceRealization xmi:id="_mL66ULEXEeeP95al6XTTTg" client="_mHxaILEXEeeP95al6XTTTg" supplier="_mHu94LEXEeeP95al6XTTTg" contract="_mHu94LEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN1l67EXEeeP95al6XTTTg" name="NESeqList" specification="_mL7hYLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN1l7LEXEeeP95al6XTTTg" name="first" type="_mHshoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN1l7bEXEeeP95al6XTTTg" name="rest" type="_mHu94LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN1l7rEXEeeP95al6XTTTg" type="_mHxaILEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this._rest = rest;&#xD;
		this._first = first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN1l77EXEeeP95al6XTTTg" name="getFirst" specification="_mHyBMLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN1l8LEXEeeP95al6XTTTg" type="_mHshoLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN2M8LEXEeeP95al6XTTTg" name="getRest" specification="_mHyoQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN2M8bEXEeeP95al6XTTTg" type="_mHu94LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _rest;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN2M8rEXEeeP95al6XTTTg" name="execute" specification="_mM1gULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN2M87EXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN2M9LEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN2M9bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN2M9rEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN2M97EXEeeP95al6XTTTg" name="setToStringAlgo" specification="_mL8IcLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN2M-LEXEeeP95al6XTTTg" name="stringAlgo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>_toStringAlgo = stringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN2M-bEXEeeP95al6XTTTg" name="getToStringAlgo" specification="_mHyoQbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN2M-rEXEeeP95al6XTTTg" type="_mHtIsLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return _toStringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN2M-7EXEeeP95al6XTTTg" name="toString" specification="_mHzPULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN2M_LEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) _rest.execute(_toStringAlgo, &quot;{&quot; + _first.toString());&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mHyBMLEXEeeP95al6XTTTg" name="getFirst" method="_mN1l77EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBSrEXEeeP95al6XTTTg">
              <body>Accessor method for the first element&#xD;
	 * @return the IPhrase that is the first element of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_mL7hZrEXEeeP95al6XTTTg" type="_mHshoLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mHyoQLEXEeeP95al6XTTTg" name="getRest" method="_mN2M8LEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBS7EXEeeP95al6XTTTg">
              <body>Accessor method for the rest of the lsit&#xD;
	 * @return the rest of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_mL7hZ7EXEeeP95al6XTTTg" type="_mHu94LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mHyoQbEXEeeP95al6XTTTg" name="getToStringAlgo" isStatic="true" method="_mN2M-bEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBTbEXEeeP95al6XTTTg">
              <body>Getter for the _toStringAlgo helper.  Only for use internally inside this package&#xD;
	 * so ToggleDecoratorSeqList and FineToggleDecoratorSeqList can use the same visitor.&#xD;
	 * @return the toStringAlgo helper visitor</body>
            </ownedComment>
            <ownedParameter xmi:id="_mL8IcrEXEeeP95al6XTTTg" type="_mHtIsLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mHzPULEXEeeP95al6XTTTg" name="toString" method="_mN2M-7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBTrEXEeeP95al6XTTTg">
              <body>Run a visitor over the list to convert it to a String.  &#xD;
	 * Delegates to the rest of the list using the helper algo, with the accumulator &#xD;
	 * (params[0]) set to &quot;{&quot;+_first.toString().  &#xD;
	 * @return &quot;{a, b, c, d}&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_mHzPUbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mL7hYLEXEeeP95al6XTTTg" name="NESeqList" method="_mN1l67EXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mL7hY7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mL7hZLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mODBSbEXEeeP95al6XTTTg">
              <body>Cons an IPhrase to a Sequence List.&#xD;
	 * @param first The first element of the sequence&#xD;
	 * @param rest The rest of the sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_mL7hYbEXEeeP95al6XTTTg" name="first" type="_mHshoLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mL7hYrEXEeeP95al6XTTTg" name="rest" type="_mHu94LEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mL7hZbEXEeeP95al6XTTTg" type="_mHxaILEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mL8IcLEXEeeP95al6XTTTg" name="setToStringAlgo" isStatic="true" method="_mN2M97EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBTLEXEeeP95al6XTTTg">
              <body>Setter for the _toStringAlgo helper.  This non-typical method is provided solely &#xD;
	 * for the purpose of enabling the student to install their toStringAlgo into the &#xD;
	 * read-only provided code.&#xD;
	 * @param stringAlgo The helper algo to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mL8IcbEXEeeP95al6XTTTg" name="stringAlgo" type="_mHtIsLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mM1gULEXEeeP95al6XTTTg" name="execute" method="_mN2M8rEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mM1gUbEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mM1gUrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mM1gVbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mM1gU7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mH1EgLEXEeeP95al6XTTTg" name="Note">
          <ownedComment xmi:id="_mODBT7EXEeeP95al6XTTTg">
            <body>Basic class representing musical Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_mODBULEXEeeP95al6XTTTg">
            <body>A playable note or rest.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNXEwrEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNXEw7EXEeeP95al6XTTTg" value="&quot;Note&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNXExLEXEeeP95al6XTTTg" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNXExbEXEeeP95al6XTTTg" value="'Z'"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNXr0LEXEeeP95al6XTTTg" name="octave">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNXr0bEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNXr0rEXEeeP95al6XTTTg" name="accidental" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNXr07EXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNXr1LEXEeeP95al6XTTTg" name="duration">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNXr1bEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNXr1rEXEeeP95al6XTTTg" name="isNatural" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNXr17EXEeeP95al6XTTTg" value="false"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mL9WkLEXEeeP95al6XTTTg" client="_mH1EgLEXEeeP95al6XTTTg" supplier="_mHr6kLEXEeeP95al6XTTTg" contract="_mHr6kLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN20ALEXEeeP95al6XTTTg" name="Note" specification="_mH2SoLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN20AbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN20ArEXEeeP95al6XTTTg" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN20A7EXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN20BLEXEeeP95al6XTTTg" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN20BbEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN20BrEXEeeP95al6XTTTg" type="_mH1EgLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setName(name);&#xD;
		setOctave(octave);&#xD;
		setAccidental(accidental);&#xD;
		setDuration(duration);&#xD;
		setIsNatural(isNatural);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN20B7EXEeeP95al6XTTTg" name="toString" specification="_mH2SqbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN20CLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String s = &quot;(&quot;;&#xD;
		s += Character.toString(name);&#xD;
		int a = accidental;&#xD;
		if (isNatural) {&#xD;
			s += &quot;n&quot;;&#xD;
		}&#xD;
		while (a &lt; 0) {&#xD;
			s += &quot;b&quot;;&#xD;
			a++;&#xD;
		}&#xD;
		while (a > 0) {&#xD;
			s += &quot;#&quot;;&#xD;
			a--;&#xD;
		}&#xD;
		s += &quot;, &quot; + Integer.toString(octave) + &quot;, &quot;;&#xD;
		s += String.format(&quot;%3.2f&quot;, duration);&#xD;
		s += &quot;)&quot;;&#xD;
&#xD;
		return s;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN20CbEXEeeP95al6XTTTg" name="execute" specification="_mM2ucLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN20CrEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN20C7EXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN20DLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN20DbEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN20DrEXEeeP95al6XTTTg" name="setName" specification="_mH25sbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN20D7EXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>switch (name) {&#xD;
		case 'a':&#xD;
		case 'A':&#xD;
			this.name = 'A';&#xD;
			break;&#xD;
&#xD;
		case 'b':&#xD;
		case 'B':&#xD;
			this.name = 'B';&#xD;
			break;&#xD;
&#xD;
		case 'c':&#xD;
		case 'C':&#xD;
			this.name = 'C';&#xD;
			break;&#xD;
&#xD;
		case 'd':&#xD;
		case 'D':&#xD;
			this.name = 'D';&#xD;
			break;&#xD;
&#xD;
		case 'e':&#xD;
		case 'E':&#xD;
			this.name = 'E';&#xD;
			break;&#xD;
&#xD;
		case 'f':&#xD;
		case 'F':&#xD;
			this.name = 'F';&#xD;
			break;&#xD;
&#xD;
		case 'g':&#xD;
		case 'G':&#xD;
			this.name = 'G';&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			this.name = 'Z';&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN20ELEXEeeP95al6XTTTg" name="setAccidental" specification="_mH25s7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN20EbEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.accidental = accidental;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN20ErEXEeeP95al6XTTTg" name="getIsNatural" specification="_mH3gwbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN20E7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return isNatural;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN3bELEXEeeP95al6XTTTg" name="setIsNatural" specification="_mH3gw7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN3bEbEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.isNatural = isNatural;&#xD;
		if (isNatural)&#xD;
			accidental = 0;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mH2SoLEXEeeP95al6XTTTg" name="Note" method="_mN20ALEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mH2SprEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mH2Sp7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mODBUbEXEeeP95al6XTTTg">
              <body>Constructor for the class&#xD;
	 * @param name  The name of the note&#xD;
	 * @param octave The octave of the note w.r.t. middle C.  Zero = same octave as middle C.&#xD;
	 * @param accidental accidental setting sharp &amp;gt; 0, flat &amp;lt; 0&#xD;
	 * @param duration duration of note&#xD;
	 * @param isNatural flag to override key signature.  True if note should be natural, overriding key signature.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mH2SobEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mH2SorEXEeeP95al6XTTTg" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mH2So7EXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mH2SpLEXEeeP95al6XTTTg" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mH2SpbEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mH2SqLEXEeeP95al6XTTTg" type="_mH1EgLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mH2SqbEXEeeP95al6XTTTg" name="toString" method="_mN20B7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBUrEXEeeP95al6XTTTg">
              <body>Returns a string representation of the Note  &#xD;
	 * @return &quot;(name, octave, duration)&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_mH25sLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mH25sbEXEeeP95al6XTTTg" name="setName" method="_mN20DrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBU7EXEeeP95al6XTTTg">
              <body>Accessor to set the name of the note&#xD;
	 * @param name - the name to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_mH25srEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mH25s7EXEeeP95al6XTTTg" name="setAccidental" method="_mN20ELEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBVLEXEeeP95al6XTTTg">
              <body>Accessor to set the accidental value&#xD;
	 * @param accidental - the accidental to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_mH3gwLEXEeeP95al6XTTTg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mH3gwbEXEeeP95al6XTTTg" name="getIsNatural" method="_mN20ErEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBVbEXEeeP95al6XTTTg">
              <body>Accessor for isNatural flag&#xD;
	 * @return isNatural flag setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_mH3gwrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mH3gw7EXEeeP95al6XTTTg" name="setIsNatural" method="_mN3bELEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODBVrEXEeeP95al6XTTTg">
              <body>Settor for isNatural flag.  Accidentals will be set to zero if isNatural is true.&#xD;
	 * @param isNatural  New isNatural setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_mH3gxLEXEeeP95al6XTTTg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mM2ucLEXEeeP95al6XTTTg" name="execute" method="_mN20CbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mM2ucbEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mM2ucrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mM3VgbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mM2uc7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mH5V8LEXEeeP95al6XTTTg" name="NoteCollection" isAbstract="true">
          <ownedComment xmi:id="_mODBV7EXEeeP95al6XTTTg">
            <body>A collection of multiple notes</body>
          </ownedComment>
          <ownedComment xmi:id="_mODBWLEXEeeP95al6XTTTg">
            <body>A collection of Notes</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNYS4bEXEeeP95al6XTTTg" name="notes" visibility="protected" type="_mH1EgLEXEeeP95al6XTTTg" association="_mOZmkbEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNYS4rEXEeeP95al6XTTTg" value="*"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mL-ksLEXEeeP95al6XTTTg" client="_mH5V8LEXEeeP95al6XTTTg" supplier="_mHr6kLEXEeeP95al6XTTTg" contract="_mHr6kLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN3bErEXEeeP95al6XTTTg" name="NoteCollection" specification="_mL_LwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN3bE7EXEeeP95al6XTTTg" name="notes" type="_mH1EgLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN3bFLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN3bFbEXEeeP95al6XTTTg" type="_mH5V8LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.notes = notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN3bFrEXEeeP95al6XTTTg" name="getNotes" specification="_mH5V8bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN3bF7EXEeeP95al6XTTTg" type="_mH1EgLEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN3bGLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mH5V8bEXEeeP95al6XTTTg" name="getNotes" method="_mN3bFrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoULEXEeeP95al6XTTTg">
              <body>Accessor for the array of notes in this collection&#xD;
	 * @return the array of notes</body>
            </ownedComment>
            <ownedParameter xmi:id="_mH59ALEXEeeP95al6XTTTg" type="_mH1EgLEXEeeP95al6XTTTg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mH59AbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mL_LwLEXEeeP95al6XTTTg" name="NoteCollection" method="_mN3bErEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mL_LwrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mL_Lw7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mL_LwbEXEeeP95al6XTTTg" name="notes" type="_mH1EgLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mL_LxrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mL_LxbEXEeeP95al6XTTTg" type="_mH5V8LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mH6kELEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList">
          <ownedComment xmi:id="_mODoUbEXEeeP95al6XTTTg">
            <body>Multiple Decorator ISeqList where the active decoree (the &quot;target&quot;) is&#xD;
toggled (cycled, actually) through all the available decorees.   &#xD;
This is arguably a State Design Pattern where each decoree is &#xD;
considered to be another state of the system.&#xD;
This is used to implement repeats where the first time through, the notes are linked&#xD;
back to a repeat start (decoree #0) but the next time through, the next note is the one&#xD;
after the repeat (decoree #1).&#xD;
&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_mODoUrEXEeeP95al6XTTTg">
            <body>Decorated ISeqList that transparently cycles through multiple targets (decorees)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNY58LEXEeeP95al6XTTTg" name="decorees" visibility="private" type="_mHu94LEXEeeP95al6XTTTg" association="_mOaNobEXEeeP95al6XTTTg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNY58bEXEeeP95al6XTTTg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNY587EXEeeP95al6XTTTg" value="{ MTSeqList.Singleton, MTSeqList.Singleton }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNY59bEXEeeP95al6XTTTg" name="targetIdx" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNY59rEXEeeP95al6XTTTg" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mL_y0LEXEeeP95al6XTTTg" client="_mH6kELEXEeeP95al6XTTTg" supplier="_mHu94LEXEeeP95al6XTTTg" contract="_mHu94LEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN3bGbEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList" specification="_mL_y0bEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN3bGrEXEeeP95al6XTTTg" name="decorees" type="_mHu94LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN3bG7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN3bHLEXEeeP95al6XTTTg" type="_mH6kELEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>setDecorees(decorees);&#xD;
		setTargetToDecoree(0);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN3bHbEXEeeP95al6XTTTg" name="setDecorees" specification="_mMAZ5rEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4CILEXEeeP95al6XTTTg" name="decorees" type="_mHu94LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN4CIbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>this.decorees = decorees;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4CIrEXEeeP95al6XTTTg" name="setDecoree" specification="_mMBA9LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4CI7EXEeeP95al6XTTTg" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN4CJLEXEeeP95al6XTTTg" name="decoree" type="_mHu94LEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>this.decorees[idx] = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4CJbEXEeeP95al6XTTTg" name="setTargetToDecoree" specification="_mH8ZQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4CJrEXEeeP95al6XTTTg" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.targetIdx = targetIdx;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4CJ7EXEeeP95al6XTTTg" name="getTargetDecoree" specification="_mH8ZQrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4CKLEXEeeP95al6XTTTg" type="_mHu94LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return decorees[targetIdx];&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4CKbEXEeeP95al6XTTTg" name="execute" specification="_mM4joLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4CKrEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN4CK7EXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN4CLLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN4CLbEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>ISeqList target = decorees[targetIdx++];&#xD;
		if (targetIdx >= decorees.length)&#xD;
			targetIdx = 0; // This must be set before the delegate because it may be needed before the recursion returns.&#xD;
		return target.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4CLrEXEeeP95al6XTTTg" name="toString" specification="_mH8ZQ7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4CL7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mH7LILEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList">
            <eAnnotations xmi:id="_mH7yMLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mH7yMbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mH7yM7EXEeeP95al6XTTTg" type="_mH6kELEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mH8ZQLEXEeeP95al6XTTTg" name="setTargetToDecoree" method="_mN4CJbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoVLEXEeeP95al6XTTTg">
              <body>Used to explicitly set the target (active) decoree if needed.&#xD;
	 * @param targetIdx  the index of the target decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_mH8ZQbEXEeeP95al6XTTTg" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mH8ZQrEXEeeP95al6XTTTg" name="getTargetDecoree" method="_mN4CJ7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoVbEXEeeP95al6XTTTg">
              <body>Accessor for the current target (active) decoree&#xD;
	 * @return  The current target (active) decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMBoAbEXEeeP95al6XTTTg" type="_mHu94LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mH8ZQ7EXEeeP95al6XTTTg" name="toString" method="_mN4CLrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mH9AULEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mL_y0bEXEeeP95al6XTTTg" name="ToggleDecoratorSeqList" method="_mN3bGbEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mMAZ4LEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mMAZ4bEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mL_y0rEXEeeP95al6XTTTg" name="decorees" type="_mHu94LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMAZ5LEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMAZ47EXEeeP95al6XTTTg" type="_mH6kELEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mMAZ5rEXEeeP95al6XTTTg" name="setDecorees" method="_mN3bHbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mMBA8LEXEeeP95al6XTTTg" name="decorees" type="_mHu94LEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMBA8rEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMBA9LEXEeeP95al6XTTTg" name="setDecoree" method="_mN4CIrEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mODoU7EXEeeP95al6XTTTg">
              <body>Setter methods used to set a particular decoree.   &#xD;
	 * The specified index must already exist.&#xD;
	 * @param idx The index of the decoree to replace&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMBA9bEXEeeP95al6XTTTg" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMBoALEXEeeP95al6XTTTg" name="decoree" type="_mHu94LEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mM4joLEXEeeP95al6XTTTg" name="execute" method="_mN4CKbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mM4jobEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mM4jorEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mM4jpbEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mM4jo7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mH-1gLEXEeeP95al6XTTTg" name="Triplet">
          <ownedComment xmi:id="_mODoVrEXEeeP95al6XTTTg">
            <body>A musical triplet.  The three notes should be played with 2/3 of their&#xD;
indicated duration.</body>
          </ownedComment>
          <ownedComment xmi:id="_mODoV7EXEeeP95al6XTTTg">
            <body>A set of 3 notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_mMC2JbEXEeeP95al6XTTTg" general="_mH5V8LEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNZhAbEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNZhArEXEeeP95al6XTTTg" value="&quot;Triplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4pMLEXEeeP95al6XTTTg" name="Triplet" specification="_mMCPELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4pMbEXEeeP95al6XTTTg" name="n1" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN4pMrEXEeeP95al6XTTTg" name="n2" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN4pM7EXEeeP95al6XTTTg" name="n3" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN4pNLEXEeeP95al6XTTTg" type="_mH-1gLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(n1, n2, n3);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4pNbEXEeeP95al6XTTTg" name="execute" specification="_mM5xwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4pNrEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN4pN7EXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN4pOLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN4pObEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4pOrEXEeeP95al6XTTTg" name="toString" specification="_mH_ckLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4pO7EXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Triplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mH_ckLEXEeeP95al6XTTTg" name="toString" method="_mN4pOrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mH_ckbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMCPELEXEeeP95al6XTTTg" name="Triplet" method="_mN4pMLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mMC2IrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mMC2I7EXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mMCPEbEXEeeP95al6XTTTg" name="n1" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMC2ILEXEeeP95al6XTTTg" name="n2" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMC2IbEXEeeP95al6XTTTg" name="n3" type="_mH1EgLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMC2JLEXEeeP95al6XTTTg" type="_mH-1gLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mM5xwLEXEeeP95al6XTTTg" name="execute" method="_mN4pNbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mM5xwbEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mM5xwrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mM6Y0LEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mM5xw7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mIAqsLEXEeeP95al6XTTTg" name="Tuplet">
          <ownedComment xmi:id="_mODoWLEXEeeP95al6XTTTg">
            <body>Class that represents a tuplet, a series of notes played in a fraction of their normal total time.&#xD;
The exact fraction depends on the meter and the number of notes in the tuplet.&#xD;
A triplet is a specific type of tuplet.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_mODoWbEXEeeP95al6XTTTg">
            <body>A arbitrary set of notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_mMErULEXEeeP95al6XTTTg" general="_mH5V8LEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNaIELEXEeeP95al6XTTTg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNaIEbEXEeeP95al6XTTTg" value="&quot;Tuplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4pPLEXEeeP95al6XTTTg" name="Tuplet" specification="_mMDdMLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4pPbEXEeeP95al6XTTTg" name="notes" type="_mH1EgLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN4pPrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN4pP7EXEeeP95al6XTTTg" type="_mIAqsLEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN4pQLEXEeeP95al6XTTTg" name="execute" specification="_mM6_4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN4pQbEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN4pQrEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN4pQ7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN4pRLEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN5QQLEXEeeP95al6XTTTg" name="toString" specification="_mIBRwLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN5QQbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Tuplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mIBRwLEXEeeP95al6XTTTg" name="toString" method="_mN5QQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mIBRwbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mMDdMLEXEeeP95al6XTTTg" name="Tuplet" method="_mN4pPLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mMEEQLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mMEEQbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mMDdMbEXEeeP95al6XTTTg" name="notes" type="_mH1EgLEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMEERLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMEEQ7EXEeeP95al6XTTTg" type="_mIAqsLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mM6_4LEXEeeP95al6XTTTg" name="execute" method="_mN4pQLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mM6_4bEXEeeP95al6XTTTg" name="algo" type="_mHtIsLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mM6_4rEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mM6_5bEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mM6_47EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOV8MbEXEeeP95al6XTTTg" name="" memberEnd="_mOV8MrEXEeeP95al6XTTTg _mNTaZbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOV8MrEXEeeP95al6XTTTg" name="" type="_mHfGQLEXEeeP95al6XTTTg" association="_mOV8MbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOWjQLEXEeeP95al6XTTTg" name="" memberEnd="_mOWjQbEXEeeP95al6XTTTg _mNUBcbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOWjQbEXEeeP95al6XTTTg" name="" type="_mHfGQLEXEeeP95al6XTTTg" association="_mOWjQLEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOWjQ7EXEeeP95al6XTTTg" name="" memberEnd="_mOWjRLEXEeeP95al6XTTTg _mNUogrEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOWjRLEXEeeP95al6XTTTg" name="" type="_mHj-wLEXEeeP95al6XTTTg" association="_mOWjQ7EXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOXKUbEXEeeP95al6XTTTg" name="" memberEnd="_mOXKUrEXEeeP95al6XTTTg _mNV2o7EXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOXKUrEXEeeP95al6XTTTg" name="" type="_mHvk8LEXEeeP95al6XTTTg" association="_mOXKUbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOXxYbEXEeeP95al6XTTTg" name="" memberEnd="_mOXxYrEXEeeP95al6XTTTg _mNWdsrEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOXxYrEXEeeP95al6XTTTg" name="" type="_mHxaILEXEeeP95al6XTTTg" association="_mOXxYbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOYYcbEXEeeP95al6XTTTg" name="" memberEnd="_mOYYcrEXEeeP95al6XTTTg _mNWdtLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOYYcrEXEeeP95al6XTTTg" name="" type="_mHxaILEXEeeP95al6XTTTg" association="_mOYYcbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOY_gbEXEeeP95al6XTTTg" name="" memberEnd="_mOY_grEXEeeP95al6XTTTg _mNXEwLEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOY_grEXEeeP95al6XTTTg" name="" type="_mHxaILEXEeeP95al6XTTTg" association="_mOY_gbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOZmkbEXEeeP95al6XTTTg" name="" memberEnd="_mOZmkrEXEeeP95al6XTTTg _mNYS4bEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOZmkrEXEeeP95al6XTTTg" name="" type="_mH5V8LEXEeeP95al6XTTTg" association="_mOZmkbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOaNobEXEeeP95al6XTTTg" name="" memberEnd="_mOaNorEXEeeP95al6XTTTg _mNY58LEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOaNorEXEeeP95al6XTTTg" name="" type="_mH6kELEXEeeP95al6XTTTg" association="_mOaNobEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mFxPALEXEeeP95al6XTTTg" name="token">
        <packagedElement xmi:type="uml:Package" xmi:id="_mFxPAbEXEeeP95al6XTTTg" name="tokenizer">
          <packagedElement xmi:type="uml:Class" xmi:id="_mIoVwrEXEeeP95al6XTTTg" name="ABCTokenizer">
            <ownedComment xmi:id="_mOE2ebEXEeeP95al6XTTTg">
              <body>Tokenizer for the abc music language. getNextToken() returns next Token in&#xD;
stream. Does not recognize all possible language constructs and symbols&#xD;
(returned as &quot;?&quot; token).  Tokens are the atomic psemantic pieces of a language,&#xD;
such as Note, repeat start, measure, chord, etc.   The token ids (names) returned are: &lt;br/>&#xD;
 &lt;br/>&#xD;
 EOF - end of file&lt;br/>&#xD;
 &quot;|:&quot; - repeat start&lt;br/>&#xD;
 &quot;:|&quot; - repeat end&lt;br/>&#xD;
 &quot;|1&quot; - first repeat start&lt;br/>&#xD;
 &quot;[1&quot; - alternative first repeat start&lt;br/>&#xD;
 &quot;|2&quot; - second repeat start&lt;br/>&#xD;
 &quot;[2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;[|&quot; - thick-thin double bar line&lt;br/>&#xD;
 &quot;|]&quot; - thin-thick double bar line&lt;br/>&#xD;
 &quot;:|2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;||&quot; - double measure bar&lt;br/>&#xD;
 &quot;::&quot; - short hand for repeat end-start &quot;:||:&quot;&lt;br/>&#xD;
 &quot;|&quot; - Measure bar&lt;br/>&#xD;
 &quot;[&quot;) - Chord start&lt;br/>&#xD;
 &quot;]&quot; - Chord end&lt;br/>&#xD;
 &quot;-&quot; - tie&lt;br/>&#xD;
 &quot;&amp;lt;&quot; - the previous note  is dotted, the next note halved&lt;br/> &#xD;
 &quot;&amp;gt;&quot; - the previous note is halved, the next dotted&lt;br/>&#xD;
 &quot;{&quot; - Grace begin&lt;br/>&#xD;
 &quot;}&quot; - Grace end&lt;br/>&#xD;
 &quot;%&quot; - Comment&lt;br/>&#xD;
 &quot;[Header ID]&quot; - where [Header ID] is a single letter from {ABCDEFGHIKLMNOPQRSTWXZ} &lt;br/> &#xD;
 &quot;Note&quot; - a single note whose lexeme contains the name, accidentals, octave and duration&lt;br/>&#xD;
 &quot;Tuplet&quot; - the lexeme is the number of subsequent Notes comprise this tuplet. &lt;br/>&#xD;
 &quot;Quote&quot; - lexeme is the quoted text &lt;br/>&#xD;
 &quot;?&quot; - unknown language construct. &lt;br/>&#xD;
  &lt;br/>&#xD;
References: &lt;br/>&#xD;
&lt;a href =&#xD;
&quot;http://download.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html&quot;&#xD;
>java.util.regex.Pattern for regex guide&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://asciitable.com/&quot;>ASCII table for codes&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://abcnotation.com/abc2mtex/abc.txt&quot;>abc music standard 1.6&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_mMPDYbEXEeeP95al6XTTTg" general="_mItOQLEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_mNiD47EXEeeP95al6XTTTg" name="keywords1" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_mNiq8rEXEeeP95al6XTTTg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNiq8LEXEeeP95al6XTTTg" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_mNiq87EXEeeP95al6XTTTg" name="keywords2" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_mNjSAbEXEeeP95al6XTTTg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNiq9LEXEeeP95al6XTTTg" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_mNjSArEXEeeP95al6XTTTg" name="keywordsVector" visibility="private" type="_mNDiwLEXEeeP95al6XTTTg" association="_mOftM7EXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNj5EbEXEeeP95al6XTTTg" value="new Vector&lt;Map&lt;String, String>>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_mNj5E7EXEeeP95al6XTTTg" name="tokFac" visibility="private" type="_mIjdQLEXEeeP95al6XTTTg" association="_mOgUQbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNj5FLEXEeeP95al6XTTTg" value="TokenFactory.Singleton"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_mNkgIbEXEeeP95al6XTTTg" name="stack" visibility="private" type="_mMosALEXEeeP95al6XTTTg" association="_mOg7UbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNkgI7EXEeeP95al6XTTTg" value="new Stack&lt;Token>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_mNlHMbEXEeeP95al6XTTTg" name="ACCIDENTALS" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNlHMrEXEeeP95al6XTTTg" value="&quot;_=^&quot;"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_mMOcULEXEeeP95al6XTTTg" client="_mIoVwrEXEeeP95al6XTTTg" supplier="_mIsAJLEXEeeP95al6XTTTg" contract="_mIsAJLEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN9huLEXEeeP95al6XTTTg" name="ABCTokenizer" specification="_mIo80LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN9hubEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mN9hurEXEeeP95al6XTTTg" type="_mIoVwrEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>super(inputFileName);&#xD;
&#xD;
		// note: &quot;\\7C&quot; => &quot;|&quot;, &quot;\\x5B&quot; => &quot;[&quot;, &quot;\\x5D&quot; => &quot;]&quot;&#xD;
		// &quot;\\x7B&quot; => &quot;{&quot;,  &quot;\\x7D&quot; => &quot;}&quot;&#xD;
&#xD;
		// load the regex->keyword mapping&#xD;
		keywords1.put(&quot;\\x7C:&quot;, &quot;|:&quot;); // repeat start&#xD;
		keywords1.put(&quot;:\\x7C&quot;, &quot;:|&quot;); // repeat end&#xD;
		keywords1.put(&quot;\\x7C1&quot;, &quot;|1&quot;); // first repeat start&#xD;
		keywords1.put(&quot;\\x5B1&quot;, &quot;[1&quot;); // alternative first repeat start&#xD;
		keywords1.put(&quot;\\x7C2&quot;, &quot;|2&quot;); // second repeat start&#xD;
		keywords1.put(&quot;\\x5B2&quot;, &quot;[2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x5B\\7C&quot;, &quot;[|&quot;); // thick-thin double bar line&#xD;
		keywords1.put(&quot;\\7C\\x5D&quot;, &quot;|]&quot;); // thin-thick double bar line&#xD;
		keywords1.put(&quot;:\\x7C2&quot;, &quot;:|2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x7C\\x7C&quot;, &quot;||&quot;); // double measure bar&#xD;
		keywords1.put(&quot;::&quot;, &quot;::&quot;); // short hand for repeat end-start &quot;:||:&quot;&#xD;
&#xD;
		// Should these be separated out into a different map because order of&#xD;
		// search is important?&#xD;
		keywords2.put(&quot;\\x7C&quot;, &quot;|&quot;); // Measure bar&#xD;
		keywords2.put(&quot;\\x5B&quot;, &quot;[&quot;); // Chord start&#xD;
		keywords2.put(&quot;\\x5D&quot;, &quot;]&quot;); // Chord end&#xD;
		keywords2.put(&quot;-&quot;, &quot;-&quot;); // tie&#xD;
		keywords2.put(&quot;>&quot;, &quot;>&quot;); // the previous note  is dotted, the next note halved &#xD;
		keywords2.put(&quot;&lt;&quot;, &quot;&lt;&quot;); // the previous note is halved, the next dotted&#xD;
		keywords2.put(&quot;\\x7B&quot;, &quot;{&quot;); // Grace begin&#xD;
		keywords2.put(&quot;\\x7D&quot;, &quot;}&quot;); // Grace end		&#xD;
&#xD;
		keywordsVector.add(keywords1);&#xD;
		keywordsVector.add(keywords2);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN9hu7EXEeeP95al6XTTTg" name="getNextToken" specification="_mIpj47EXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN9hvLEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN9hvbEXEeeP95al6XTTTg" name="putBack" specification="_mMOcUrEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN9hvrEXEeeP95al6XTTTg" name="t" type="_mIkrY7EXEeeP95al6XTTTg"/>
              <language>java</language>
              <body>stack.push(t);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN-IwLEXEeeP95al6XTTTg" name="makeNextToken" specification="_mIpj5LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN-IwbEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>String sTok = this.getNextStringToken();&#xD;
		if (null == sTok)&#xD;
			return tokFac.makeToken(&quot;EOF&quot;, &quot;EOF&quot;); // EOF returns as null&#xD;
		if (sTok.equals(&quot;\n&quot;))&#xD;
			return makeNextToken(); // discard bare LF's.&#xD;
&#xD;
		// search for first keywords, pushing extra tokens back into tokenizer's&#xD;
		// stack.&#xD;
		for (Map&lt;String, String> keywords : keywordsVector) {&#xD;
			for (String kw : keywords.keySet()) {&#xD;
				if (keywords.get(kw).equals(sTok))&#xD;
					return tokFac.makeToken(sTok, sTok);&#xD;
				String[] split = sTok.split(kw, -1);&#xD;
				if (split.length > 1) {&#xD;
&#xD;
					for (int i = split.length - 1; i > 0; i--) {&#xD;
						if (!split[i].equals(&quot;&quot;)) {&#xD;
							this.putStringBack(split[i]);&#xD;
						}&#xD;
						this.putStringBack(keywords.get(kw));&#xD;
					}&#xD;
					if (!split[0].equals(&quot;&quot;)) {&#xD;
						this.putStringBack(split[0]);&#xD;
					}&#xD;
					return makeNextToken();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find header tokens, which are the whole line.&#xD;
		int idx = sTok.indexOf(&quot;:&quot;);&#xD;
		if (1 == idx) {&#xD;
			String header = sTok;&#xD;
			String next = super.getNextStringToken();&#xD;
			while (!next.equals(&quot;\n&quot;)) {&#xD;
				header += &quot; &quot; + next;&#xD;
				next = this.getNextStringToken();&#xD;
			}&#xD;
			return tokFac&#xD;
					.makeToken(header.substring(0, 1), header.substring(2));&#xD;
		}&#xD;
&#xD;
		// Find comment, which is the rest of the line.&#xD;
		idx = sTok.indexOf(&quot;%&quot;);&#xD;
		if (-1 != idx) {&#xD;
			// Comment in line somewhere&#xD;
			if (0 == idx) { // comment is at beginning of line&#xD;
				String comment = sTok;&#xD;
				String next = super.getNextStringToken();&#xD;
				while (!next.equals(&quot;\n&quot;)) { // get the rest of the line&#xD;
					comment += next;&#xD;
					// get the next string token &#xD;
					next = this.getNextStringToken();&#xD;
				}&#xD;
				return tokFac.makeToken(&quot;%&quot;, comment.substring(1));&#xD;
			} else { // comment is in middle of the line&#xD;
				// push the entire comment, incl. the comment char, back into&#xD;
				// the tokenizer b/c it can't be dealt with yet.&#xD;
				this.putStringBack(sTok.substring(idx));&#xD;
				// push the tokens before the comment back into the tokenizer&#xD;
				// so that they can be then processed when pulled back out.&#xD;
				this.putStringBack(sTok.substring(0, idx));&#xD;
				return makeNextToken(); // Process whatever is in the tokenizer&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find tuplet&#xD;
		if ('(' == sTok.charAt(0)) {&#xD;
			// Tuplet found&#xD;
			int n = Integer.parseInt(sTok.substring(1, 2)); // get tuplet size&#xD;
			this.putStringBack(sTok.substring(2)); // push rest back into tokenizer&#xD;
			return tokFac.makeToken(&quot;Tuplet&quot;, &quot;&quot; + n);&#xD;
		}&#xD;
&#xD;
		if (Character.isLetter(sTok.charAt(0))&#xD;
				|| ACCIDENTALS.contains(sTok.subSequence(0, 1))) {&#xD;
			// Start of Note string found.&#xD;
			return tokFac.makeToken(&quot;Note&quot;, parseNote(sTok));&#xD;
		}&#xD;
&#xD;
		if ('\&quot;' == sTok.charAt(0)) {&#xD;
			// Quoted string found&#xD;
			return tokFac.makeToken(&quot;Quote&quot;, parseQuote(&quot;&quot;, sTok.substring(1)));&#xD;
		}&#xD;
&#xD;
		if (sTok.equals(&quot;\\&quot;)) {&#xD;
			// abc line break detected.  Ignore.&#xD;
			return makeNextToken();&#xD;
		}&#xD;
&#xD;
		// Unknown token&#xD;
		return tokFac.makeToken(&quot;?&quot;, sTok);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN-IwrEXEeeP95al6XTTTg" name="parseNote" specification="_mIqK8LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN-Iw7EXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mN-IxLEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>int i = 1;&#xD;
		// look for pre-note name characters&#xD;
		if (!Character.isLetter(sTok.charAt(0))) {&#xD;
			for (; i &lt; sTok.length(); i++) {&#xD;
				if (sTok.charAt(i) != sTok.charAt(0)) {&#xD;
					i++; // move to next char&#xD;
					break; // This assumes that this char is a letter which&#xD;
							// follows the accidentals&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (; i &lt; sTok.length(); i++) {&#xD;
			// look for non-post-note name characters.&#xD;
			if (!(Character.isDigit(sTok.charAt(i)) || &quot;,/'&quot;.contains(sTok&#xD;
					.subSequence(i, i + 1)))) {&#xD;
				putStringBack(sTok.substring(i)); // put the rest back in the&#xD;
													// tokenizer.&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		// i = end of note string&#xD;
		return sTok.substring(0, i);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN-IxbEXEeeP95al6XTTTg" name="parseQuote" specification="_mIqK87EXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN-IxrEXEeeP95al6XTTTg" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mN-Ix7EXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mN-IyLEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; sTok.length(); i++) {&#xD;
			if ('\&quot;' == sTok.charAt(i)) {&#xD;
				String rest = sTok.substring(i + 1);&#xD;
				if (!rest.equals(&quot;&quot;)) {&#xD;
					this.putStringBack(rest);&#xD;
				}&#xD;
				return acc;&#xD;
			} else {&#xD;
				acc += sTok.charAt(i);&#xD;
			}&#xD;
		}&#xD;
		acc += &quot; &quot;;&#xD;
		return parseQuote(acc, this.getNextStringToken());&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_mIo80LEXEeeP95al6XTTTg" name="ABCTokenizer" method="_mN9huLEXEeeP95al6XTTTg" raisedException="_mMQRgbEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mIpj4LEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mIpj4bEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_mOE2erEXEeeP95al6XTTTg">
                <body>Constructor for the class&#xD;
	 * @param inputFileName  File to tokenize&#xD;
	 * @throws FileNotFoundException  When input file could not be loaded.</body>
              </ownedComment>
              <ownedParameter xmi:id="_mIo80bEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mIpj4rEXEeeP95al6XTTTg" type="_mIoVwrEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_mIpj47EXEeeP95al6XTTTg" name="getNextToken" method="_mN9hu7EXEeeP95al6XTTTg">
              <ownedComment xmi:id="_mOE2e7EXEeeP95al6XTTTg">
                <body>Return the next token, either from the stream or the last token if it was&#xD;
	 * pushed back</body>
              </ownedComment>
              <ownedParameter xmi:id="_mMOcUbEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_mIpj5LEXEeeP95al6XTTTg" name="makeNextToken" visibility="private" method="_mN-IwLEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_mOE2fbEXEeeP95al6XTTTg">
                <body>Parse the strings down from the getNextStringToken further, separating&#xD;
	 * out the abc keywords into tokens.&#xD;
	 * @return The next Token in the stream</body>
              </ownedComment>
              <ownedParameter xmi:id="_mMPDYLEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_mIqK8LEXEeeP95al6XTTTg" name="parseNote" visibility="private" method="_mN-IwrEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_mOE2frEXEeeP95al6XTTTg">
                <body>Returns the first note string in the given string.&#xD;
	 * &#xD;
	 * @param sTok  The string to parse&#xD;
	 * @return A String that is the first note in the given string</body>
              </ownedComment>
              <ownedParameter xmi:id="_mIqK8bEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mIqK8rEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_mIqK87EXEeeP95al6XTTTg" name="parseQuote" visibility="private" method="_mN-IxbEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_mOE2f7EXEeeP95al6XTTTg">
                <body>Returns the rest of a string, incl. spaces until the next double quote&#xD;
	 * @param acc  Accumulated result string&#xD;
	 * @param sTok the current string token&#xD;
	 * @return the full quoted string</body>
              </ownedComment>
              <ownedParameter xmi:id="_mIqK9LEXEeeP95al6XTTTg" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mIqK9bEXEeeP95al6XTTTg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mIqK9rEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_mMOcUrEXEeeP95al6XTTTg" name="putBack" method="_mN9hvbEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_mOE2fLEXEeeP95al6XTTTg">
                <body>*	 Push token back into the stream&#xD;
	 * @param t the Token you need to put back in the stream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_mMOcU7EXEeeP95al6XTTTg" name="t" type="_mIkrY7EXEeeP95al6XTTTg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_mIrZELEXEeeP95al6XTTTg" name="IStringTokenizer">
            <ownedComment xmi:id="_mOE2gLEXEeeP95al6XTTTg">
              <body>Tokenizer that only returns string tokens.  This is a specialization of ITokenizer for strings.&#xD;
&#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_mIsAILEXEeeP95al6XTTTg" name="getNextStringToken" isAbstract="true">
              <ownedComment xmi:id="_mOE2gbEXEeeP95al6XTTTg">
                <body>Return the next token.&#xD;
	 * @return The next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_mIsAIbEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_mIsAIrEXEeeP95al6XTTTg" name="putStringBack" isAbstract="true">
              <ownedComment xmi:id="_mOE2grEXEeeP95al6XTTTg">
                <body>Put the previously consumed token back into the token stream. Can only&#xD;
	 * put back one token.&#xD;
	 * @param t the token to push back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_mIsAI7EXEeeP95al6XTTTg" name="t">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_mIsAJLEXEeeP95al6XTTTg" name="ITokenizer" isAbstract="true">
            <ownedComment xmi:id="_mOE2g7EXEeeP95al6XTTTg">
              <body>Extract and return an appropriate Token from some given source.</body>
            </ownedComment>
            <ownedOperation xmi:id="_mIsnMbEXEeeP95al6XTTTg" name="getNextToken" isAbstract="true">
              <ownedComment xmi:id="_mOE2hLEXEeeP95al6XTTTg">
                <body>Return the next token.&#xD;
	 * @return the next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_mMPqcLEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_mMPqcbEXEeeP95al6XTTTg" name="putBack" isAbstract="true">
              <ownedComment xmi:id="_mOE2hbEXEeeP95al6XTTTg">
                <body>Put the previously consumed token back into the token stream. &#xD;
	 * @param t the token to put back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_mMPqcrEXEeeP95al6XTTTg" name="t" type="_mIkrY7EXEeeP95al6XTTTg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_mItOQLEXEeeP95al6XTTTg" name="StringTokenizer">
            <ownedComment xmi:id="_mOFdgLEXEeeP95al6XTTTg">
              <body>Special tokenizer that converts a stream of various types of tokens from  StreamTokenizer and converts them into a stream of strings. &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_mNluQLEXEeeP95al6XTTTg" name="stack" visibility="private" type="_mMosALEXEeeP95al6XTTTg" association="_mOhiYbEXEeeP95al6XTTTg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNluQrEXEeeP95al6XTTTg" value="new Stack&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_mNmVUbEXEeeP95al6XTTTg" name="_st" visibility="protected" type="_mMRfo7EXEeeP95al6XTTTg" association="_mOiJcbEXEeeP95al6XTTTg"/>
            <ownedAttribute xmi:id="_mNmVU7EXEeeP95al6XTTTg" name="_fileReader" visibility="protected" type="_mMRfobEXEeeP95al6XTTTg" association="_mOiwgbEXEeeP95al6XTTTg"/>
            <interfaceRealization xmi:id="_mMSGsbEXEeeP95al6XTTTg" client="_mItOQLEXEeeP95al6XTTTg" supplier="_mIrZELEXEeeP95al6XTTTg" contract="_mIrZELEXEeeP95al6XTTTg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN-IybEXEeeP95al6XTTTg" name="StringTokenizer" specification="_mItOQbEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN-IyrEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mN-Iy7EXEeeP95al6XTTTg" type="_mItOQLEXEeeP95al6XTTTg" direction="return"/>
              <language>java</language>
              <body>// Create an input text file object:&#xD;
&#xD;
		//_st = new StreamTokenizer(new BufferedReader(url.openStream()));&#xD;
		//_fileReader = new FileReader(inputFileName);&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(inputFileName)&#xD;
					.openStream();&#xD;
&#xD;
			_fileReader = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			//_fileReader = new FileReader(file);&#xD;
		} catch (Exception e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			System.err.println(&quot;StringTokenizer error opening file: &quot; + e);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		// Create a Streamtokenizer to parse the input text file:&#xD;
		_st = new StreamTokenizer(_fileReader);&#xD;
&#xD;
		_st.eolIsSignificant(true);&#xD;
		_st.wordChars(33, 125);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN-v0LEXEeeP95al6XTTTg" name="getNextStringToken" specification="_mIt1VLEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN-v0bEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextStringToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN-v0rEXEeeP95al6XTTTg" name="putStringBack" specification="_mIucYrEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN-v07EXEeeP95al6XTTTg" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>stack.push(str);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN-v1LEXEeeP95al6XTTTg" name="makeNextStringToken" specification="_mIucZ7EXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mN-v1bEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {&#xD;
			int t = _st.nextToken();&#xD;
			if (StreamTokenizer.TT_EOL == t)&#xD;
				return &quot;\n&quot;;&#xD;
			if (StreamTokenizer.TT_EOF != t) {&#xD;
				switch (_st.ttype) {&#xD;
&#xD;
				case StreamTokenizer.TT_WORD: {&#xD;
					return _st.sval;&#xD;
				}&#xD;
&#xD;
				case StreamTokenizer.TT_NUMBER: {&#xD;
					// check if number is an integer&#xD;
					if (Math.floor(_st.nval) == _st.nval) {&#xD;
						return &quot;&quot; + (int) _st.nval;&#xD;
					} else {&#xD;
						return &quot;&quot; + _st.nval;&#xD;
					}&#xD;
				}&#xD;
&#xD;
				default:&#xD;
					throw new IllegalArgumentException(&#xD;
							&quot;Tokenizer1: Illegal token type = &quot; + _st.ttype);&#xD;
				}&#xD;
			} else {&#xD;
				_fileReader.close();&#xD;
				System.err.println(&quot;EOF Token&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.out.println(&quot;StringTokenizer.makeNextToken(): Exception = &quot;&#xD;
					+ e.getMessage());&#xD;
			return null;&#xD;
		}&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_mItOQbEXEeeP95al6XTTTg" name="StringTokenizer" method="_mN-IybEXEeeP95al6XTTTg" raisedException="_mMQRgbEXEeeP95al6XTTTg">
              <eAnnotations xmi:id="_mIt1UbEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mIt1UrEXEeeP95al6XTTTg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_mOFdgbEXEeeP95al6XTTTg">
                <body>Initialize _st to read from a input Reader file with the given input file&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file&#xD;
	 * @throws FileNotFoundException When the input file could not be opened</body>
              </ownedComment>
              <ownedParameter xmi:id="_mIt1ULEXEeeP95al6XTTTg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_mIt1U7EXEeeP95al6XTTTg" type="_mItOQLEXEeeP95al6XTTTg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_mIt1VLEXEeeP95al6XTTTg" name="getNextStringToken" method="_mN-v0LEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mIt1VbEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_mIucYrEXEeeP95al6XTTTg" name="putStringBack" method="_mN-v0rEXEeeP95al6XTTTg">
              <ownedParameter xmi:id="_mIucY7EXEeeP95al6XTTTg" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_mIucZ7EXEeeP95al6XTTTg" name="makeNextStringToken" visibility="private" method="_mN-v1LEXEeeP95al6XTTTg">
              <ownedComment xmi:id="_mOFdgrEXEeeP95al6XTTTg">
                <body>Returns the next string in the stream.  &#xD;
	 * Returns LF (&quot;\n&quot;) at end of line.  &#xD;
	 * Returns null for EOF or error&#xD;
	 * &#xD;
	 * @return A string token or null if EOF</body>
              </ownedComment>
              <ownedParameter xmi:id="_mIvDcLEXEeeP95al6XTTTg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_mOftM7EXEeeP95al6XTTTg" name="" memberEnd="_mOftNLEXEeeP95al6XTTTg _mNjSArEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_mOftNLEXEeeP95al6XTTTg" name="" type="_mIoVwrEXEeeP95al6XTTTg" association="_mOftM7EXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_mOgUQbEXEeeP95al6XTTTg" name="" memberEnd="_mOgUQrEXEeeP95al6XTTTg _mNj5E7EXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_mOgUQrEXEeeP95al6XTTTg" name="" type="_mIoVwrEXEeeP95al6XTTTg" association="_mOgUQbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_mOg7UbEXEeeP95al6XTTTg" name="" memberEnd="_mOg7UrEXEeeP95al6XTTTg _mNkgIbEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_mOg7UrEXEeeP95al6XTTTg" name="" type="_mIoVwrEXEeeP95al6XTTTg" association="_mOg7UbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_mOhiYbEXEeeP95al6XTTTg" name="" memberEnd="_mOhiYrEXEeeP95al6XTTTg _mNluQLEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_mOhiYrEXEeeP95al6XTTTg" name="" type="_mItOQLEXEeeP95al6XTTTg" association="_mOhiYbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_mOiJcbEXEeeP95al6XTTTg" name="" memberEnd="_mOiJcrEXEeeP95al6XTTTg _mNmVUbEXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_mOiJcrEXEeeP95al6XTTTg" name="" type="_mItOQLEXEeeP95al6XTTTg" association="_mOiJcbEXEeeP95al6XTTTg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_mOiwgbEXEeeP95al6XTTTg" name="" memberEnd="_mOiwgrEXEeeP95al6XTTTg _mNmVU7EXEeeP95al6XTTTg">
            <ownedEnd xmi:id="_mOiwgrEXEeeP95al6XTTTg" name="" type="_mItOQLEXEeeP95al6XTTTg" association="_mOiwgbEXEeeP95al6XTTTg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mIfL0LEXEeeP95al6XTTTg" name="ATokVisitor" isAbstract="true">
          <ownedComment xmi:id="_mOEPcLEXEeeP95al6XTTTg">
            <body>A visitor to an Token that implements ITokVisitor using a dictionary of commands.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNgOtbEXEeeP95al6XTTTg" name="defaultCmd" visibility="private" type="_mIi2MLEXEeeP95al6XTTTg" association="_mOefEbEXEeeP95al6XTTTg"/>
          <ownedAttribute xmi:id="_mNg1wbEXEeeP95al6XTTTg" name="cmds" visibility="private" type="_mIi2MLEXEeeP95al6XTTTg" association="_mOfGIbEXEeeP95al6XTTTg">
            <qualifier xmi:id="_mNhc0LEXEeeP95al6XTTTg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNg1wrEXEeeP95al6XTTTg" value="new Hashtable&lt;String, ITokVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mMLZALEXEeeP95al6XTTTg" client="_mIfL0LEXEeeP95al6XTTTg" supplier="_mIhoELEXEeeP95al6XTTTg" contract="_mIhoELEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7shrEXEeeP95al6XTTTg" name="ATokVisitor" specification="_mIfy4LEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN7sh7EXEeeP95al6XTTTg" type="_mIfL0LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>defaultCmd = new ITokVisitorCmd() {&#xD;
			public Object apply(String idx, Token host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&#xD;
						&quot;ATokVisitor: Unknown token encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN7siLEXEeeP95al6XTTTg" name="ATokVisitor" specification="_mMLZAbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN8TkLEXEeeP95al6XTTTg" name="defaultCmd" type="_mIi2MLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN8TkbEXEeeP95al6XTTTg" type="_mIfL0LEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN8TkrEXEeeP95al6XTTTg" name="caseAt" specification="_mM_RULEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN8Tk7EXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN8TlLEXEeeP95al6XTTTg" name="host" type="_mIkrY7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN8TlbEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN8TlrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN8Tl7EXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN8TmLEXEeeP95al6XTTTg" name="addCmd" specification="_mMMAELEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN8TmbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN8TmrEXEeeP95al6XTTTg" name="cmd" type="_mIi2MLEXEeeP95al6XTTTg"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mIfy4LEXEeeP95al6XTTTg" name="ATokVisitor" method="_mN7shrEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mIfy4bEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mIfy4rEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOEPcbEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to one that throws and IllegalArgumentException&quot; for any unknown tokens.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIfy47EXEeeP95al6XTTTg" type="_mIfL0LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mMLZAbEXEeeP95al6XTTTg" name="ATokVisitor" method="_mN7siLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mMLZA7EXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mMLZBLEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOEPcrEXEeeP95al6XTTTg">
              <body>Constructor that sets the default cmd to the given command.&#xD;
	 * @param defaultCmd the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMLZArEXEeeP95al6XTTTg" name="defaultCmd" type="_mIi2MLEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mMLZBbEXEeeP95al6XTTTg" type="_mIfL0LEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mMMAELEXEeeP95al6XTTTg" name="addCmd" method="_mN8TmLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOEPc7EXEeeP95al6XTTTg">
              <body>Add a new cmd or replace an existing cmd associated with the given host id.&#xD;
	 * @param id the id of the host to associate with this visitor.&#xD;
	 * @param cmd The command to associate with the given key value.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mMMAEbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMMAErEXEeeP95al6XTTTg" name="cmd" type="_mIi2MLEXEeeP95al6XTTTg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mM_RULEXEeeP95al6XTTTg" name="caseAt" method="_mN8TkrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mM_RUbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mM_4YLEXEeeP95al6XTTTg" name="host" type="_mIkrY7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mM_4YbEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mM_4ZLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mM_4YrEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mIhoELEXEeeP95al6XTTTg" name="ITokVisitor">
          <ownedComment xmi:id="_mOE2cLEXEeeP95al6XTTTg">
            <body>Interface for a token visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_mNAfcLEXEeeP95al6XTTTg" name="caseAt">
            <ownedParameter xmi:id="_mNAfcbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNAfcrEXEeeP95al6XTTTg" name="host" type="_mIkrY7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNAfc7EXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNBGgrEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNBGgLEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mIi2MLEXEeeP95al6XTTTg" name="ITokVisitorCmd">
          <ownedComment xmi:id="_mOE2cbEXEeeP95al6XTTTg">
            <body>A command for use in ATokVisitors</body>
          </ownedComment>
          <ownedOperation xmi:id="_mNBtkLEXEeeP95al6XTTTg" name="apply">
            <ownedParameter xmi:id="_mNBtkbEXEeeP95al6XTTTg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNBtkrEXEeeP95al6XTTTg" name="host" type="_mIkrY7EXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNBtk7EXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNCUoLEXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNBtlLEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mIjdQLEXEeeP95al6XTTTg" name="ITokenFactory">
          <ownedComment xmi:id="_mOE2crEXEeeP95al6XTTTg">
            <body>Abstract factory to produce tokens</body>
          </ownedComment>
          <ownedOperation xmi:id="_mIkrYLEXEeeP95al6XTTTg" name="makeToken">
            <ownedParameter xmi:id="_mIkrYbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIkrYrEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMNOMLEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mIkrY7EXEeeP95al6XTTTg" name="Token">
          <ownedComment xmi:id="_mOE2c7EXEeeP95al6XTTTg">
            <body>Represents a token in the language.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNhc0bEXEeeP95al6XTTTg" name="_name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_mNhc07EXEeeP95al6XTTTg" name="_lexeme" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN86oLEXEeeP95al6XTTTg" name="Token" specification="_mIlScLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN86obEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN86orEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN86o7EXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>_name = name;&#xD;
		_lexeme = lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN86pLEXEeeP95al6XTTTg" name="execute" specification="_mNCUorEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN86pbEXEeeP95al6XTTTg" name="algo" type="_mIhoELEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mN86prEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN86p7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN86qLEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_name, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN86qbEXEeeP95al6XTTTg" name="getName" specification="_mIl5g7EXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN86qrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _name;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN86q7EXEeeP95al6XTTTg" name="getLexeme" specification="_mIl5hbEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN86rLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN9hsLEXEeeP95al6XTTTg" name="toString" specification="_mImgkLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN9hsbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;[&quot; + _name + &quot;] &quot; + _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mIlScLEXEeeP95al6XTTTg" name="Token" method="_mN86oLEXEeeP95al6XTTTg">
            <eAnnotations xmi:id="_mIl5gLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mIl5gbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_mOE2dLEXEeeP95al6XTTTg">
              <body>Token constructor.&#xD;
	 *&#xD;
	 * @param name The name associated with this token.  This is the id value when it executes its visitors.&#xD;
	 * @param lexeme _lexeme this token is representing.</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIlScbEXEeeP95al6XTTTg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIlScrEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mIl5grEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mIl5g7EXEeeP95al6XTTTg" name="getName" method="_mN86qbEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOE2dbEXEeeP95al6XTTTg">
              <body>Accessor for the name of this token&#xD;
	 * @return The name of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIl5hLEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mIl5hbEXEeeP95al6XTTTg" name="getLexeme" method="_mN86q7EXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOE2drEXEeeP95al6XTTTg">
              <body>Accessor for the lexeme of this token&#xD;
	 * @return The lexeme of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_mIl5hrEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mImgkLEXEeeP95al6XTTTg" name="toString" method="_mN9hsLEXEeeP95al6XTTTg">
            <ownedComment xmi:id="_mOE2d7EXEeeP95al6XTTTg">
              <body>Return a string representation of the token: &quot;[name] lexeme&quot;&#xD;
	 *&#xD;
	 * @return string representation</body>
            </ownedComment>
            <ownedParameter xmi:id="_mImgkbEXEeeP95al6XTTTg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_mNCUorEXEeeP95al6XTTTg" name="execute" method="_mN86pLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mNCUo7EXEeeP95al6XTTTg" name="algo" type="_mIhoELEXEeeP95al6XTTTg"/>
            <ownedParameter xmi:id="_mNC7sLEXEeeP95al6XTTTg" name="params" type="_mMqhMbEXEeeP95al6XTTTg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNC7s7EXEeeP95al6XTTTg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mNC7sbEXEeeP95al6XTTTg" type="_mMqhMbEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mInHoLEXEeeP95al6XTTTg" name="TokenFactory">
          <ownedComment xmi:id="_mOE2eLEXEeeP95al6XTTTg">
            <body>Concrete factory to create tokens</body>
          </ownedComment>
          <ownedAttribute xmi:id="_mNiD4bEXEeeP95al6XTTTg" name="Singleton" isLeaf="true" isStatic="true" type="_mInHoLEXEeeP95al6XTTTg" isReadOnly="true" association="_mOftMLEXEeeP95al6XTTTg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNiD4rEXEeeP95al6XTTTg" value="new TokenFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_mMN1QLEXEeeP95al6XTTTg" client="_mInHoLEXEeeP95al6XTTTg" supplier="_mIjdQLEXEeeP95al6XTTTg" contract="_mIjdQLEXEeeP95al6XTTTg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mN9hsrEXEeeP95al6XTTTg" name="makeToken" specification="_mInutLEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mN9hs7EXEeeP95al6XTTTg" name="name">
              <eAnnotations xmi:id="_mN9htLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mN9htbEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN9htrEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mN9ht7EXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
            <language>java</language>
            <body>return new Token(name, lexeme);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_mInHobEXEeeP95al6XTTTg" name="TokenFactory" visibility="private">
            <eAnnotations xmi:id="_mInusLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_mInusbEXEeeP95al6XTTTg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_mInus7EXEeeP95al6XTTTg" type="_mInHoLEXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_mInutLEXEeeP95al6XTTTg" name="makeToken" method="_mN9hsrEXEeeP95al6XTTTg">
            <ownedParameter xmi:id="_mInutbEXEeeP95al6XTTTg" name="name">
              <eAnnotations xmi:id="_mIoVwLEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_mIoVwbEXEeeP95al6XTTTg" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mInutrEXEeeP95al6XTTTg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_mMN1QbEXEeeP95al6XTTTg" type="_mIkrY7EXEeeP95al6XTTTg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOefEbEXEeeP95al6XTTTg" name="" memberEnd="_mOefErEXEeeP95al6XTTTg _mNgOtbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOefErEXEeeP95al6XTTTg" name="" type="_mIfL0LEXEeeP95al6XTTTg" association="_mOefEbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOfGIbEXEeeP95al6XTTTg" name="" memberEnd="_mOfGIrEXEeeP95al6XTTTg _mNg1wbEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOfGIrEXEeeP95al6XTTTg" name="" type="_mIfL0LEXEeeP95al6XTTTg" association="_mOfGIbEXEeeP95al6XTTTg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mOftMLEXEeeP95al6XTTTg" name="" memberEnd="_mOftMbEXEeeP95al6XTTTg _mNiD4bEXEeeP95al6XTTTg">
          <ownedEnd xmi:id="_mOftMbEXEeeP95al6XTTTg" name="" type="_mInHoLEXEeeP95al6XTTTg" association="_mOftMLEXEeeP95al6XTTTg"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mFsWgrEXEeeP95al6XTTTg" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_mI1xILEXEeeP95al6XTTTg" name="IView2ModelControlAdapter">
        <ownedComment xmi:id="_mOFdkrEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_mI2YMLEXEeeP95al6XTTTg" name="loadFile">
          <ownedComment xmi:id="_mOFdk7EXEeeP95al6XTTTg">
            <body>load the given file.&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_mI2YMbEXEeeP95al6XTTTg" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_mI2YMrEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_mI2YM7EXEeeP95al6XTTTg" name="parseFile">
          <ownedComment xmi:id="_mOFdlLEXEeeP95al6XTTTg">
            <body>parse the given file.</body>
          </ownedComment>
          <ownedParameter xmi:id="_mI2YNLEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_mI2YNbEXEeeP95al6XTTTg" name="playFile">
          <ownedComment xmi:id="_mOGEkLEXEeeP95al6XTTTg">
            <body>play the loaded file.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_mI2YNrEXEeeP95al6XTTTg" name="stopFile">
          <ownedComment xmi:id="_mOGEkbEXEeeP95al6XTTTg">
            <body>stop the given file.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_mI2YN7EXEeeP95al6XTTTg" name="MusicPlayerView">
        <generalization xmi:id="_mNIbQbEXEeeP95al6XTTTg" general="_mMXmQ7EXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNqmwrEXEeeP95al6XTTTg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_mNrN0LEXEeeP95al6XTTTg" value="432253693325539503L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_mNrN0bEXEeeP95al6XTTTg" name="contentPane" visibility="private" type="_mMYNUbEXEeeP95al6XTTTg" association="_mOlMwbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNrN07EXEeeP95al6XTTTg" name="txtFile" visibility="private" type="_mMaCgLEXEeeP95al6XTTTg" association="_mOlMxLEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNr04LEXEeeP95al6XTTTg" name="panelControls" visibility="private" type="_mMYNUbEXEeeP95al6XTTTg" association="_mOlz0bEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNr04rEXEeeP95al6XTTTg" name="lblFile" visibility="private" type="_mMZbcLEXEeeP95al6XTTTg" association="_mOma4LEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNr05LEXEeeP95al6XTTTg" name="btnLoad" visibility="private" type="_mMapkLEXEeeP95al6XTTTg" association="_mOma47EXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNsb8bEXEeeP95al6XTTTg" name="btnParse" visibility="private" type="_mMapkLEXEeeP95al6XTTTg" association="_mOnB8bEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNsb87EXEeeP95al6XTTTg" name="comboBoxInstruments" visibility="private" type="_mMapkrEXEeeP95al6XTTTg" association="_mOnB9LEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNtDArEXEeeP95al6XTTTg" name="btnPlay" visibility="private" type="_mMapkLEXEeeP95al6XTTTg" association="_mOnpArEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNtqEbEXEeeP95al6XTTTg" name="_iView2Model" visibility="private" type="_mI1xILEXEeeP95al6XTTTg" association="_mOoQEbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNtqE7EXEeeP95al6XTTTg" name="splitPane" visibility="private" type="_mMbQobEXEeeP95al6XTTTg" association="_mOoQFLEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNuRIbEXEeeP95al6XTTTg" name="scrollPane_file" visibility="private" type="_mMdF0bEXEeeP95al6XTTTg" association="_mOo3IbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNuRI7EXEeeP95al6XTTTg" name="scrollPane_parse" visibility="private" type="_mMdF0bEXEeeP95al6XTTTg" association="_mOpeMbEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNu4MLEXEeeP95al6XTTTg" name="textPane_file" visibility="private" type="_mMeT8bEXEeeP95al6XTTTg" association="_mOqFQLEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNu4MrEXEeeP95al6XTTTg" name="textPane_parse" visibility="private" type="_mMeT8bEXEeeP95al6XTTTg" association="_mOqsULEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNu4NLEXEeeP95al6XTTTg" name="btnStop" visibility="private" type="_mMapkLEXEeeP95al6XTTTg" association="_mOqsU7EXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mOAlALEXEeeP95al6XTTTg" name="MusicPlayerView" specification="_mMgJILEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mOAlAbEXEeeP95al6XTTTg" name="iView2Model" type="_mI1xILEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_mOAlArEXEeeP95al6XTTTg" type="_mI2YN7EXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>setMinimumSize(new Dimension(600, 0));&#xD;
		&#xD;
		_iView2Model = iView2Model;&#xD;
		init();		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mOAlA7EXEeeP95al6XTTTg" name="init" specification="_mI4NYLEXEeeP95al6XTTTg">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		setBounds(100, 100, 667, 454);&#xD;
		contentPane = new JPanel();&#xD;
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));&#xD;
		contentPane.setLayout(new BorderLayout(0, 0));&#xD;
		setContentPane(contentPane);&#xD;
		&#xD;
		panelControls = new JPanel();&#xD;
		panelControls.setBackground(Color.LIGHT_GRAY);&#xD;
		panelControls.setToolTipText(&quot;Panel containing all the controls\r\n&quot;);&#xD;
		contentPane.add(panelControls, BorderLayout.NORTH);&#xD;
		&#xD;
		lblFile = new JLabel(&quot;File:&quot;);&#xD;
		lblFile.setToolTipText(&quot;File Descriptior&quot;);&#xD;
		panelControls.add(lblFile);&#xD;
		&#xD;
		txtFile = new JTextField();&#xD;
		txtFile.setToolTipText(&quot;File to load.&quot;);&#xD;
		txtFile.setText(&quot;File&quot;);&#xD;
		panelControls.add(txtFile);&#xD;
		txtFile.setColumns(10);&#xD;
		&#xD;
		btnLoad = new JButton(&quot;Load&quot;);&#xD;
		btnLoad.setToolTipText(&quot;Loads the indicated file\r\n&quot;);&#xD;
		panelControls.add(btnLoad);&#xD;
		btnLoad.addActionListener( new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				btnParse.setEnabled(true);&#xD;
				textPane_file.setText(_iView2Model.loadFile(txtFile.getText()));&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		btnParse = new JButton(&quot;Parse&quot;);&#xD;
		btnParse.setEnabled(false);&#xD;
&#xD;
		&#xD;
		btnParse.setToolTipText(&quot;Parses the selected file\r\n&quot;);&#xD;
		panelControls.add(btnParse);		&#xD;
		btnParse.addActionListener( new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				textPane_parse.setText(_iView2Model.parseFile());&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		comboBoxInstruments = new JComboBox&lt;TInst>();&#xD;
		comboBoxInstruments.setToolTipText(&quot;The avalible instruments to choose from - please pick one&quot;);&#xD;
		panelControls.add(comboBoxInstruments);&#xD;
		for(TInst i : getInstruments())&#xD;
			comboBoxInstruments.addItem(i);&#xD;
		&#xD;
		btnPlay = new JButton(&quot;Play&quot;);&#xD;
		btnPlay.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				_iView2Model.playFile();&#xD;
			}&#xD;
		});&#xD;
		btnPlay.setToolTipText(&quot;Plays the file, once it is loaded&quot;);&#xD;
		panelControls.add(btnPlay);&#xD;
		&#xD;
		btnStop = new JButton(&quot;Stop&quot;);&#xD;
		btnStop.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				_iView2Model.stopFile();&#xD;
			}&#xD;
		});&#xD;
		btnStop.setToolTipText(&quot;Stop playing the music&quot;);&#xD;
		panelControls.add(btnStop);&#xD;
		&#xD;
		splitPane = new JSplitPane();&#xD;
		splitPane.setResizeWeight(0.5);&#xD;
		splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);&#xD;
		contentPane.add(splitPane, BorderLayout.CENTER);&#xD;
		&#xD;
		scrollPane_file = new JScrollPane();&#xD;
		scrollPane_file.setViewportBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null), &quot;File Content&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, new Color(0, 0, 0)));&#xD;
		splitPane.setLeftComponent(scrollPane_file);&#xD;
		&#xD;
		textPane_file = new JTextPane();&#xD;
		scrollPane_file.setViewportView(textPane_file);&#xD;
		&#xD;
		scrollPane_parse = new JScrollPane();&#xD;
		scrollPane_parse.setViewportBorder(new TitledBorder(null, &quot;Parsed IPhrase Structure&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));&#xD;
		splitPane.setRightComponent(scrollPane_parse);&#xD;
		&#xD;
		textPane_parse = new JTextPane();&#xD;
		scrollPane_parse.setViewportView(textPane_parse);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mOAlBLEXEeeP95al6XTTTg" name="getInstruments" specification="_mI4NYbEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mOAlBbEXEeeP95al6XTTTg" type="_mMXmQbEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;TInst> instruments = new ArrayList&lt;TInst>();&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Piano 1&quot;, 0)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Bright Acoustic Piano&quot;, 1)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Harpsichord&quot;, 6)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Clavi&quot;, 7)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Music Box&quot;, 10)));&#xD;
		instruments.add((TInst)(new ABCInstrument(&quot;Harmonica&quot;, 22)));&#xD;
		return instruments;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mOAlBrEXEeeP95al6XTTTg" name="getSelectedInstrumentIndex" specification="_mI5bhLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mOAlB7EXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>ABCInstrument i = (ABCInstrument) comboBoxInstruments.getSelectedItem();&#xD;
		return i.getValue();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mOAlCLEXEeeP95al6XTTTg" name="start" specification="_mI6CkLEXEeeP95al6XTTTg">
          <language>java</language>
          <body>setVisible(true);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_mI4NYLEXEeeP95al6XTTTg" name="init" method="_mOAlA7EXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOGEk7EXEeeP95al6XTTTg">
            <body>initiates the frame.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_mI4NYbEXEeeP95al6XTTTg" name="getInstruments" method="_mOAlBLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mNIbQLEXEeeP95al6XTTTg" type="_mMXmQbEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_mI5bhLEXEeeP95al6XTTTg" name="getSelectedInstrumentIndex" method="_mOAlBrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOGElbEXEeeP95al6XTTTg">
            <body>returns the index of the selected instrument of the combo box</body>
          </ownedComment>
          <ownedParameter xmi:id="_mI5bhbEXEeeP95al6XTTTg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_mI6CkLEXEeeP95al6XTTTg" name="start" method="_mOAlCLEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOGElrEXEeeP95al6XTTTg">
            <body>starts the view</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_mMgJILEXEeeP95al6XTTTg" name="MusicPlayerView" method="_mOAlALEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_mMgJIrEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_mMgJI7EXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_mOGEkrEXEeeP95al6XTTTg">
            <body>Create the frame.</body>
          </ownedComment>
          <ownedParameter xmi:id="_mMgJIbEXEeeP95al6XTTTg" name="iView2Model" type="_mI1xILEXEeeP95al6XTTTg"/>
          <ownedParameter xmi:id="_mMgJJLEXEeeP95al6XTTTg" type="_mI2YN7EXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOlMwbEXEeeP95al6XTTTg" name="" memberEnd="_mOlMwrEXEeeP95al6XTTTg _mNrN0bEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOlMwrEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOlMwbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOlMxLEXEeeP95al6XTTTg" name="" memberEnd="_mOlMxbEXEeeP95al6XTTTg _mNrN07EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOlMxbEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOlMxLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOlz0bEXEeeP95al6XTTTg" name="" memberEnd="_mOlz0rEXEeeP95al6XTTTg _mNr04LEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOlz0rEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOlz0bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOma4LEXEeeP95al6XTTTg" name="" memberEnd="_mOma4bEXEeeP95al6XTTTg _mNr04rEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOma4bEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOma4LEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOma47EXEeeP95al6XTTTg" name="" memberEnd="_mOma5LEXEeeP95al6XTTTg _mNr05LEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOma5LEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOma47EXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOnB8bEXEeeP95al6XTTTg" name="" memberEnd="_mOnB8rEXEeeP95al6XTTTg _mNsb8bEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOnB8rEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOnB8bEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOnB9LEXEeeP95al6XTTTg" name="" memberEnd="_mOnpALEXEeeP95al6XTTTg _mNsb87EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOnpALEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOnB9LEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOnpArEXEeeP95al6XTTTg" name="" memberEnd="_mOnpA7EXEeeP95al6XTTTg _mNtDArEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOnpA7EXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOnpArEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOoQEbEXEeeP95al6XTTTg" name="" memberEnd="_mOoQErEXEeeP95al6XTTTg _mNtqEbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOoQErEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOoQEbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOoQFLEXEeeP95al6XTTTg" name="" memberEnd="_mOoQFbEXEeeP95al6XTTTg _mNtqE7EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOoQFbEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOoQFLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOo3IbEXEeeP95al6XTTTg" name="" memberEnd="_mOo3IrEXEeeP95al6XTTTg _mNuRIbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOo3IrEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOo3IbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOpeMbEXEeeP95al6XTTTg" name="" memberEnd="_mOpeMrEXEeeP95al6XTTTg _mNuRI7EXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOpeMrEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOpeMbEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOqFQLEXEeeP95al6XTTTg" name="" memberEnd="_mOqFQbEXEeeP95al6XTTTg _mNu4MLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOqFQbEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOqFQLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOqsULEXEeeP95al6XTTTg" name="" memberEnd="_mOqsUbEXEeeP95al6XTTTg _mNu4MrEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOqsUbEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOqsULEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOqsU7EXEeeP95al6XTTTg" name="" memberEnd="_mOqsVLEXEeeP95al6XTTTg _mNu4NLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOqsVLEXEeeP95al6XTTTg" name="" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOqsU7EXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mFs9kLEXEeeP95al6XTTTg" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_mHSR8LEXEeeP95al6XTTTg" name="MusicPlayerController">
        <ownedComment xmi:id="_mOBMELEXEeeP95al6XTTTg">
          <body>@author Alexander Hansen&#xD;
The Controller class</body>
        </ownedComment>
        <ownedAttribute xmi:id="_mNMssLEXEeeP95al6XTTTg" name="musicPlayerModel" visibility="private" type="_mHV8ULEXEeeP95al6XTTTg" association="_mOP1kLEXEeeP95al6XTTTg"/>
        <ownedAttribute xmi:id="_mNNTwbEXEeeP95al6XTTTg" name="musicPlayerView" visibility="private" type="_mI2YN7EXEeeP95al6XTTTg" association="_mOP1k7EXEeeP95al6XTTTg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNxUcLEXEeeP95al6XTTTg" name="MusicPlayerController" specification="_mHS5ALEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mNxUcbEXEeeP95al6XTTTg" type="_mHSR8LEXEeeP95al6XTTTg" direction="return"/>
          <language>java</language>
          <body>// set the view field&#xD;
		musicPlayerView = new MusicPlayerView&lt;ABCInstrument>(new IView2ModelControlAdapter() {&#xD;
			public String loadFile(String file) {&#xD;
				return musicPlayerModel.loadFile(file);				&#xD;
			}&#xD;
			public String parseFile() {&#xD;
				return musicPlayerModel.parseFile();&#xD;
			}&#xD;
			public void playFile() {&#xD;
				musicPlayerModel.playFile(musicPlayerView.getSelectedInstrumentIndex());&#xD;
			}&#xD;
			public void stopFile() {&#xD;
				musicPlayerModel.stopFile();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		// set the model field&#xD;
		musicPlayerModel = new MusicPlayerModel(new IModel2ViewAdapter() {&#xD;
			public SequencePlayer2 getPlayer() {&#xD;
				return musicPlayerModel.getPlayer();&#xD;
			}&#xD;
			&#xD;
			&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNxUcrEXEeeP95al6XTTTg" name="start" specification="_mHTgE7EXEeeP95al6XTTTg">
          <language>java</language>
          <body>musicPlayerModel.start(); // It is usually better to start the model first but not always.&#xD;
		musicPlayerView.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mNxUc7EXEeeP95al6XTTTg" name="main" specification="_mHTgFLEXEeeP95al6XTTTg">
          <ownedParameter xmi:id="_mNxUdLEXEeeP95al6XTTTg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNxUdbEXEeeP95al6XTTTg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() { // Java specs say that the system must be constructed on the GUI event thread.&#xD;
			public void run() {&#xD;
				try {&#xD;
					MusicPlayerController controller = new MusicPlayerController(); // instantiate the system&#xD;
					controller.start(); // start the system&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_mHS5ALEXEeeP95al6XTTTg" name="MusicPlayerController" method="_mNxUcLEXEeeP95al6XTTTg">
          <eAnnotations xmi:id="_mHTgELEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_mHTgEbEXEeeP95al6XTTTg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_mOBzILEXEeeP95al6XTTTg">
            <body>Controller constructor builds the system</body>
          </ownedComment>
          <ownedParameter xmi:id="_mHTgErEXEeeP95al6XTTTg" type="_mHSR8LEXEeeP95al6XTTTg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_mHTgE7EXEeeP95al6XTTTg" name="start" method="_mNxUcrEXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOBzIbEXEeeP95al6XTTTg">
            <body>Start the system</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_mHTgFLEXEeeP95al6XTTTg" name="main" isStatic="true" method="_mNxUc7EXEeeP95al6XTTTg">
          <ownedComment xmi:id="_mOBzIrEXEeeP95al6XTTTg">
            <body>Launch the application.&#xD;
	 * @param args Arguments given by the system or command line.</body>
          </ownedComment>
          <ownedParameter xmi:id="_mHTgFbEXEeeP95al6XTTTg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mHUHILEXEeeP95al6XTTTg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOP1kLEXEeeP95al6XTTTg" name="" memberEnd="_mOP1kbEXEeeP95al6XTTTg _mNMssLEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOP1kbEXEeeP95al6XTTTg" name="" type="_mHSR8LEXEeeP95al6XTTTg" association="_mOP1kLEXEeeP95al6XTTTg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_mOP1k7EXEeeP95al6XTTTg" name="" memberEnd="_mOP1lLEXEeeP95al6XTTTg _mNNTwbEXEeeP95al6XTTTg">
        <ownedEnd xmi:id="_mOP1lLEXEeeP95al6XTTTg" name="" type="_mHSR8LEXEeeP95al6XTTTg" association="_mOP1k7EXEeeP95al6XTTTg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mGGmMLEXEeeP95al6XTTTg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_mGGmMbEXEeeP95al6XTTTg" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_mGGmMrEXEeeP95al6XTTTg" name="midi">
          <packagedElement xmi:type="uml:Class" xmi:id="_mMStwLEXEeeP95al6XTTTg" name="Instrument"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_mMTU0bEXEeeP95al6XTTTg" name="MidiSystem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_mMTU07EXEeeP95al6XTTTg" name="MidiUnavailableException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_mMT74bEXEeeP95al6XTTTg" name="Synthesizer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_mM8OALEXEeeP95al6XTTTg" name="Sequence"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_mM81ELEXEeeP95al6XTTTg" name="Track"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_mM9cILEXEeeP95al6XTTTg" name="Sequencer"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mGdLgbEXEeeP95al6XTTTg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_mGdLgrEXEeeP95al6XTTTg" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_mMY0YbEXEeeP95al6XTTTg" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_mMcewbEXEeeP95al6XTTTg" name="TitledBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_mMds4bEXEeeP95al6XTTTg" name="EtchedBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMXmQ7EXEeeP95al6XTTTg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMYNUbEXEeeP95al6XTTTg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMZbcLEXEeeP95al6XTTTg" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMaCgLEXEeeP95al6XTTTg" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMapkLEXEeeP95al6XTTTg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMapkrEXEeeP95al6XTTTg" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMbQobEXEeeP95al6XTTTg" name="JSplitPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMdF0bEXEeeP95al6XTTTg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mMeT8bEXEeeP95al6XTTTg" name="JTextPane"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_lcjS4LEXEeeP95al6XTTTg">
      <eAnnotations xmi:id="_lcjS4bEXEeeP95al6XTTTg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_lcj58LEXEeeP95al6XTTTg" base_Package="_lYU6MLEXEeeP95al6XTTTg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mHXKcLEXEeeP95al6XTTTg" base_Element="_mHWjYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mHkl07EXEeeP95al6XTTTg" base_Element="_mHkl0LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mHnpIrEXEeeP95al6XTTTg" base_Element="_mHnpILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mHoQMLEXEeeP95al6XTTTg" base_Element="_mHnpILEXEeeP95al6XTTTg">
    <annotations xmi:id="_mHoQMbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mHwMArEXEeeP95al6XTTTg" base_Element="_mHvk8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mH59ArEXEeeP95al6XTTTg" base_Element="_mH5V8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mH7yMrEXEeeP95al6XTTTg" base_Element="_mH7LILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mH9AUbEXEeeP95al6XTTTg" base_Element="_mH8ZQ7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mH9AUrEXEeeP95al6XTTTg" base_Element="_mH8ZQ7EXEeeP95al6XTTTg">
    <annotations xmi:id="_mH9AU7EXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mInusrEXEeeP95al6XTTTg" base_Element="_mInHobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mIsnMLEXEeeP95al6XTTTg" base_Element="_mIsAJLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:StyledElement xmi:id="_mIsnMrEXEeeP95al6XTTTg" base_Element="_mIsnMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mIt1VrEXEeeP95al6XTTTg" base_Element="_mIt1VLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mIucYLEXEeeP95al6XTTTg" base_Element="_mIt1VLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mIucYbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mIucZLEXEeeP95al6XTTTg" base_Element="_mIucYrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mIucZbEXEeeP95al6XTTTg" base_Element="_mIucYrEXEeeP95al6XTTTg">
    <annotations xmi:id="_mIucZrEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mIw4o7EXEeeP95al6XTTTg" base_Element="_mIw4oLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mIyGw7EXEeeP95al6XTTTg" base_Element="_mIyGwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mI2_QLEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_mI2YN7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mI40cLEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_mI4NYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mI5bgLEXEeeP95al6XTTTg" base_Element="_mI4NYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mI5bgbEXEeeP95al6XTTTg" base_Element="_mI4NYbEXEeeP95al6XTTTg">
    <annotations xmi:id="_mI5bgrEXEeeP95al6XTTTg" name="SuppressWarnings">
      <annotationParameters xmi:id="_mI5bg7EXEeeP95al6XTTTg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_mOGElLEXEeeP95al6XTTTg" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_mLpNgLEXEeeP95al6XTTTg" base_Element="_mLomcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mLrCsLEXEeeP95al6XTTTg" base_Element="_mLqboLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mLwiQLEXEeeP95al6XTTTg" base_Element="_mLv7MLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mLxJULEXEeeP95al6XTTTg" base_Element="_mLwiQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mLzlkrEXEeeP95al6XTTTg" base_Element="_mLy-gLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mLzllbEXEeeP95al6XTTTg" base_Element="_mLy-gbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mL2o47EXEeeP95al6XTTTg" base_Element="_mL2B0LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mL3P8LEXEeeP95al6XTTTg" base_Element="_mL2o4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mL_LxLEXEeeP95al6XTTTg" base_Element="_mL_LwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mL_Lx7EXEeeP95al6XTTTg" base_Element="_mL_LwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMAZ4rEXEeeP95al6XTTTg" base_Element="_mL_y0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMAZ5bEXEeeP95al6XTTTg" base_Element="_mL_y0rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMBA8bEXEeeP95al6XTTTg" base_Element="_mMAZ5rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMBA87EXEeeP95al6XTTTg" base_Element="_mMBA8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMEEQrEXEeeP95al6XTTTg" base_Element="_mMDdMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMEERbEXEeeP95al6XTTTg" dimensions="1" base_Element="_mMDdMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:StyledElement xmi:id="_mMPqc7EXEeeP95al6XTTTg" base_Element="_mMPqcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMQRgLEXEeeP95al6XTTTg" base_Element="_mMPqdLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMQRgrEXEeeP95al6XTTTg" base_Element="_mMQRgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMQ4kLEXEeeP95al6XTTTg" base_Element="_mMQRg7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMQ4krEXEeeP95al6XTTTg" base_Element="_mMQ4kbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMRfoLEXEeeP95al6XTTTg" base_Element="_mMQ4k7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMRforEXEeeP95al6XTTTg" base_Element="_mMRfobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMSGsLEXEeeP95al6XTTTg" base_Element="_mMRfo7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMTU0LEXEeeP95al6XTTTg" base_Element="_mMStwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMTU0rEXEeeP95al6XTTTg" base_Element="_mMTU0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMT74LEXEeeP95al6XTTTg" base_Element="_mMTU07EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMUi8LEXEeeP95al6XTTTg" base_Element="_mMT74bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMW_MLEXEeeP95al6XTTTg" base_Element="_mMWYILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMW_MrEXEeeP95al6XTTTg" base_Element="_mMW_MbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMXmQLEXEeeP95al6XTTTg" base_Element="_mMW_M7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMXmQrEXEeeP95al6XTTTg" base_Element="_mMXmQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMYNULEXEeeP95al6XTTTg" base_Element="_mMXmQ7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMY0YLEXEeeP95al6XTTTg" base_Element="_mMYNUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMY0YrEXEeeP95al6XTTTg" base_Element="_mMY0YbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMZbcbEXEeeP95al6XTTTg" base_Element="_mMZbcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMaCgbEXEeeP95al6XTTTg" base_Element="_mMaCgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMapkbEXEeeP95al6XTTTg" base_Element="_mMapkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMbQoLEXEeeP95al6XTTTg" base_Element="_mMapkrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMb3sLEXEeeP95al6XTTTg" base_Element="_mMbQobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMcewLEXEeeP95al6XTTTg" base_Element="_mMb3sbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMdF0LEXEeeP95al6XTTTg" base_Element="_mMcewbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMds4LEXEeeP95al6XTTTg" base_Element="_mMdF0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMds4rEXEeeP95al6XTTTg" base_Element="_mMds4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMeT8LEXEeeP95al6XTTTg" base_Element="_mMds47EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMe7ALEXEeeP95al6XTTTg" base_Element="_mMeT8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMpTELEXEeeP95al6XTTTg" base_Element="_mMosALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mMrIQLEXEeeP95al6XTTTg" base_Element="_mMqhMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMrvULEXEeeP95al6XTTTg" base_Element="_mMrIQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMrvUrEXEeeP95al6XTTTg" base_Element="_mMrIRLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMs9cLEXEeeP95al6XTTTg" base_Element="_mMsWYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMs9crEXEeeP95al6XTTTg" base_Element="_mMsWYrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mMs9c7EXEeeP95al6XTTTg" base_Element="_mMsWYLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mMs9dLEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMuLkLEXEeeP95al6XTTTg" base_Element="_mMtkgLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMuLkrEXEeeP95al6XTTTg" base_Element="_mMtkgrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mMuLk7EXEeeP95al6XTTTg" base_Element="_mMtkgLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mMuLlLEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMvZsbEXEeeP95al6XTTTg" base_Element="_mMuyoLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMvZs7EXEeeP95al6XTTTg" base_Element="_mMuyorEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mMvZtLEXEeeP95al6XTTTg" base_Element="_mMuyoLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mMvZtbEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMwn0bEXEeeP95al6XTTTg" base_Element="_mMwAwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMwn07EXEeeP95al6XTTTg" dimensions="1" base_Element="_mMwAwrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mMwn1LEXEeeP95al6XTTTg" base_Element="_mMwAwLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mMxO4LEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMx18bEXEeeP95al6XTTTg" base_Element="_mMxO4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMx187EXEeeP95al6XTTTg" base_Element="_mMxO47EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMydBbEXEeeP95al6XTTTg" base_Element="_mMydALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMzEEbEXEeeP95al6XTTTg" base_Element="_mMydA7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mMzrIbEXEeeP95al6XTTTg" base_Element="_mMzEErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mMzrI7EXEeeP95al6XTTTg" base_Element="_mMzEFbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mM0SNLEXEeeP95al6XTTTg" base_Element="_mM0SMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mM05QbEXEeeP95al6XTTTg" base_Element="_mM0SMrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mM05QrEXEeeP95al6XTTTg" base_Element="_mM0SMLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mM05Q7EXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mM1gVLEXEeeP95al6XTTTg" base_Element="_mM1gULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mM2HYLEXEeeP95al6XTTTg" base_Element="_mM1gUrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mM2HYbEXEeeP95al6XTTTg" base_Element="_mM1gULEXEeeP95al6XTTTg">
    <annotations xmi:id="_mM2HYrEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mM3VgLEXEeeP95al6XTTTg" base_Element="_mM2ucLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mM3VgrEXEeeP95al6XTTTg" base_Element="_mM2ucrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mM3Vg7EXEeeP95al6XTTTg" base_Element="_mM2ucLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mM3VhLEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mM4jpLEXEeeP95al6XTTTg" base_Element="_mM4joLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mM5KsLEXEeeP95al6XTTTg" base_Element="_mM4jorEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mM5KsbEXEeeP95al6XTTTg" base_Element="_mM4joLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mM5KsrEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mM5xxLEXEeeP95al6XTTTg" base_Element="_mM5xwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mM6Y0bEXEeeP95al6XTTTg" base_Element="_mM5xwrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mM6Y0rEXEeeP95al6XTTTg" base_Element="_mM5xwLEXEeeP95al6XTTTg">
    <annotations xmi:id="_mM6Y07EXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mM6_5LEXEeeP95al6XTTTg" base_Element="_mM6_4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mM7m8LEXEeeP95al6XTTTg" base_Element="_mM6_4rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Annotations xmi:id="_mM7m8bEXEeeP95al6XTTTg" base_Element="_mM6_4LEXEeeP95al6XTTTg">
    <annotations xmi:id="_mM7m8rEXEeeP95al6XTTTg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_mM8OAbEXEeeP95al6XTTTg" base_Element="_mM8OALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mM81EbEXEeeP95al6XTTTg" base_Element="_mM81ELEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mM9cIbEXEeeP95al6XTTTg" base_Element="_mM9cILEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mM_4Y7EXEeeP95al6XTTTg" base_Element="_mM_RULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mM_4ZbEXEeeP95al6XTTTg" base_Element="_mM_4YbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNBGgbEXEeeP95al6XTTTg" base_Element="_mNAfcLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNBGg7EXEeeP95al6XTTTg" base_Element="_mNAfc7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNBtlbEXEeeP95al6XTTTg" base_Element="_mNBtkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNCUobEXEeeP95al6XTTTg" base_Element="_mNBtk7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNC7srEXEeeP95al6XTTTg" base_Element="_mNCUorEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNC7tLEXEeeP95al6XTTTg" base_Element="_mNC7sLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mNEJ0LEXEeeP95al6XTTTg" base_Element="_mNDiwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mNF_ALEXEeeP95al6XTTTg" base_Element="_mNFX8LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNNTwLEXEeeP95al6XTTTg" base_Element="_mNMssLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mNN60LEXEeeP95al6XTTTg" genericsValue="ABCInstrument" base_Element="_mNNTwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNN60bEXEeeP95al6XTTTg" base_Element="_mNNTwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNOh4rEXEeeP95al6XTTTg" base_Element="_mNOh4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNPI8LEXEeeP95al6XTTTg" base_Element="_mNOh47EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNPI8rEXEeeP95al6XTTTg" base_Element="_mNPI8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNPI9LEXEeeP95al6XTTTg" base_Element="_mNPI87EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNPwAbEXEeeP95al6XTTTg" base_Element="_mNPwALEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNQXEbEXEeeP95al6XTTTg" base_Element="_mNPwArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mNQ-ILEXEeeP95al6XTTTg" genericsValue="DecoratorSeqList" base_Element="_mNQXErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNQ-IrEXEeeP95al6XTTTg" base_Element="_mNQXErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mNRlMLEXEeeP95al6XTTTg" genericsValue="DecoratorSeqList" base_Element="_mNQ-I7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNRlMrEXEeeP95al6XTTTg" base_Element="_mNQ-I7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNRlNbEXEeeP95al6XTTTg" base_Element="_mNRlM7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNSMQbEXEeeP95al6XTTTg" base_Element="_mNRlNrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNSMRLEXEeeP95al6XTTTg" base_Element="_mNSMQrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNSzULEXEeeP95al6XTTTg" base_Element="_mNSMRbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNSzU7EXEeeP95al6XTTTg" base_Element="_mNSzUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNTaYLEXEeeP95al6XTTTg" base_Element="_mNSzVLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNTaZLEXEeeP95al6XTTTg" base_Element="_mNTaYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNUBcLEXEeeP95al6XTTTg" base_Element="_mNTaZbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNUBc7EXEeeP95al6XTTTg" base_Element="_mNUBcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNUohLEXEeeP95al6XTTTg" base_Element="_mNUogrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNVPkrEXEeeP95al6XTTTg" base_Element="_mNVPkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNVPlLEXEeeP95al6XTTTg" base_Element="_mNVPk7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNV2oLEXEeeP95al6XTTTg" base_Element="_mNVPlbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNWds7EXEeeP95al6XTTTg" base_Element="_mNWdsrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNWdtbEXEeeP95al6XTTTg" base_Element="_mNWdtLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNXEwbEXEeeP95al6XTTTg" base_Element="_mNXEwLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNYS4LEXEeeP95al6XTTTg" base_Element="_mNXr1rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNYS47EXEeeP95al6XTTTg" dimensions="1" base_Element="_mNYS4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNYS5LEXEeeP95al6XTTTg" base_Element="_mNYS4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNY58rEXEeeP95al6XTTTg" dimensions="1" base_Element="_mNY58LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNY59LEXEeeP95al6XTTTg" base_Element="_mNY58LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNZhALEXEeeP95al6XTTTg" base_Element="_mNY59bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNavILEXEeeP95al6XTTTg" base_Element="_mNaIErEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNavIrEXEeeP95al6XTTTg" base_Element="_mNavIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNbWMLEXEeeP95al6XTTTg" base_Element="_mNavJbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNbWMrEXEeeP95al6XTTTg" base_Element="_mNbWMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNbWNLEXEeeP95al6XTTTg" base_Element="_mNbWM7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNb9QLEXEeeP95al6XTTTg" base_Element="_mNbWNbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNb9QrEXEeeP95al6XTTTg" base_Element="_mNb9QbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNckULEXEeeP95al6XTTTg" base_Element="_mNb9Q7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNckUrEXEeeP95al6XTTTg" base_Element="_mNckUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNdLYbEXEeeP95al6XTTTg" base_Element="_mNdLYLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNdycLEXEeeP95al6XTTTg" base_Element="_mNdLYrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNeZgrEXEeeP95al6XTTTg" base_Element="_mNeZgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNeZhLEXEeeP95al6XTTTg" base_Element="_mNeZg7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNfAkbEXEeeP95al6XTTTg" base_Element="_mNfAkLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNfAk7EXEeeP95al6XTTTg" base_Element="_mNfAkrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNfnoLEXEeeP95al6XTTTg" base_Element="_mNfAlLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNfnorEXEeeP95al6XTTTg" base_Element="_mNfnobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNgOs7EXEeeP95al6XTTTg" base_Element="_mNfno7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNg1wLEXEeeP95al6XTTTg" base_Element="_mNgOtbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNg1w7EXEeeP95al6XTTTg" base_Element="_mNg1wbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNhc0rEXEeeP95al6XTTTg" base_Element="_mNhc0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNiD4LEXEeeP95al6XTTTg" base_Element="_mNhc07EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNiq8bEXEeeP95al6XTTTg" base_Element="_mNiD47EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNjSALEXEeeP95al6XTTTg" base_Element="_mNiq87EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mNj5ELEXEeeP95al6XTTTg" genericsValue="Map&lt;String, String>" base_Element="_mNjSArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNj5ErEXEeeP95al6XTTTg" base_Element="_mNjSArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNkgILEXEeeP95al6XTTTg" base_Element="_mNj5E7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mNkgIrEXEeeP95al6XTTTg" genericsValue="Token" base_Element="_mNkgIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNlHMLEXEeeP95al6XTTTg" base_Element="_mNkgIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mNluQbEXEeeP95al6XTTTg" genericsValue="String" base_Element="_mNluQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNmVULEXEeeP95al6XTTTg" base_Element="_mNluQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNmVUrEXEeeP95al6XTTTg" base_Element="_mNmVUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNm8YLEXEeeP95al6XTTTg" base_Element="_mNmVU7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNoKgLEXEeeP95al6XTTTg" base_Element="_mNnjcrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNoKhLEXEeeP95al6XTTTg" base_Element="_mNoKgrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNoxkLEXEeeP95al6XTTTg" base_Element="_mNoKhrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNoxkrEXEeeP95al6XTTTg" base_Element="_mNoxkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNpYorEXEeeP95al6XTTTg" base_Element="_mNpYoLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNp_sLEXEeeP95al6XTTTg" base_Element="_mNpYpLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNp_srEXEeeP95al6XTTTg" base_Element="_mNpYpLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Array xmi:id="_mNp_tbEXEeeP95al6XTTTg" base_Element="_mNp_s7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNqmwbEXEeeP95al6XTTTg" base_Element="_mNp_s7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNrN0rEXEeeP95al6XTTTg" base_Element="_mNrN0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNrN1LEXEeeP95al6XTTTg" base_Element="_mNrN07EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNr04bEXEeeP95al6XTTTg" base_Element="_mNr04LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNr047EXEeeP95al6XTTTg" base_Element="_mNr04rEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNsb8LEXEeeP95al6XTTTg" base_Element="_mNr05LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNsb8rEXEeeP95al6XTTTg" base_Element="_mNsb8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Generics xmi:id="_mNtDALEXEeeP95al6XTTTg" genericsValue="TInst" base_Element="_mNsb87EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNtDAbEXEeeP95al6XTTTg" base_Element="_mNsb87EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNtqELEXEeeP95al6XTTTg" base_Element="_mNtDArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNtqErEXEeeP95al6XTTTg" base_Element="_mNtqEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNuRILEXEeeP95al6XTTTg" base_Element="_mNtqE7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNuRIrEXEeeP95al6XTTTg" base_Element="_mNuRIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNuRJLEXEeeP95al6XTTTg" base_Element="_mNuRI7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNu4MbEXEeeP95al6XTTTg" base_Element="_mNu4MLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNu4M7EXEeeP95al6XTTTg" base_Element="_mNu4MrEXEeeP95al6XTTTg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mNvfQLEXEeeP95al6XTTTg" base_Element="_mNu4NLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOOAYLEXEeeP95al6XTTTg" base_Element="_mONZULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOOncLEXEeeP95al6XTTTg" base_Element="_mOOAYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOPOgLEXEeeP95al6XTTTg" base_Element="_mOOncbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOPOg7EXEeeP95al6XTTTg" base_Element="_mOPOgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOP1krEXEeeP95al6XTTTg" base_Element="_mOP1kLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOQcoLEXEeeP95al6XTTTg" base_Element="_mOP1k7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mORDsLEXEeeP95al6XTTTg" base_Element="_mOQcobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mORqwLEXEeeP95al6XTTTg" base_Element="_mORDsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mORqw7EXEeeP95al6XTTTg" base_Element="_mORqwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOSR0LEXEeeP95al6XTTTg" base_Element="_mORqxLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOS44LEXEeeP95al6XTTTg" base_Element="_mOSR0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOTf8LEXEeeP95al6XTTTg" base_Element="_mOS44bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOUHALEXEeeP95al6XTTTg" base_Element="_mOTf8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOUuELEXEeeP95al6XTTTg" base_Element="_mOUHAbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOUuE7EXEeeP95al6XTTTg" base_Element="_mOUuEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOVVILEXEeeP95al6XTTTg" base_Element="_mOUuFLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOV8MLEXEeeP95al6XTTTg" base_Element="_mOVVIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOV8M7EXEeeP95al6XTTTg" base_Element="_mOV8MbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOWjQrEXEeeP95al6XTTTg" base_Element="_mOWjQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOXKULEXEeeP95al6XTTTg" base_Element="_mOWjQ7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOXxYLEXEeeP95al6XTTTg" base_Element="_mOXKUbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOYYcLEXEeeP95al6XTTTg" base_Element="_mOXxYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOY_gLEXEeeP95al6XTTTg" base_Element="_mOYYcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOZmkLEXEeeP95al6XTTTg" base_Element="_mOY_gbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOaNoLEXEeeP95al6XTTTg" base_Element="_mOZmkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOa0sLEXEeeP95al6XTTTg" base_Element="_mOaNobEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOa0s7EXEeeP95al6XTTTg" base_Element="_mOa0sbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mObbwLEXEeeP95al6XTTTg" base_Element="_mOa0tLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOcC0LEXEeeP95al6XTTTg" base_Element="_mObbwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOcp4LEXEeeP95al6XTTTg" base_Element="_mOcC0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOdQ8LEXEeeP95al6XTTTg" base_Element="_mOcp4bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOdQ87EXEeeP95al6XTTTg" base_Element="_mOdQ8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOd4ALEXEeeP95al6XTTTg" base_Element="_mOdQ9LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOefELEXEeeP95al6XTTTg" base_Element="_mOd4AbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOfGILEXEeeP95al6XTTTg" base_Element="_mOefEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOfGI7EXEeeP95al6XTTTg" base_Element="_mOfGIbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOftMrEXEeeP95al6XTTTg" base_Element="_mOftMLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOgUQLEXEeeP95al6XTTTg" base_Element="_mOftM7EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOg7ULEXEeeP95al6XTTTg" base_Element="_mOgUQbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOhiYLEXEeeP95al6XTTTg" base_Element="_mOg7UbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOiJcLEXEeeP95al6XTTTg" base_Element="_mOhiYbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOiwgLEXEeeP95al6XTTTg" base_Element="_mOiJcbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOjXkLEXEeeP95al6XTTTg" base_Element="_mOiwgbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOj-oLEXEeeP95al6XTTTg" base_Element="_mOjXkbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOklsLEXEeeP95al6XTTTg" base_Element="_mOj-obEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOlMwLEXEeeP95al6XTTTg" base_Element="_mOklsbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOlMw7EXEeeP95al6XTTTg" base_Element="_mOlMwbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOlz0LEXEeeP95al6XTTTg" base_Element="_mOlMxLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOlz07EXEeeP95al6XTTTg" base_Element="_mOlz0bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOma4rEXEeeP95al6XTTTg" base_Element="_mOma4LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOnB8LEXEeeP95al6XTTTg" base_Element="_mOma47EXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOnB87EXEeeP95al6XTTTg" base_Element="_mOnB8bEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOnpAbEXEeeP95al6XTTTg" base_Element="_mOnB9LEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOoQELEXEeeP95al6XTTTg" base_Element="_mOnpArEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOoQE7EXEeeP95al6XTTTg" base_Element="_mOoQEbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOo3ILEXEeeP95al6XTTTg" base_Element="_mOoQFLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOpeMLEXEeeP95al6XTTTg" base_Element="_mOo3IbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOpeM7EXEeeP95al6XTTTg" base_Element="_mOpeMbEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOqFQrEXEeeP95al6XTTTg" base_Element="_mOqFQLEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOqsUrEXEeeP95al6XTTTg" base_Element="_mOqsULEXEeeP95al6XTTTg"/>
  <UMLLabProfile:Reference xmi:id="_mOrTYLEXEeeP95al6XTTTg" base_Element="_mOqsU7EXEeeP95al6XTTTg"/>
</xmi:XMI>
