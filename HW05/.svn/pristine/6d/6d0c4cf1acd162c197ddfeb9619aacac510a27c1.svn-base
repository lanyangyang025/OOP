<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_144) on Tue Oct 03 10:13:09 CDT 2017 -->
<title>I-Index</title>
<meta name="date" content="2017-10-03">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="I-Index";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-7.html">Prev Letter</a></li>
<li><a href="index-9.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-files/index-8.html" target="_top">Frames</a></li>
<li><a href="index-8.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">I</a>&nbsp;<a href="index-9.html">K</a>&nbsp;<a href="index-10.html">L</a>&nbsp;<a href="index-11.html">M</a>&nbsp;<a href="index-12.html">N</a>&nbsp;<a href="index-13.html">O</a>&nbsp;<a href="index-14.html">P</a>&nbsp;<a href="index-15.html">R</a>&nbsp;<a href="index-16.html">S</a>&nbsp;<a href="index-17.html">T</a>&nbsp;<a href="index-18.html">U</a>&nbsp;<a href="index-19.html">V</a>&nbsp;<a href="index-20.html">W</a>&nbsp;<a href="index-21.html">_</a>&nbsp;<a name="I:I">
<!--   -->
</a>
<h2 class="title">I</h2>
<dl>
<dt><span class="memberNameLink"><a href="../model/strategy/interact/MultipleInteractStrategy.html#i1">i1</a></span> - Variable in class model.strategy.interact.<a href="../model/strategy/interact/MultipleInteractStrategy.html" title="class in model.strategy.interact">MultipleInteractStrategy</a></dt>
<dd>
<div class="block">An interact strategy</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/interact/MultipleInteractStrategy.html#i2">i2</a></span> - Variable in class model.strategy.interact.<a href="../model/strategy/interact/MultipleInteractStrategy.html" title="class in model.strategy.interact">MultipleInteractStrategy</a></dt>
<dd>
<div class="block">An interact strategy</div>
</dd>
<dt><a href="../model/IBallCmd.html" title="interface in model"><span class="typeNameLink">IBallCmd</span></a> - Interface in <a href="../model/package-summary.html">model</a></dt>
<dd>
<div class="block">The interface of the command of the ball</div>
</dd>
<dt><a href="../util/IDispatcher.html" title="interface in util"><span class="typeNameLink">IDispatcher</span></a>&lt;<a href="../util/IDispatcher.html" title="type parameter in IDispatcher">TDispMsg</a>&gt; - Interface in <a href="../util/package-summary.html">util</a></dt>
<dd>
<div class="block">An dispatcher of messages of type TDispMsg to its registered IObserver objects.</div>
</dd>
<dt><a href="../model/strategy/interact/IInteractStrategy.html" title="interface in model.strategy.interact"><span class="typeNameLink">IInteractStrategy</span></a> - Interface in <a href="../model/strategy/interact/package-summary.html">model.strategy.interact</a></dt>
<dd>
<div class="block">Interact Strategy to handle the interaction with different balls</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/ImagePaintStrategy.html#image">image</a></span> - Variable in class model.strategy.paint.<a href="../model/strategy/paint/ImagePaintStrategy.html" title="class in model.strategy.paint">ImagePaintStrategy</a></dt>
<dd>
<div class="block">An image object to store the image</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/ImagePaintStrategy.html#imageObs">imageObs</a></span> - Variable in class model.strategy.paint.<a href="../model/strategy/paint/ImagePaintStrategy.html" title="class in model.strategy.paint">ImagePaintStrategy</a></dt>
<dd>
<div class="block">An image observer</div>
</dd>
<dt><a href="../model/strategy/paint/ImagePaintStrategy.html" title="class in model.strategy.paint"><span class="typeNameLink">ImagePaintStrategy</span></a> - Class in <a href="../model/strategy/paint/package-summary.html">model.strategy.paint</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/ImagePaintStrategy.html#ImagePaintStrategy-java.lang.String-double-">ImagePaintStrategy(String, double)</a></span> - Constructor for class model.strategy.paint.<a href="../model/strategy/paint/ImagePaintStrategy.html" title="class in model.strategy.paint">ImagePaintStrategy</a></dt>
<dd>
<div class="block">Constructor for the image paint strategy</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/ImagePaintStrategy.html#ImagePaintStrategy-java.awt.geom.AffineTransform-java.lang.String-double-">ImagePaintStrategy(AffineTransform, String, double)</a></span> - Constructor for class model.strategy.paint.<a href="../model/strategy/paint/ImagePaintStrategy.html" title="class in model.strategy.paint">ImagePaintStrategy</a></dt>
<dd>
<div class="block">Constructor for the image paint strategy</div>
</dd>
<dt><a href="../model/IModel2ViewAdapter.html" title="interface in model"><span class="typeNameLink">IModel2ViewAdapter</span></a> - Interface in <a href="../model/package-summary.html">model</a></dt>
<dd>
<div class="block">Interface that from Ball Model to View that enables model to talk to view</div>
</dd>
<dt><a href="../view/IModelPaintAdapter.html" title="interface in view"><span class="typeNameLink">IModelPaintAdapter</span></a> - Interface in <a href="../view/package-summary.html">view</a></dt>
<dd>
<div class="block">An interface that talks to model to paint</div>
</dd>
<dt><a href="../view/IModelPaintAdapter.NullFactory.html" title="class in view"><span class="typeNameLink">IModelPaintAdapter.NullFactory</span></a> - Class in <a href="../view/package-summary.html">view</a></dt>
<dd>
<div class="block">Null factory to make a no-op IModelPaintAdatper</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/update/CollideStrategy.html#impulse-java.awt.Point-java.awt.Point-java.awt.Point-java.awt.Point-double-double-double-">impulse(Point, Point, Point, Point, double, double, double)</a></span> - Method in class model.strategy.update.<a href="../model/strategy/update/CollideStrategy.html" title="class in model.strategy.update">CollideStrategy</a></dt>
<dd>
<div class="block">Calculates the impulse (change in momentum) of the collision in the
 direction from the source to the target This method calculates the
 impulse on the source ball.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/ADecoratorPaintStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.paint.<a href="../model/strategy/paint/ADecoratorPaintStrategy.html" title="class in model.strategy.paint">ADecoratorPaintStrategy</a></dt>
<dd>
<div class="block">Init the strategy</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/APaintStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.paint.<a href="../model/strategy/paint/APaintStrategy.html" title="class in model.strategy.paint">APaintStrategy</a></dt>
<dd>
<div class="block">Init the strategy</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/ImagePaintStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.paint.<a href="../model/strategy/paint/ImagePaintStrategy.html" title="class in model.strategy.paint">ImagePaintStrategy</a></dt>
<dd>
<div class="block">Init the strategy</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/IPaintStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in interface model.strategy.paint.<a href="../model/strategy/paint/IPaintStrategy.html" title="interface in model.strategy.paint">IPaintStrategy</a></dt>
<dd>
<div class="block">used to initialize the strategy and host ball.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/MultiPaintStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.paint.<a href="../model/strategy/paint/MultiPaintStrategy.html" title="class in model.strategy.paint">MultiPaintStrategy</a></dt>
<dd>
<div class="block">Init the strategy</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/paint/SquarePaintStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.paint.<a href="../model/strategy/paint/SquarePaintStrategy.html" title="class in model.strategy.paint">SquarePaintStrategy</a></dt>
<dd>
<div class="block">By default, do nothing for initialization.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/update/AUpdateStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.update.<a href="../model/strategy/update/AUpdateStrategy.html" title="class in model.strategy.update">AUpdateStrategy</a></dt>
<dd>
<div class="block">Init the strategy</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/update/IUpdateStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in interface model.strategy.update.<a href="../model/strategy/update/IUpdateStrategy.html" title="interface in model.strategy.update">IUpdateStrategy</a></dt>
<dd>
<div class="block">Initializes the strategy.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/update/KillStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.update.<a href="../model/strategy/update/KillStrategy.html" title="class in model.strategy.update">KillStrategy</a></dt>
<dd>
<div class="block">Init the strategy for the ball</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/update/MultiStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.update.<a href="../model/strategy/update/MultiStrategy.html" title="class in model.strategy.update">MultiStrategy</a></dt>
<dd>
<div class="block">Init the strategy for the ball</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/update/SplitStrategy.html#init-model.ball.Ball-">init(Ball)</a></span> - Method in class model.strategy.update.<a href="../model/strategy/update/SplitStrategy.html" title="class in model.strategy.update">SplitStrategy</a></dt>
<dd>
<div class="block">Init the strategy for the ball</div>
</dd>
<dt><span class="memberNameLink"><a href="../view/BallGUI.html#initGUI--">initGUI()</a></span> - Method in class view.<a href="../view/BallGUI.html" title="class in view">BallGUI</a></dt>
<dd>
<div class="block">Initiate the GUI</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/interact/IInteractStrategy.html#interact-model.ball.Ball-model.ball.Ball-util.IDispatcher-">interact(Ball, Ball, IDispatcher&lt;IBallCmd&gt;)</a></span> - Method in interface model.strategy.interact.<a href="../model/strategy/interact/IInteractStrategy.html" title="interface in model.strategy.interact">IInteractStrategy</a></dt>
<dd>
<div class="block">Performs a directed interaction between the context ball and the target Ball from the 
 perspective of the context Ball.</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/strategy/interact/MultipleInteractStrategy.html#interact-model.ball.Ball-model.ball.Ball-util.IDispatcher-">interact(Ball, Ball, IDispatcher&lt;IBallCmd&gt;)</a></span> - Method in class model.strategy.interact.<a href="../model/strategy/interact/MultipleInteractStrategy.html" title="class in model.strategy.interact">MultipleInteractStrategy</a></dt>
<dd>
<div class="block">Interact with other ball</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/ball/Ball.html#interactStrategy">interactStrategy</a></span> - Variable in class model.ball.<a href="../model/ball/Ball.html" title="class in model.ball">Ball</a></dt>
<dd>
<div class="block">The strategy to interact with other balls</div>
</dd>
<dt><span class="memberNameLink"><a href="../model/ball/Ball.html#interactWith-model.ball.Ball-util.IDispatcher-">interactWith(Ball, IDispatcher&lt;IBallCmd&gt;)</a></span> - Method in class model.ball.<a href="../model/ball/Ball.html" title="class in model.ball">Ball</a></dt>
<dd>
<div class="block">Interact with another ball</div>
</dd>
<dt><a href="../util/IObserver.html" title="interface in util"><span class="typeNameLink">IObserver</span></a>&lt;<a href="../util/IObserver.html" title="type parameter in IObserver">TDispMsg</a>&gt; - Interface in <a href="../util/package-summary.html">util</a></dt>
<dd>
<div class="block">An observer for IDispatcher.</div>
</dd>
<dt><a href="../model/strategy/paint/IPaintFac.html" title="interface in model.strategy.paint"><span class="typeNameLink">IPaintFac</span></a> - Interface in <a href="../model/strategy/paint/package-summary.html">model.strategy.paint</a></dt>
<dd>
<div class="block">A factory to make strategy</div>
</dd>
<dt><a href="../model/strategy/paint/IPaintStrategy.html" title="interface in model.strategy.paint"><span class="typeNameLink">IPaintStrategy</span></a> - Interface in <a href="../model/strategy/paint/package-summary.html">model.strategy.paint</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../model/strategy/paint/IPaintStrategy.NullFactory.html" title="class in model.strategy.paint"><span class="typeNameLink">IPaintStrategy.NullFactory</span></a> - Class in <a href="../model/strategy/paint/package-summary.html">model.strategy.paint</a></dt>
<dd>
<div class="block">No-op "null" factory
 See the web page on the Null Object Design Pattern at http://cnx.org/content/m17227/latest/</div>
</dd>
<dt><a href="../util/IRandomizer.html" title="interface in util"><span class="typeNameLink">IRandomizer</span></a> - Interface in <a href="../util/package-summary.html">util</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../model/strategy/paint/shape/IShapeFactory.html" title="interface in model.strategy.paint.shape"><span class="typeNameLink">IShapeFactory</span></a> - Interface in <a href="../model/strategy/paint/shape/package-summary.html">model.strategy.paint.shape</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update"><span class="typeNameLink">IStrategyFac</span></a>&lt;<a href="../model/strategy/update/IStrategyFac.html" title="type parameter in IStrategyFac">TDispMsg</a>&gt; - Interface in <a href="../model/strategy/update/package-summary.html">model.strategy.update</a></dt>
<dd>
<div class="block">The factory that makes a strategy at a time</div>
</dd>
<dt><a href="../model/strategy/update/IUpdateStrategy.html" title="interface in model.strategy.update"><span class="typeNameLink">IUpdateStrategy</span></a>&lt;<a href="../model/strategy/update/IUpdateStrategy.html" title="type parameter in IUpdateStrategy">TDispMsg</a>&gt; - Interface in <a href="../model/strategy/update/package-summary.html">model.strategy.update</a></dt>
<dd>
<div class="block">The strategy that runs when a Ball updates its state.</div>
</dd>
<dt><a href="../model/strategy/update/IUpdateStrategy.NullFactory.html" title="class in model.strategy.update"><span class="typeNameLink">IUpdateStrategy.NullFactory</span></a>&lt;<a href="../model/strategy/update/IUpdateStrategy.NullFactory.html" title="type parameter in IUpdateStrategy.NullFactory">TDispMsg</a>&gt; - Class in <a href="../model/strategy/update/package-summary.html">model.strategy.update</a></dt>
<dd>
<div class="block">A factory for a typed null strategy object.<br>
 Usage: instantiate this factory class using the desired TDispMsg type and then call its make() method
 to create the correctly typed null strategy object.</div>
</dd>
<dt><a href="../view/IView2ModelAdapter.html" title="interface in view"><span class="typeNameLink">IView2ModelAdapter</span></a>&lt;<a href="../view/IView2ModelAdapter.html" title="type parameter in IView2ModelAdapter">T</a>&gt; - Interface in <a href="../view/package-summary.html">view</a></dt>
<dd>
<div class="block">The interface of the adapter from the view to the model that enables the view to talk to the model.</div>
</dd>
<dt><a href="../view/IView2ModelAdapter.NullFactory.html" title="class in view"><span class="typeNameLink">IView2ModelAdapter.NullFactory</span></a>&lt;<a href="../view/IView2ModelAdapter.NullFactory.html" title="type parameter in IView2ModelAdapter.NullFactory">T</a>&gt; - Class in <a href="../view/package-summary.html">view</a></dt>
<dd>
<div class="block">No-op factory implementation of IView2ModelAdapter
 See the web page on the Null Object Design Pattern at http://cnx.org/content/m17227/latest/</div>
</dd>
</dl>
<a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">I</a>&nbsp;<a href="index-9.html">K</a>&nbsp;<a href="index-10.html">L</a>&nbsp;<a href="index-11.html">M</a>&nbsp;<a href="index-12.html">N</a>&nbsp;<a href="index-13.html">O</a>&nbsp;<a href="index-14.html">P</a>&nbsp;<a href="index-15.html">R</a>&nbsp;<a href="index-16.html">S</a>&nbsp;<a href="index-17.html">T</a>&nbsp;<a href="index-18.html">U</a>&nbsp;<a href="index-19.html">V</a>&nbsp;<a href="index-20.html">W</a>&nbsp;<a href="index-21.html">_</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-7.html">Prev Letter</a></li>
<li><a href="index-9.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-files/index-8.html" target="_top">Frames</a></li>
<li><a href="index-8.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
