<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_144) on Mon Oct 02 21:06:09 CDT 2017 -->
<title>BallModel</title>
<meta name="date" content="2017-10-02">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="BallModel";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BallModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../model/IBallCmd.html" title="interface in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallModel.html" target="_top">Frames</a></li>
<li><a href="BallModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class BallModel" class="title">Class BallModel</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.BallModel</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">BallModel</span>
extends java.lang.Object</pre>
<div class="block">The ballModel of the MVC system</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>YiqingLu, HaoyuanYue</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../util/IDispatcher.html" title="interface in util">IDispatcher</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_dispatcher">_dispatcher</a></span></code>
<div class="block">The generic dispatcher</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../model/IModel2ViewAdapter.html" title="interface in model">IModel2ViewAdapter</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_model2ViewAdpt">_model2ViewAdpt</a></span></code>
<div class="block">model to view adapter</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../model/strategy/update/SwitchStrategy.html" title="class in model.strategy.update">SwitchStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_switcher">_switcher</a></span></code>
<div class="block">Switcher for switching strategy</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private javax.swing.Timer</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_timer">_timer</a></span></code>
<div class="block">lambda function to use the timer to regularly update the view</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#Z:Z_timeSlice">_timeSlice</a></span></code>
<div class="block">the delay of the timer</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/BallModel.html#BallModel-model.IModel2ViewAdapter-">BallModel</a></span>(<a href="../model/IModel2ViewAdapter.html" title="interface in model">IModel2ViewAdapter</a>&nbsp;iModel2ViewAdapter)</code>
<div class="block">Constructor of ball model</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#addABall-model.strategy.update.IStrategyFac-model.strategy.paint.IPaintFac-boolean-">addABall</a></span>(<a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;factory,
        <a href="../model/strategy/paint/IPaintFac.html" title="interface in model.strategy.paint">IPaintFac</a>&nbsp;paint_fac,
        boolean&nbsp;switchable)</code>
<div class="block">the method to add a new ball to dispatcher</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="../model/strategy/paint/IPaintFac.html" title="interface in model.strategy.paint">IPaintFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#addPaintFac-java.lang.String-">addPaintFac</a></span>(java.lang.String&nbsp;strategyName)</code>
<div class="block">create a new paint strategy factory that makes the strategy named by the input string</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#addStrategyFac-java.lang.String-">addStrategyFac</a></span>(java.lang.String&nbsp;strategyName)</code>
<div class="block">create a new strategy factory that makes the strategy named by the input string</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#clearAll--">clearAll</a></span>()</code>
<div class="block">the method to remove all the ball instance from the dispatcher</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#combineStrategyFac-model.strategy.update.IStrategyFac-model.strategy.update.IStrategyFac-">combineStrategyFac</a></span>(<a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;f1,
                  <a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;f2)</code>
<div class="block">combine two strategy factory into one</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>java.awt.Component</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#getComponent--">getComponent</a></span>()</code>
<div class="block">get the GUI component that the balls will be drawn on</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>private <a href="../model/strategy/paint/IPaintStrategy.html" title="interface in model.strategy.paint">IPaintStrategy</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#loadPaintStrategy-java.lang.String-">loadPaintStrategy</a></span>(java.lang.String&nbsp;strategyName)</code>
<div class="block">The following method returns an instance of an IPaintStrategy, given a fully qualified class name (package.classname) of
 a subclass of it.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>private <a href="../model/strategy/update/IUpdateStrategy.html" title="interface in model.strategy.update">IUpdateStrategy</a>&lt;?&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#loadStrategy-java.lang.String-">loadStrategy</a></span>(java.lang.String&nbsp;strategyName)</code>
<div class="block">The following method returns an instance of an IUpdateStrategy, given a fully qualified class name (package.classname) of
 a subclass of it.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#start--">start</a></span>()</code>
<div class="block">start the ball model</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#switchAll-model.strategy.update.IStrategyFac-">switchAll</a></span>(<a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;fac)</code>
<div class="block">switch the strategies of all the switchers to a new strategy</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#update-java.awt.Graphics-">update</a></span>(java.awt.Graphics&nbsp;g)</code>
<div class="block">This is the method that is called by the view's adapter to the model, i.e.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="Z:Z_model2ViewAdpt">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_model2ViewAdpt</h4>
<pre>private&nbsp;<a href="../model/IModel2ViewAdapter.html" title="interface in model">IModel2ViewAdapter</a> _model2ViewAdpt</pre>
<div class="block">model to view adapter</div>
</li>
</ul>
<a name="Z:Z_timeSlice">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_timeSlice</h4>
<pre>private&nbsp;int _timeSlice</pre>
<div class="block">the delay of the timer</div>
</li>
</ul>
<a name="Z:Z_timer">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_timer</h4>
<pre>private&nbsp;javax.swing.Timer _timer</pre>
<div class="block">lambda function to use the timer to regularly update the view</div>
</li>
</ul>
<a name="Z:Z_dispatcher">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>_dispatcher</h4>
<pre>private&nbsp;<a href="../util/IDispatcher.html" title="interface in util">IDispatcher</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt; _dispatcher</pre>
<div class="block">The generic dispatcher</div>
</li>
</ul>
<a name="Z:Z_switcher">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>_switcher</h4>
<pre>private&nbsp;<a href="../model/strategy/update/SwitchStrategy.html" title="class in model.strategy.update">SwitchStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt; _switcher</pre>
<div class="block">Switcher for switching strategy</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="BallModel-model.IModel2ViewAdapter-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>BallModel</h4>
<pre>public&nbsp;BallModel(<a href="../model/IModel2ViewAdapter.html" title="interface in model">IModel2ViewAdapter</a>&nbsp;iModel2ViewAdapter)</pre>
<div class="block">Constructor of ball model</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>iModel2ViewAdapter</code> - model to view adapter</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="update-java.awt.Graphics-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>update</h4>
<pre>public&nbsp;void&nbsp;update(java.awt.Graphics&nbsp;g)</pre>
<div class="block">This is the method that is called by the view's adapter to the model, i.e. is called by IView2ModelAdapter.paint().
 This method will update the sprites's painted locations by painting all the sprites
 onto the given Graphics object.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>g</code> - The Graphics object from the view's paintComponent() call.</dd>
</dl>
</li>
</ul>
<a name="start--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>start</h4>
<pre>public&nbsp;void&nbsp;start()</pre>
<div class="block">start the ball model</div>
</li>
</ul>
<a name="getComponent--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getComponent</h4>
<pre>public&nbsp;java.awt.Component&nbsp;getComponent()</pre>
<div class="block">get the GUI component that the balls will be drawn on</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the painting GUI component</dd>
</dl>
</li>
</ul>
<a name="loadStrategy-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadStrategy</h4>
<pre>private&nbsp;<a href="../model/strategy/update/IUpdateStrategy.html" title="interface in model.strategy.update">IUpdateStrategy</a>&lt;?&gt;&nbsp;loadStrategy(java.lang.String&nbsp;strategyName)</pre>
<div class="block">The following method returns an instance of an IUpdateStrategy, given a fully qualified class name (package.classname) of
 a subclass of it.
 The method assumes that there is only one constructor for the supplied class that has the same *number* of
 input parameters as specified in the args array and that it conforms to a specific
 signature, i.e. specific order and types of input parameters in the args array.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategyName</code> - A string that is the fully qualified class name of the desired object</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>An instance of the supplied class.</dd>
</dl>
</li>
</ul>
<a name="loadPaintStrategy-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadPaintStrategy</h4>
<pre>private&nbsp;<a href="../model/strategy/paint/IPaintStrategy.html" title="interface in model.strategy.paint">IPaintStrategy</a>&nbsp;loadPaintStrategy(java.lang.String&nbsp;strategyName)</pre>
<div class="block">The following method returns an instance of an IPaintStrategy, given a fully qualified class name (package.classname) of
 a subclass of it.
 The method assumes that there is only one constructor for the supplied class that has the same *number* of
 input parameters as specified in the args array and that it conforms to a specific
 signature, i.e. specific order and types of input parameters in the args array.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategyName</code> - A string that is the fully qualified class name of the desired object</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>An instance of the supplied class.</dd>
</dl>
</li>
</ul>
<a name="addStrategyFac-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addStrategyFac</h4>
<pre>public&nbsp;<a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;addStrategyFac(java.lang.String&nbsp;strategyName)</pre>
<div class="block">create a new strategy factory that makes the strategy named by the input string</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategyName</code> - name of the strategy which the factory makes</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the factory that makes this strategy</dd>
</dl>
</li>
</ul>
<a name="addPaintFac-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addPaintFac</h4>
<pre>public&nbsp;<a href="../model/strategy/paint/IPaintFac.html" title="interface in model.strategy.paint">IPaintFac</a>&nbsp;addPaintFac(java.lang.String&nbsp;strategyName)</pre>
<div class="block">create a new paint strategy factory that makes the strategy named by the input string</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategyName</code> - name of the strategy which the factory makes</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the factory that makes this paint strategy</dd>
</dl>
</li>
</ul>
<a name="combineStrategyFac-model.strategy.update.IStrategyFac-model.strategy.update.IStrategyFac-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>combineStrategyFac</h4>
<pre>public&nbsp;<a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;combineStrategyFac(<a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;f1,
                                                 <a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;f2)</pre>
<div class="block">combine two strategy factory into one</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>f1</code> - the first factory</dd>
<dd><code>f2</code> - the second factory</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the new combined factory</dd>
</dl>
</li>
</ul>
<a name="addABall-model.strategy.update.IStrategyFac-model.strategy.paint.IPaintFac-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addABall</h4>
<pre>public&nbsp;void&nbsp;addABall(<a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;factory,
                     <a href="../model/strategy/paint/IPaintFac.html" title="interface in model.strategy.paint">IPaintFac</a>&nbsp;paint_fac,
                     boolean&nbsp;switchable)</pre>
<div class="block">the method to add a new ball to dispatcher</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>factory</code> - the factory to generate the ball's moving strategy</dd>
<dd><code>paint_fac</code> - the factory to generate the ball's paint strategy</dd>
<dd><code>switchable</code> - if the ball's strategy can be changed</dd>
</dl>
</li>
</ul>
<a name="switchAll-model.strategy.update.IStrategyFac-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>switchAll</h4>
<pre>public&nbsp;void&nbsp;switchAll(<a href="../model/strategy/update/IStrategyFac.html" title="interface in model.strategy.update">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;fac)</pre>
<div class="block">switch the strategies of all the switchers to a new strategy</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>fac</code> - the factory that will make the new strategy</dd>
</dl>
</li>
</ul>
<a name="clearAll--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>clearAll</h4>
<pre>public&nbsp;void&nbsp;clearAll()</pre>
<div class="block">the method to remove all the ball instance from the dispatcher</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BallModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../model/IBallCmd.html" title="interface in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallModel.html" target="_top">Frames</a></li>
<li><a href="BallModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
